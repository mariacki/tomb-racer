{"id":"../back-end/node_modules/tr-common/dist/events.js","dependencies":[{"name":"/home/marek/Projects/tomb_racer/back-end/node_modules/tr-common/dist/events.js.map","includedInParent":true,"mtime":1587182653263},{"name":"/home/marek/Projects/tomb_racer/back-end/node_modules/tr-common/events.ts","includedInParent":true,"mtime":1587182653263},{"name":"/home/marek/Projects/tomb_racer/front-end/package.json","includedInParent":true,"mtime":1587182653267},{"name":"/home/marek/Projects/tomb_racer/back-end/node_modules/tr-common/package.json","includedInParent":true,"mtime":1587182653263}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EventType;\n(function (EventType) {\n    EventType[\"LOGIN_SUCCESS\"] = \"LOGIN-SUCCESS\";\n    EventType[\"GAME_JOINED\"] = \"GAME-JOINED\";\n    EventType[\"GAME_CREATED\"] = \"GAME-CREATED\";\n    EventType[\"PLAYER_JOINED\"] = \"PLAYER-JOINED\";\n    EventType[\"PLAYER_LEFT\"] = \"PLAYER-LEFT\";\n    EventType[\"GAME_STARTED\"] = \"GAME-STARTED\";\n    EventType[\"PLAYER_MOVED\"] = \"PLAYER-MOVED\";\n    EventType[\"PLAYER_HIT\"] = \"PLAYER-HIT\";\n    EventType[\"NEXT_TURN\"] = \"NEXT-TURN\";\n    EventType[\"PLAYER_DIED\"] = \"PLAYER-DIED\";\n    EventType[\"GAME_FINISHED\"] = \"GAME-FINISHED\";\n})(EventType = exports.EventType || (exports.EventType = {}));\nvar ErrorType;\n(function (ErrorType) {\n    ErrorType[\"FIELD_REQUIRED\"] = \"FIELD REQUIRED\";\n    ErrorType[\"FIELD_NOT_UNIQUE\"] = \"FIELD NOT UNIQUE\";\n    ErrorType[\"GAME_NOT_FOUND\"] = \"GAME NOT FOUND\";\n    ErrorType[\"NUMBER_OF_STARTING_POINTS_EXCEEDED\"] = \"NUMBER OF STARTING POINTS EXCEEDED\";\n    ErrorType[\"USER_NOT_FOUND\"] = \"USER NOT FOUND\";\n    ErrorType[\"CANNOT_START_GAME\"] = \"CANNOT START GAME\";\n    ErrorType[\"GAME_STARTED_TWICE\"] = \"GAME STARTED TWICE\";\n    ErrorType[\"INVALID_BOARD\"] = \"INVALID BOARD\";\n    ErrorType[\"GAME_NOT_STARTED_YET\"] = \"GAME_NOT_STARTED_YET\";\n    ErrorType[\"INCORRECT_PLAYER_ACTION\"] = \"INCORRECT_PLAYER_ACTION\";\n    ErrorType[\"INVALID_PATH\"] = \"INVALID_PATH\";\n    ErrorType[\"PATH_LENGHT_INCORRECT\"] = \"PATH LENGTH INCORRECT\";\n})(ErrorType = exports.ErrorType || (exports.ErrorType = {}));\n"},"sourceMaps":{"js":{"version":3,"file":"events.js","sourceRoot":"","sources":["../events.ts"],"names":[],"mappings":";;AASA,IAAY,SAYX;AAZD,WAAY,SAAS;IACjB,4CAA+B,CAAA;IAC/B,wCAA2B,CAAA;IAC3B,0CAA6B,CAAA;IAC7B,4CAA+B,CAAA;IAC/B,wCAA2B,CAAA;IAC3B,0CAA6B,CAAA;IAC7B,0CAA6B,CAAA;IAC7B,sCAAyB,CAAA;IACzB,oCAAuB,CAAA;IACvB,wCAA2B,CAAA;IAC3B,4CAA+B,CAAA;AACnC,CAAC,EAZW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAYpB;AAED,IAAY,SAaX;AAbD,WAAY,SAAS;IACjB,8CAAiC,CAAA;IACjC,kDAAqC,CAAA;IACrC,8CAAiC,CAAA;IACjC,sFAAyE,CAAA;IACzE,8CAAiC,CAAA;IACjC,oDAAuC,CAAA;IACvC,sDAAyC,CAAA;IACzC,4CAA+B,CAAA;IAC/B,0DAA6C,CAAA;IAC7C,gEAAmD,CAAA;IACnD,0CAA6B,CAAA;IAC7B,4DAA+C,CAAA;AACnD,CAAC,EAbW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAapB","sourcesContent":["import { \n    Player, \n    Position, \n    GameId, \n    UserId,\n    Game,\n    Turn, \n} from './data_types';\n\nexport enum EventType {\n    LOGIN_SUCCESS = \"LOGIN-SUCCESS\",\n    GAME_JOINED = \"GAME-JOINED\",\n    GAME_CREATED = \"GAME-CREATED\",\n    PLAYER_JOINED = \"PLAYER-JOINED\",\n    PLAYER_LEFT = \"PLAYER-LEFT\",\n    GAME_STARTED = \"GAME-STARTED\",\n    PLAYER_MOVED = \"PLAYER-MOVED\",\n    PLAYER_HIT = \"PLAYER-HIT\",\n    NEXT_TURN = \"NEXT-TURN\",\n    PLAYER_DIED = \"PLAYER-DIED\",\n    GAME_FINISHED = \"GAME-FINISHED\"\n}\n\nexport enum ErrorType {\n    FIELD_REQUIRED = \"FIELD REQUIRED\",\n    FIELD_NOT_UNIQUE = \"FIELD NOT UNIQUE\",\n    GAME_NOT_FOUND = \"GAME NOT FOUND\",\n    NUMBER_OF_STARTING_POINTS_EXCEEDED = \"NUMBER OF STARTING POINTS EXCEEDED\",\n    USER_NOT_FOUND = \"USER NOT FOUND\",\n    CANNOT_START_GAME = \"CANNOT START GAME\",\n    GAME_STARTED_TWICE = \"GAME STARTED TWICE\",\n    INVALID_BOARD = \"INVALID BOARD\",\n    GAME_NOT_STARTED_YET = \"GAME_NOT_STARTED_YET\",\n    INCORRECT_PLAYER_ACTION = \"INCORRECT_PLAYER_ACTION\",\n    INVALID_PATH = \"INVALID_PATH\",\n    PATH_LENGHT_INCORRECT = \"PATH LENGTH INCORRECT\"\n}\n\nexport interface Event\n{\n    isError: boolean,\n    type: EventType | ErrorType, \n    origin: GameId | undefined,\n}\n\nexport interface GameCreated extends Event\n{\n    gameName: string,\n    gameId: string,\n    numberOfPlayers: number\n}\n\nexport interface GameFinished extends Event\n{\n    userId: string   \n}\n\nexport interface GameInfo {\n    id: string, \n    name: string\n}\n\nexport interface SuccessfullLogin extends Event\n{\n    games: GameInfo[],\n    userId: string;\n}\n\nexport interface TurnStarted extends Event\n{\n    turn: Turn\n}\n\nexport interface PlayerDied extends Event\n{\n    userId: string,\n    movedTo: Position\n    hp: number\n}\n\nexport interface PlayerHit extends Event\n{\n    userId: string,\n    hpTaken: number,\n    currentHp: number,\n}\n\nexport interface PlayerJoined extends Event\n{\n    player: Player\n}\n\nexport interface PlayerLeft extends Event\n{\n    userId: UserId\n}\n\nexport interface PlayerMoved extends Event\n{\n    userId: UserId,\n    pathUsed: Position[]\n}\n\nexport interface GameJoined extends Event\n{\n    currentState: Game;\n}\n\nexport interface ErrorEvent extends Event\n{\n    message: string;\n}\n\nexport interface InvalidGameData extends ErrorEvent\n{\n    erroneusFieldName: string;\n}\n\nexport interface GameNameDuplicated extends ErrorEvent\n{\n    gameName: string\n}\n\nexport interface GameNotFound extends ErrorEvent\n{\n    gameId: GameId\n}\n\nexport interface StartingPointsExceeded extends ErrorEvent\n{\n    maxNumberOfPlayers: number\n}\n\nexport interface InvalidPath extends ErrorEvent\n{\n    invalidSteps: Position[]\n}\n\nexport interface PathLengthIncorrect extends ErrorEvent\n{\n    givenLength: number,\n    providedLength: number,\n}\n\nexport interface MinNumberOfStartingPointsNotReached extends ErrorEvent\n{\n    minNumberOfStartingPoints: number\n}\n\nexport interface IncorretPlayerAction extends ErrorEvent\n{\n    playerExecutedAction: UserId,\n    playerThatShouldExecuteAction: UserId\n}\n\nexport interface UserNotFoundInGame extends ErrorEvent\n{\n    searchedUser: UserId,\n}\n\nexport interface GameStartedTwiceBySinglePlayer extends ErrorEvent\n{\n    userId: UserId\n}\n\nexport interface CannotStartGame extends ErrorEvent\n{\n    reason: ErrorEvent\n}\n\n"]}},"error":null,"hash":"512178cb70ee0b4cf3518531442d0aab","cacheData":{"env":{}}}