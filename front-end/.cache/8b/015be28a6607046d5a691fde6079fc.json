{"id":"../back-end/src/game/errors/InvalidBoard.ts","dependencies":[{"name":"/home/marek/Projects/tomb_racer/back-end/tsconfig.json","includedInParent":true,"mtime":1586568358299},{"name":"/home/marek/Projects/tomb_racer/front-end/package.json","includedInParent":true,"mtime":1587182653267},{"name":"tr-common","loc":{"line":3,"column":28},"parent":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/InvalidBoard.ts","resolved":"/home/marek/Projects/tomb_racer/back-end/node_modules/tr-common/dist/index.js"},{"name":".","loc":{"line":4,"column":19},"parent":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/InvalidBoard.ts","resolved":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/index.ts"}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tr_common_1 = require(\"tr-common\");\n\nvar _1 = require(\".\");\n\nvar InvalidBoard = /*#__PURE__*/function (_$GameError) {\n  _inherits(InvalidBoard, _$GameError);\n\n  var _super = _createSuper(InvalidBoard);\n\n  function InvalidBoard() {\n    var _this;\n\n    _classCallCheck(this, InvalidBoard);\n\n    _this = _super.call(this, tr_common_1.ErrorType.INVALID_BOARD, undefined, \"Board does not have at least 2 stargin points\");\n    _this.minNumberOfStartingPoints = 2;\n    return _this;\n  }\n\n  return InvalidBoard;\n}(_1.GameError);\n\nexports.InvalidBoard = InvalidBoard;"},"sourceMaps":{"js":{"mappings":[{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":0}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":4}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":15}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":18}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":25}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":26}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":37}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":25,"column":38}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":27,"column":0}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":27,"column":4}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":27,"column":6}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":27,"column":9}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":27,"column":16}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":27,"column":17}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":27,"column":20}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":27,"column":21}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":29,"column":4}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":34,"column":0}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":34,"column":26}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":35,"column":0}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":37,"column":0}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":39,"column":0}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":39,"column":30}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":39,"column":41}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":39,"column":42}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":39,"column":51}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":39,"column":52}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":39,"column":65}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":39,"column":67}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":39,"column":76}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":12,"column":12},"generated":{"line":39,"column":78}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":39,"column":125}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":40,"column":0}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":40,"column":10}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":40,"column":35}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":6,"column":40},"generated":{"line":40,"column":38}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":40,"column":39}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":41,"column":0}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":14,"column":5},"generated":{"line":42,"column":0}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":4,"column":34},"generated":{"line":45,"column":2}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":4,"column":34},"generated":{"line":45,"column":4}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":4,"column":34},"generated":{"line":45,"column":5}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":0}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":7}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":8}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":20}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":23}},{"source":"../back-end/src/game/errors/InvalidBoard.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":35}}],"sources":{"../back-end/src/game/errors/InvalidBoard.ts":"import { ErrorType, MinNumberOfStartingPointsNotReached } from 'tr-common';\nimport { GameError } from '.';\n\nexport class InvalidBoard extends GameError implements MinNumberOfStartingPointsNotReached\n{\n    minNumberOfStartingPoints: number = 2;\n    \n    constructor() {\n        super(\n            ErrorType.INVALID_BOARD, \n            undefined, \n            \"Board does not have at least 2 stargin points\"\n        );\n    }\n}"},"lineCount":null}},"error":null,"hash":"af11211d9cd7b2f172a41d7ba2172482","cacheData":{"env":{}}}