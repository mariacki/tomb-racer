{"/home/marek/Projects/tomb_racer/back-end/tests/Game/CreateGame.test.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/CreateGame.test.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":42}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":54}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":44}},"8":{"start":{"line":11,"column":0},"end":{"line":83,"column":3}},"9":{"start":{"line":12,"column":16},"end":{"line":12,"column":55}},"10":{"start":{"line":13,"column":23},"end":{"line":13,"column":85}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":34}},"12":{"start":{"line":15,"column":28},"end":{"line":20,"column":5}},"13":{"start":{"line":16,"column":8},"end":{"line":19,"column":10}},"14":{"start":{"line":17,"column":12},"end":{"line":17,"column":63}},"15":{"start":{"line":18,"column":12},"end":{"line":18,"column":24}},"16":{"start":{"line":21,"column":4},"end":{"line":48,"column":7}},"17":{"start":{"line":22,"column":8},"end":{"line":35,"column":11}},"18":{"start":{"line":23,"column":30},"end":{"line":23,"column":74}},"19":{"start":{"line":24,"column":31},"end":{"line":24,"column":75}},"20":{"start":{"line":25,"column":12},"end":{"line":34,"column":15}},"21":{"start":{"line":26,"column":16},"end":{"line":26,"column":66}},"22":{"start":{"line":27,"column":16},"end":{"line":27,"column":67}},"23":{"start":{"line":29,"column":16},"end":{"line":29,"column":60}},"24":{"start":{"line":30,"column":16},"end":{"line":30,"column":75}},"25":{"start":{"line":31,"column":16},"end":{"line":31,"column":64}},"26":{"start":{"line":32,"column":16},"end":{"line":32,"column":88}},"27":{"start":{"line":33,"column":16},"end":{"line":33,"column":28}},"28":{"start":{"line":36,"column":8},"end":{"line":47,"column":11}},"29":{"start":{"line":37,"column":28},"end":{"line":37,"column":75}},"30":{"start":{"line":38,"column":12},"end":{"line":46,"column":15}},"31":{"start":{"line":39,"column":16},"end":{"line":39,"column":86}},"32":{"start":{"line":41,"column":16},"end":{"line":41,"column":60}},"33":{"start":{"line":42,"column":16},"end":{"line":44,"column":79}},"34":{"start":{"line":45,"column":16},"end":{"line":45,"column":28}},"35":{"start":{"line":49,"column":4},"end":{"line":82,"column":7}},"36":{"start":{"line":50,"column":8},"end":{"line":55,"column":11}},"37":{"start":{"line":51,"column":29},"end":{"line":51,"column":76}},"38":{"start":{"line":52,"column":12},"end":{"line":52,"column":61}},"39":{"start":{"line":53,"column":25},"end":{"line":53,"column":60}},"40":{"start":{"line":54,"column":12},"end":{"line":54,"column":67}},"41":{"start":{"line":56,"column":8},"end":{"line":61,"column":11}},"42":{"start":{"line":57,"column":29},"end":{"line":57,"column":76}},"43":{"start":{"line":58,"column":12},"end":{"line":58,"column":61}},"44":{"start":{"line":59,"column":25},"end":{"line":59,"column":60}},"45":{"start":{"line":60,"column":12},"end":{"line":60,"column":57}},"46":{"start":{"line":62,"column":8},"end":{"line":67,"column":11}},"47":{"start":{"line":63,"column":29},"end":{"line":63,"column":76}},"48":{"start":{"line":64,"column":12},"end":{"line":64,"column":61}},"49":{"start":{"line":65,"column":25},"end":{"line":65,"column":60}},"50":{"start":{"line":66,"column":12},"end":{"line":66,"column":70}},"51":{"start":{"line":68,"column":8},"end":{"line":81,"column":11}},"52":{"start":{"line":69,"column":29},"end":{"line":69,"column":76}},"53":{"start":{"line":70,"column":34},"end":{"line":77,"column":13}},"54":{"start":{"line":78,"column":12},"end":{"line":78,"column":61}},"55":{"start":{"line":79,"column":26},"end":{"line":79,"column":65}},"56":{"start":{"line":80,"column":12},"end":{"line":80,"column":61}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":21},"end":{"line":11,"column":22}},"loc":{"start":{"line":11,"column":27},"end":{"line":83,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":28},"end":{"line":15,"column":29}},"loc":{"start":{"line":15,"column":45},"end":{"line":20,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":15},"end":{"line":16,"column":16}},"loc":{"start":{"line":16,"column":26},"end":{"line":19,"column":9}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":27},"end":{"line":21,"column":28}},"loc":{"start":{"line":21,"column":33},"end":{"line":48,"column":5}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":59},"end":{"line":22,"column":60}},"loc":{"start":{"line":22,"column":65},"end":{"line":35,"column":9}},"line":22},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":36},"end":{"line":25,"column":37}},"loc":{"start":{"line":25,"column":42},"end":{"line":28,"column":13}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":28,"column":15},"end":{"line":28,"column":16}},"loc":{"start":{"line":28,"column":26},"end":{"line":34,"column":13}},"line":28},"8":{"name":"(anonymous_8)","decl":{"start":{"line":36,"column":80},"end":{"line":36,"column":81}},"loc":{"start":{"line":36,"column":86},"end":{"line":47,"column":9}},"line":36},"9":{"name":"(anonymous_9)","decl":{"start":{"line":38,"column":36},"end":{"line":38,"column":37}},"loc":{"start":{"line":38,"column":42},"end":{"line":40,"column":13}},"line":38},"10":{"name":"(anonymous_10)","decl":{"start":{"line":40,"column":15},"end":{"line":40,"column":16}},"loc":{"start":{"line":40,"column":26},"end":{"line":46,"column":13}},"line":40},"11":{"name":"(anonymous_11)","decl":{"start":{"line":49,"column":35},"end":{"line":49,"column":36}},"loc":{"start":{"line":49,"column":41},"end":{"line":82,"column":5}},"line":49},"12":{"name":"(anonymous_12)","decl":{"start":{"line":50,"column":28},"end":{"line":50,"column":29}},"loc":{"start":{"line":50,"column":34},"end":{"line":55,"column":9}},"line":50},"13":{"name":"(anonymous_13)","decl":{"start":{"line":56,"column":36},"end":{"line":56,"column":37}},"loc":{"start":{"line":56,"column":42},"end":{"line":61,"column":9}},"line":56},"14":{"name":"(anonymous_14)","decl":{"start":{"line":62,"column":44},"end":{"line":62,"column":45}},"loc":{"start":{"line":62,"column":50},"end":{"line":67,"column":9}},"line":62},"15":{"name":"(anonymous_15)","decl":{"start":{"line":68,"column":48},"end":{"line":68,"column":49}},"loc":{"start":{"line":68,"column":54},"end":{"line":81,"column":9}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/CreateGame.test.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/CreateGame.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'mocha';\nimport assert from 'assert';\nimport { contract, Tiles } from './../../src/game';\nimport { GameTestContext } from './GameTestContext';\nimport { \n    GameNameDuplicated, \n    ErrorType,\n    MinNumberOfStartingPointsNotReached\n} from 'tr-common/events';\n\ndescribe('New Game', () => {\n    const ctx = new GameTestContext();\n    const validBoard = [[Tiles.startingPoint(), Tiles.startingPoint()]];\n\n    beforeEach(ctx.initializer());\n\n    const validationError = (type: string, field: string) => {\n        return (error: Error) => {\n            assert.deepEqual(error, {type, field});\n            return true;\n        }\n    }\n    \n    describe('Validation', () => {    \n        it('shoudl not create game if name is not unique', () => {\n            const firstGame = new contract.DTO.CreateGame(\"a name\");\n            const secondGame = new contract.DTO.CreateGame(\"a name\");\n\n            assert.throws(() => {\n                ctx.gameService.createGame(firstGame, validBoard);\n                ctx.gameService.createGame(secondGame, validBoard)\n            }, (error: GameNameDuplicated) => {\n                assert.equal(error.isError, true);\n                assert.equal(error.gameName, firstGame.gameName);\n                assert.equal(error.origin, undefined);\n                assert.equal(error.type, ErrorType.FIELD_NOT_UNIQUE)\n                return true;\n            })\n        })\n\n        it ('cannot be created with board without at least two starting points', () => {\n            const gameDef = new contract.DTO.CreateGame(\"Some game\");\n\n            assert.throws(() => {\n                ctx.gameService.createGame(gameDef, [[Tiles.startingPoint()]])\n            }, (error: MinNumberOfStartingPointsNotReached) => {\n                assert.equal(error.isError, true);\n                assert.equal(error.origin, undefined),\n                assert.equal(error.type, ErrorType.INVALID_BOARD),\n                assert.equal(error.minNumberOfStartingPoints, 2)\n                return true;\n            })\n        })\n    })\n\n    describe('Newly Created Game', () => {\n        it ('has unique id', () => {\n            const someGame = new contract.DTO.CreateGame('Game name');\n\n            ctx.gameService.createGame(someGame, validBoard);\n\n            const game = ctx.gameRepositorySpy.addedGames[0];\n            assert.equal(game.id, ctx.idProvider.ids[0]);\n        })\n\n        it ('has empty player list', () => {\n            const someGame = new contract.DTO.CreateGame(\"Game name\");\n\n            ctx.gameService.createGame(someGame, validBoard);\n\n            const game = ctx.gameRepositorySpy.addedGames[0];\n            assert.deepEqual(game.players, []);\n        })\n\n        it ('has WAITING FOR PLAYERS state', () => {\n            const someGame = new contract.DTO.CreateGame(\"Game name\");\n\n            ctx.gameService.createGame(someGame, validBoard);\n\n            const game = ctx.gameRepositorySpy.addedGames[0];\n            assert.equal(game.state, \"WAITING FOR PLAYERS\");\n        })\n\n        it ('dispatches the GAME_CREATED event', () => {\n            const someGame = new contract.DTO.CreateGame(\"Game name\");\n            const expectedEvent = {\n                type: contract.events.EventType.GAME_CREATED,\n                data: {\n                    gameId: \"id1\",\n                    gameName: \"Game name\",\n                    numberOfPlayers: 0\n                }\n            }\n\n            ctx.gameService.createGame(someGame, validBoard);\n\n            const event = ctx.eventDispatcher.dispatchedEvents[0];\n            assert.deepEqual(event, expectedEvent);\n        })\n    })\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"48781018d95e63f2c973411571caff826f6f95d5","contentHash":"a241f2edfd1ee62737b0ddcea5fb965d7ac6d6130b32767787f5e6065e4b41c6"},"/home/marek/Projects/tomb_racer/back-end/src/game/index.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/index.ts","statementMap":{"0":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"2":{"start":{"line":3,"column":31},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":17},"end":{"line":4,"column":19}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"5":{"start":{"line":5,"column":21},"end":{"line":5,"column":99}},"6":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"7":{"start":{"line":5,"column":80},"end":{"line":5,"column":99}},"8":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}},"9":{"start":{"line":7,"column":4},"end":{"line":7,"column":18}},"10":{"start":{"line":9,"column":22},"end":{"line":11,"column":1}},"11":{"start":{"line":10,"column":4},"end":{"line":10,"column":62}},"12":{"start":{"line":12,"column":0},"end":{"line":12,"column":62}},"13":{"start":{"line":13,"column":17},"end":{"line":13,"column":52}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"15":{"start":{"line":15,"column":29},"end":{"line":15,"column":68}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":43}},"17":{"start":{"line":17,"column":19},"end":{"line":17,"column":70}},"18":{"start":{"line":18,"column":0},"end":{"line":44,"column":2}},"19":{"start":{"line":20,"column":8},"end":{"line":22,"column":10}},"20":{"start":{"line":21,"column":12},"end":{"line":21,"column":101}},"21":{"start":{"line":25,"column":8},"end":{"line":27,"column":10}},"22":{"start":{"line":26,"column":12},"end":{"line":26,"column":91}},"23":{"start":{"line":30,"column":8},"end":{"line":32,"column":10}},"24":{"start":{"line":31,"column":12},"end":{"line":31,"column":91}},"25":{"start":{"line":35,"column":8},"end":{"line":37,"column":10}},"26":{"start":{"line":36,"column":12},"end":{"line":36,"column":76}},"27":{"start":{"line":40,"column":8},"end":{"line":42,"column":10}},"28":{"start":{"line":41,"column":12},"end":{"line":41,"column":99}},"29":{"start":{"line":45,"column":0},"end":{"line":47,"column":2}},"30":{"start":{"line":46,"column":4},"end":{"line":46,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":50},"end":{"line":2,"column":51}},"loc":{"start":{"line":2,"column":65},"end":{"line":8,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":56},"end":{"line":9,"column":57}},"loc":{"start":{"line":9,"column":71},"end":{"line":11,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":20},"end":{"line":23,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":15},"end":{"line":20,"column":16}},"loc":{"start":{"line":20,"column":29},"end":{"line":22,"column":9}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":11},"end":{"line":28,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":25,"column":15},"end":{"line":25,"column":16}},"loc":{"start":{"line":25,"column":29},"end":{"line":27,"column":9}},"line":25},"6":{"name":"(anonymous_6)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":11},"end":{"line":33,"column":5}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":30,"column":15},"end":{"line":30,"column":16}},"loc":{"start":{"line":30,"column":29},"end":{"line":32,"column":9}},"line":30},"8":{"name":"(anonymous_8)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":13},"end":{"line":38,"column":5}},"line":34},"9":{"name":"(anonymous_9)","decl":{"start":{"line":35,"column":15},"end":{"line":35,"column":16}},"loc":{"start":{"line":35,"column":29},"end":{"line":37,"column":9}},"line":35},"10":{"name":"(anonymous_10)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":18},"end":{"line":43,"column":5}},"line":39},"11":{"name":"(anonymous_11)","decl":{"start":{"line":40,"column":15},"end":{"line":40,"column":16}},"loc":{"start":{"line":40,"column":29},"end":{"line":42,"column":9}},"line":40},"12":{"name":"(anonymous_12)","decl":{"start":{"line":45,"column":20},"end":{"line":45,"column":21}},"loc":{"start":{"line":45,"column":29},"end":{"line":47,"column":1}},"line":45}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":20},"end":{"line":2,"column":24}},{"start":{"line":2,"column":28},"end":{"line":2,"column":45}},{"start":{"line":2,"column":50},"end":{"line":8,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},{"start":{"line":3,"column":4},"end":{"line":3,"column":42}}],"line":3},"2":{"loc":{"start":{"line":3,"column":8},"end":{"line":3,"column":29}},"type":"binary-expr","locations":[{"start":{"line":3,"column":8},"end":{"line":3,"column":11}},{"start":{"line":3,"column":15},"end":{"line":3,"column":29}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},{"start":{"line":5,"column":4},"end":{"line":5,"column":99}}],"line":5},"4":{"loc":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},{"start":{"line":5,"column":40},"end":{"line":5,"column":99}}],"line":5},"5":{"loc":{"start":{"line":9,"column":22},"end":{"line":11,"column":1}},"type":"binary-expr","locations":[{"start":{"line":9,"column":23},"end":{"line":9,"column":27}},{"start":{"line":9,"column":31},"end":{"line":9,"column":51}},{"start":{"line":9,"column":56},"end":{"line":11,"column":1}}],"line":9},"6":{"loc":{"start":{"line":10,"column":11},"end":{"line":10,"column":61}},"type":"cond-expr","locations":[{"start":{"line":10,"column":37},"end":{"line":10,"column":40}},{"start":{"line":10,"column":43},"end":{"line":10,"column":61}}],"line":10},"7":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":33}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":15}},{"start":{"line":10,"column":19},"end":{"line":10,"column":33}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":46,"20":90,"21":11,"22":23,"23":1,"24":7,"25":2,"26":2,"27":1,"28":1,"29":1,"30":37},"f":{"0":1,"1":1,"2":46,"3":90,"4":11,"5":23,"6":1,"7":7,"8":2,"9":2,"10":1,"11":1,"12":37},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/index.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qDAAuC;AA4CnC,4BAAQ;AA3CZ,qEAAiE;AACjE,4CAAgE;AAEhE,uEAA+C;AAElC,QAAA,KAAK,GAAG;IACjB,aAAa;QACT,OAAO,CAAC,GAAW,EAAE,GAAW,EAAE,EAAE;YAChC,OAAO,IAAI,WAAI,CACX,eAAQ,CAAC,cAAc,EACvB,IAAI,kBAAQ,CAAC,GAAG,EAAC,GAAG,CAAC,CACxB,CAAC;QACN,CAAC,CAAA;IACL,CAAC;IACD,IAAI;QACA,OAAO,CAAC,GAAW,EAAE,GAAW,EAAE,EAAE;YAChC,OAAO,IAAI,WAAI,CAAC,eAAQ,CAAC,IAAI,EAAE,IAAI,kBAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;QAC1D,CAAC,CAAA;IACL,CAAC;IACD,IAAI;QACA,OAAO,CAAC,GAAW,EAAE,GAAW,EAAE,EAAE;YAChC,OAAO,IAAI,WAAI,CAAC,eAAQ,CAAC,IAAI,EAAE,IAAI,kBAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;QAC1D,CAAC,CAAA;IACL,CAAC;IACD,MAAM;QACF,OAAO,CAAC,GAAW,EAAE,GAAW,EAAE,EAAE;YAChC,OAAO,IAAI,kBAAW,CAAC,IAAI,kBAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QACnD,CAAC,CAAA;IACL,CAAC;IACD,WAAW;QACP,OAAO,CAAC,GAAW,EAAE,GAAW,EAAE,EAAE;YAChC,OAAO,IAAI,WAAI,CAAC,eAAQ,CAAC,YAAY,EAAE,IAAI,kBAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QACnE,CAAC,CAAA;IACL,CAAC;CACJ,CAAA;AAEY,QAAA,SAAS,GAAG,CACrB,GAAY,EACd,EAAE;IACA,OAAO,IAAI,uCAAkB,CAAC,GAAG,CAAC,CAAA;AACtC,CAAC,CAAA","sourcesContent":["import * as contract from './contract';\nimport { DefaultGameService } from './service/DefaultGameService'\nimport { TileType, Tile, SipikedTile } from './model/tile/Tile';\nimport Context  from './contract/Context';\nimport Position from './contract/dto/Position';\n\nexport const Tiles = {\n    startingPoint() {\n        return (row: number, col: number) => {\n            return new Tile(\n                TileType.STARTING_POINT, \n                new Position(row,col)\n            );\n        }\n    }, \n    path() {\n        return (row: number, col: number) => {\n            return new Tile(TileType.PATH, new Position(row, col))\n        }\n    },\n    wall() {\n        return (row: number, col: number) => {\n            return new Tile(TileType.WALL, new Position(row, col))\n        }\n    },\n    spikes() {\n        return (row: number, col: number) => {\n            return new SipikedTile(new Position(row, col));\n        }\n    }, \n    finishPoint() {\n        return (row: number, col: number) => {\n            return new Tile(TileType.FINISH_POINT, new Position(row, col));\n        }\n    }\n}\n\nexport const configure = (\n    ctx: Context\n) => {\n    return new DefaultGameService(ctx) \n}\n\nexport {\n    contract\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"50bf228906f0a634bdf88236fecab8e8d27680b8","contentHash":"853b76da7169f2fefc63467186db132cb63b8be4f7efb198a9bb922de26a2492"},"/home/marek/Projects/tomb_racer/back-end/src/game/contract/index.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/index.ts","statementMap":{"0":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"2":{"start":{"line":3,"column":31},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":17},"end":{"line":4,"column":19}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"5":{"start":{"line":5,"column":21},"end":{"line":5,"column":99}},"6":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"7":{"start":{"line":5,"column":80},"end":{"line":5,"column":99}},"8":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}},"9":{"start":{"line":7,"column":4},"end":{"line":7,"column":18}},"10":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"11":{"start":{"line":10,"column":15},"end":{"line":10,"column":48}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}},"13":{"start":{"line":12,"column":12},"end":{"line":12,"column":42}},"14":{"start":{"line":13,"column":0},"end":{"line":13,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":50},"end":{"line":2,"column":51}},"loc":{"start":{"line":2,"column":65},"end":{"line":8,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":20},"end":{"line":2,"column":24}},{"start":{"line":2,"column":28},"end":{"line":2,"column":45}},{"start":{"line":2,"column":50},"end":{"line":8,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},{"start":{"line":3,"column":4},"end":{"line":3,"column":42}}],"line":3},"2":{"loc":{"start":{"line":3,"column":8},"end":{"line":3,"column":29}},"type":"binary-expr","locations":[{"start":{"line":3,"column":8},"end":{"line":3,"column":11}},{"start":{"line":3,"column":15},"end":{"line":3,"column":29}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},{"start":{"line":5,"column":4},"end":{"line":5,"column":99}}],"line":5},"4":{"loc":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},{"start":{"line":5,"column":40},"end":{"line":5,"column":99}}],"line":5}},"s":{"0":1,"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/index.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/contract/index.ts"],"names":[],"mappings":";;;;;;;;;AAGA,iDAAmC;AAU/B,wBAAM;AATV,2CAA6B;AAQzB,kBAAG","sourcesContent":["import { GameRepository } from './GameRepository';\nimport { GameService, boardDefinition } from './GameService';\nimport { IdProvider } from './IdProvider';\nimport * as events from './Events';\nimport * as DTO from './dto';\n\ntype randomize = (start: number, end: number) => number;\n\nexport {\n    GameRepository,\n    GameService,\n    IdProvider,\n    DTO,\n    events,\n    boardDefinition,\n    randomize,\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"55d7d96f194ef831735424deb0b0eb8f4124b9e3","contentHash":"b3b673a4d098107abbef416915f9bdf8045b2eb993b8f6115bbca4efc1334861"},"/home/marek/Projects/tomb_racer/back-end/src/game/contract/Events.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/Events.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":0},"end":{"line":14,"column":62}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":49}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":45}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":47}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":41}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":45}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":49}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":25}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":1},"end":{"line":4,"column":2}},"loc":{"start":{"line":4,"column":22},"end":{"line":14,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":28},"end":{"line":19,"column":5}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":15},"end":{"line":14,"column":60}},"type":"binary-expr","locations":[{"start":{"line":14,"column":15},"end":{"line":14,"column":32}},{"start":{"line":14,"column":37},"end":{"line":14,"column":59}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":133,"12":133,"13":1},"f":{"0":1,"1":133},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/Events.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/contract/Events.ts"],"names":[],"mappings":";;AAAA,IAAY,SAUX;AAVD,WAAY,SAAS;IACjB,0CAA6B,CAAA;IAC7B,4CAA+B,CAAA;IAC/B,wCAA2B,CAAA;IAC3B,0CAA6B,CAAA;IAC7B,0CAA6B,CAAA;IAC7B,sCAAyB,CAAA;IACzB,oCAAuB,CAAA;IACvB,wCAA2B,CAAA;IAC3B,4CAA+B,CAAA;AACnC,CAAC,EAVW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAUpB;AAED,MAAa,KAAK;IAId,YAAY,IAAe,EAAE,IAAS;QAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;CACJ;AARD,sBAQC","sourcesContent":["export enum EventType {\n    GAME_CREATED = \"GAME-CREATED\",\n    PLAYER_JOINED = \"PLAYER-JOINED\",\n    PLAYER_LEFT = \"PLAYER-LEFT\",\n    GAME_STARTED = \"GAME-STARTED\",\n    PLAYER_MOVED = \"PLAYER-MOVED\",\n    PLAYER_HIT = \"PLAYER-HIT\",\n    NEXT_TURN = \"NEXT-TURN\",\n    PLAYER_DIED = \"PLAYER-DIED\",\n    GAME_FINISHED = \"GAME-FINISHED\"\n}\n\nexport class Event {\n    type: EventType\n    data: any\n\n    constructor(type: EventType, data: any) {\n        this.type = type;\n        this.data = data;\n    }\n}\n\nexport interface EventDispatcher\n{\n    dispatch(event: Event): void;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ec487357e268dab7744b92253f3b5d0265a9a5ab","contentHash":"a6467ad454085d6b152c26a52ec777109afd80868607693f1bf4c960bd7e3f07"},"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/index.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":61}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":19},"end":{"line":10,"column":57}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}},"9":{"start":{"line":12,"column":19},"end":{"line":12,"column":57}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":4},"b":{"0":[1,1,1],"1":[4,0],"2":[4,4]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/index.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/index.ts"],"names":[],"mappings":";;;;;AAAA,8DAAsC;AAMlC,qBANG,oBAAU,CAMH;AALd,4DAAsC;AAMlC,qBANG,mBAAU,CAMH;AALd,0DAAkC;AAM9B,mBANG,kBAAQ,CAMH;AALZ,0DAAkC;AAM9B,mBANG,kBAAQ,CAMH","sourcesContent":["import CreateGame from './CreateGame';\nimport PlayerData  from './AddPlayer';\nimport Movement from './Movement';\nimport Position from './Position';\n\nexport {\n    CreateGame,\n    PlayerData,\n    Movement,\n    Position\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a929c483373dfdc470206dd308feb2b110514114","contentHash":"69ac60e4aac45325c9e6dcd87f5c509575e1a114434249ead602076867c2420a"},"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/CreateGame.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/CreateGame.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":33}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":26},"end":{"line":6,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":37,"2":1},"f":{"0":37},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/CreateGame.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/CreateGame.ts"],"names":[],"mappings":";;AAAA,MAAqB,UAAU;IAI3B,YAAY,QAAgB;QACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;CACJ;AAPD,6BAOC","sourcesContent":["export default class CreateGame\n{\n    gameName: string;\n\n    constructor(gameName: string) {\n        this.gameName = gameName;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"50150a897feb6403fb2a3f75b905a5f4137bda86","contentHash":"c103189c2ac964f6bffa067c4a1fd121adb99572bf10f1d9b200cdc52fd87a65"},"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/AddPlayer.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/AddPlayer.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":29}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":33}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":42},"end":{"line":8,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":4,"2":4,"3":4,"4":1},"f":{"0":4},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/AddPlayer.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/AddPlayer.ts"],"names":[],"mappings":";;AAEA,MAAqB,UAAU;IAM3B,YAAY,MAAc,EAAE,MAAc,EAAE,QAAgB;QACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;CACJ;AAXD,6BAWC","sourcesContent":["import { stringify } from \"querystring\";\n\nexport default class PlayerData\n{\n    userId: string;\n    userName: string;\n    gameId: string;\n\n    constructor(gameId: string, userId: string, userName: string) {\n        this.gameId = gameId;\n        this.userId = userId;\n        this.userName = userName;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"602286ee5709c9dbd1bfd02c0c195b81d2ce5123","contentHash":"6492a109eebc71a30a98cf99eee186d99bb01571f05db20f710a98e4b66df5ee"},"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/Movement.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/Movement.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":29}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":25}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":38},"end":{"line":8,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":16,"2":16,"3":16,"4":1},"f":{"0":16},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/Movement.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/Movement.ts"],"names":[],"mappings":";;AAEA,MAAqB,QAAQ;IAMzB,YACI,MAAc,EACd,MAAc,EACd,IAAgB;QAEhB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;CACJ;AAfD,2BAeC","sourcesContent":["import Position from \"./Position\";\n\nexport default class Movement\n{\n    userId: string;\n    gameId: string;\n    path: Position[]; \n\n    constructor(\n        userId: string,\n        gameId: string,\n        path: Position[]\n    ) {\n        this.userId = userId;\n        this.gameId = gameId;\n        this.path = path;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"38e766440da95a35e60b765c8a0be44f8f8691b2","contentHash":"374254f8fd33ab085cb61fa2cd09fdaf4d56bdbacefae65b8e656fe7a80e4cef"},"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/Position.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/Position.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":23}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":23}},"3":{"start":{"line":9,"column":8},"end":{"line":11,"column":51}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":44}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":26},"end":{"line":7,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":24},"end":{"line":12,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":15},"end":{"line":15,"column":5}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":15},"end":{"line":11,"column":50}},"type":"binary-expr","locations":[{"start":{"line":9,"column":17},"end":{"line":9,"column":38}},{"start":{"line":9,"column":42},"end":{"line":9,"column":63}},{"start":{"line":10,"column":13},"end":{"line":10,"column":34}},{"start":{"line":10,"column":38},"end":{"line":10,"column":59}},{"start":{"line":10,"column":67},"end":{"line":10,"column":102}},{"start":{"line":11,"column":13},"end":{"line":11,"column":48}}],"line":9}},"s":{"0":1,"1":147,"2":147,"3":17,"4":0,"5":1},"f":{"0":147,"1":17,"2":0},"b":{"0":[17,5,12,12,14,13]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/Position.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/contract/dto/Position.ts"],"names":[],"mappings":";;AAAA,MAAqB,QAAQ;IAKzB,YAAY,GAAW,EAAE,GAAW;QAEhC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IAED,YAAY,CAAC,KAAe;QACxB,OAAO,CACC,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;YAChD,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CACnD,IAAI,CACD,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACrC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CACxC,CAAA;IACT,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,CAAA;IACvC,CAAC;CACJ;AAxBD,2BAwBC","sourcesContent":["export default class Position\n{\n    row: number;\n    col: number;\n\n    constructor(row: number, col: number) \n    {\n        this.row = row;\n        this.col = col;\n    }\n\n    isAdjacentTo(other: Position): boolean {\n        return (\n                (this.row == other.row && this.col != other.col) ||\n                (this.row != other.row && this.col == other.col) \n            ) && (\n                (Math.abs(this.row - other.row) <= 1) &&\n                (Math.abs(this.col - other.col) <= 1) \n            )\n    }\n\n    toString(): string {\n        return `(${this.row}, ${this.col})`\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9f0824a8eb1c6936fdf8b4515189f0ec69207484","contentHash":"6637ea2e2de0049de3279aab39d77d02c3b63893588939813036d57fdeb5c6ba"},"/home/marek/Projects/tomb_racer/back-end/src/game/service/DefaultGameService.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/service/DefaultGameService.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":39}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":39}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":37}},"6":{"start":{"line":9,"column":16},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":26},"end":{"line":10,"column":79}},"8":{"start":{"line":11,"column":26},"end":{"line":11,"column":79}},"9":{"start":{"line":12,"column":17},"end":{"line":12,"column":44}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":31}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":49}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":45}},"13":{"start":{"line":18,"column":8},"end":{"line":18,"column":55}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":63}},"15":{"start":{"line":24,"column":8},"end":{"line":31,"column":10}},"16":{"start":{"line":26,"column":16},"end":{"line":29,"column":18}},"17":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"18":{"start":{"line":35,"column":12},"end":{"line":35,"column":94}},"19":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"20":{"start":{"line":38,"column":12},"end":{"line":38,"column":53}},"21":{"start":{"line":40,"column":24},"end":{"line":40,"column":106}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":41}},"23":{"start":{"line":42,"column":8},"end":{"line":42,"column":78}},"24":{"start":{"line":45,"column":8},"end":{"line":51,"column":10}},"25":{"start":{"line":54,"column":21},"end":{"line":54,"column":74}},"26":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"27":{"start":{"line":56,"column":12},"end":{"line":56,"column":69}},"28":{"start":{"line":58,"column":23},"end":{"line":58,"column":93}},"29":{"start":{"line":59,"column":8},"end":{"line":59,"column":31}},"30":{"start":{"line":60,"column":8},"end":{"line":60,"column":42}},"31":{"start":{"line":61,"column":8},"end":{"line":61,"column":87}},"32":{"start":{"line":64,"column":21},"end":{"line":64,"column":70}},"33":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"34":{"start":{"line":66,"column":12},"end":{"line":66,"column":65}},"35":{"start":{"line":68,"column":8},"end":{"line":68,"column":47}},"36":{"start":{"line":69,"column":8},"end":{"line":69,"column":42}},"37":{"start":{"line":70,"column":8},"end":{"line":70,"column":99}},"38":{"start":{"line":73,"column":8},"end":{"line":80,"column":9}},"39":{"start":{"line":74,"column":25},"end":{"line":74,"column":52}},"40":{"start":{"line":75,"column":12},"end":{"line":75,"column":59}},"41":{"start":{"line":76,"column":12},"end":{"line":76,"column":46}},"42":{"start":{"line":79,"column":12},"end":{"line":79,"column":59}},"43":{"start":{"line":83,"column":21},"end":{"line":83,"column":50}},"44":{"start":{"line":84,"column":8},"end":{"line":84,"column":45}},"45":{"start":{"line":85,"column":8},"end":{"line":85,"column":42}},"46":{"start":{"line":88,"column":21},"end":{"line":88,"column":57}},"47":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"48":{"start":{"line":90,"column":12},"end":{"line":90,"column":52}},"49":{"start":{"line":92,"column":8},"end":{"line":92,"column":20}},"50":{"start":{"line":95,"column":0},"end":{"line":95,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":25},"end":{"line":19,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":22},"end":{"line":22,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":15},"end":{"line":32,"column":5}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":53},"end":{"line":25,"column":54}},"loc":{"start":{"line":25,"column":61},"end":{"line":30,"column":13}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":28},"end":{"line":43,"column":5}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":25},"end":{"line":52,"column":5}},"line":44},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":32},"end":{"line":62,"column":5}},"line":53},"8":{"name":"(anonymous_8)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":31},"end":{"line":71,"column":5}},"line":63},"9":{"name":"(anonymous_9)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":25},"end":{"line":81,"column":5}},"line":72},"10":{"name":"(anonymous_10)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":30},"end":{"line":86,"column":5}},"line":82},"11":{"name":"(anonymous_11)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":20},"end":{"line":93,"column":5}},"line":87}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"4":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{"line":37,"column":8},"end":{"line":39,"column":9}}],"line":37},"5":{"loc":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},{"start":{"line":55,"column":8},"end":{"line":57,"column":9}}],"line":55},"6":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"7":{"loc":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},{"start":{"line":89,"column":8},"end":{"line":91,"column":9}}],"line":89}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":37,"11":37,"12":37,"13":37,"14":1,"15":1,"16":2,"17":37,"18":0,"19":37,"20":1,"21":36,"22":35,"23":35,"24":1,"25":65,"26":65,"27":1,"28":64,"29":64,"30":63,"31":63,"32":3,"33":3,"34":1,"35":2,"36":2,"37":2,"38":54,"39":54,"40":53,"41":51,"42":3,"43":16,"44":16,"45":7,"46":70,"47":70,"48":1,"49":69,"50":1},"f":{"0":2,"1":37,"2":1,"3":1,"4":2,"5":37,"6":1,"7":65,"8":3,"9":54,"10":16,"11":70},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[0,37],"4":[1,36],"5":[1,64],"6":[1,2],"7":[1,69]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/service/DefaultGameService.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/service/DefaultGameService.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    GameService,\n    GameRepository,\n    IdProvider,\n    DTO,\n    events,\n    boardDefinition\n} from '../contract'\n\nimport {\n    ValidationError,\n    GameNotFound, \n} from './../errors';\n\nimport {\n    GameCreatedEvent,\n    PlayerJoinedEvent\n} from './../events';\n\nimport {\n    Game, Player\n} from './../model';\n\nimport { Board } from '../model/Board';\nimport PlayerLeftEvent from '../events/PlayerLeftEvent';\nimport CannotStartGame from '../errors/CannotStartGame';\nimport Context  from '../contract/Context';\nimport { contract } from '..';\nimport { EventDispatcher } from '../contract/Events';\nimport Movement from '../contract/dto/Movement';\nimport { GameState, GameList } from '../contract/dto/GameState';\nimport { GameNameDuplicated, ErrorType } from 'tr-common/events';\n\nexport class DefaultGameService implements GameService\n{\n    context: Context;\n    gameRepository: GameRepository;\n    idProvider: IdProvider;\n    eventDispatcher: EventDispatcher;\n\n    constructor(context: Context) {\n        this.context = context;\n        this.gameRepository = context.repository;\n        this.idProvider = context.idProvider;\n        this.eventDispatcher = context.eventDispatcher;\n    }\n\n    gameState(gameId: string): GameState {\n        return this.gameRepository.findById(gameId).getState();    \n    }\n\n    gameList(): GameList {\n        return {\n            games: this.gameRepository.findAll().map(game => {\n                return {\n                    gameId: game.id,\n                    gameName: game.name\n                }\n            })\n        }\n    }\n\n    createGame(data: DTO.CreateGame, board: boardDefinition[][]): void {\n\n        if (data.gameName == \"\") {\n            throw new ValidationError(ErrorType.FIELD_REQUIRED, \"gameName\");\n        }\n\n        if (this.gameRepository.hasGameWithName(data.gameName)) {\n            throw this.gameDuplicated(data.gameName);\n        }\n\n        const newGame = new Game(\n            this.idProvider.newId(),\n            data.gameName,\n            new Board(board)\n        )\n\n        this.gameRepository.add(newGame)\n        this.eventDispatcher.dispatch(new GameCreatedEvent(newGame));\n    }\n\n    private gameDuplicated(name: string): GameNameDuplicated {\n        return {\n            isError: true,\n            type: ErrorType.FIELD_NOT_UNIQUE,\n            origin: undefined,\n            message: \"Game with this name already exists.\",\n            gameName: name\n        }\n    }\n\n    addPlayer(addPlayerRequest: DTO.PlayerData) {\n        const game = this.gameRepository.findById(addPlayerRequest.gameId);\n        \n        if (!game) {\n            throw new GameNotFound(addPlayerRequest.gameId);\n        }\n\n        const player = new Player(\n            addPlayerRequest.userId,\n            addPlayerRequest.userName\n        );\n\n        game.addPlayer(player);\n\n        this.gameRepository.persist(game);\n        this.eventDispatcher.dispatch(new PlayerJoinedEvent(player, game.id))\n    }\n\n    removePlayer(removePlayer: DTO.PlayerData): void {\n        const game = this.gameRepository.findById(removePlayer.gameId);\n\n        if (!game) {\n            throw new GameNotFound(removePlayer.gameId);\n        }\n\n        game.removePlayer(removePlayer.userId);\n\n        this.gameRepository.persist(game);\n        this.eventDispatcher.dispatch(new PlayerLeftEvent(removePlayer.userId, game.id));\n    }\n\n    startRequest(player: DTO.PlayerData): void {\n        try {\n            const game = this.getGame(player.gameId);\n            game.startRequest(player.userId, this.context);\n            this.gameRepository.persist(game);\n        } catch (gameError) {\n            throw new CannotStartGame(gameError);\n        }\n    }\n\n    executeMovement(movement: Movement): void {\n        const game = this.getGame(movement.gameId);\n        game.movment(movement, this.context);\n\n        this.gameRepository.persist(game);\n    }\n\n    private getGame(gameId: string): Game {\n        const game = this.gameRepository.findById(gameId);\n\n        if (!game) {\n            throw new GameNotFound(gameId);\n        }\n\n        return game;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8e898f90a0d8342d9d7477942629b9a8f0ba2419","contentHash":"69a595cb79c439aee89cb5b763e1e55a4c631f6291a5a8a2c1f82946d3e4596f"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/index.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":23},"end":{"line":6,"column":65}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"5":{"start":{"line":8,"column":26},"end":{"line":8,"column":71}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":52}},"7":{"start":{"line":10,"column":41},"end":{"line":10,"column":101}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":82}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":3},"b":{"0":[1,1,1],"1":[3,0],"2":[3,3]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/index.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/index.ts"],"names":[],"mappings":";;;;;AAAA,kEAA0C;AAKtC,uBALG,sBAAY,CAKH;AAJhB,wEAAgD;AAK5C,0BALG,yBAAe,CAKH;AAJnB,sGAA8E;AAK1E,yCALG,wCAA8B,CAKH","sourcesContent":["import GameNotFound from './GameNotFound';\nimport ValidationError from './ValidationError';\nimport NumberOfStartingPointsExceeded from './NumberOfStartingPointsExceeded';\n\nexport {\n    GameNotFound,\n    ValidationError,\n    NumberOfStartingPointsExceeded\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e154cb8067a743e2c37a7547f58566279b2ba421","contentHash":"2236159f0a4aebb19ef559d042a3818b1f660f10b85c3be7163f8fec07176728"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameNotFound.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameNotFound.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":44}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":59}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":84}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":29}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":24},"end":{"line":12,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":3,"7":1},"f":{"0":1,"1":3},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameNotFound.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameNotFound.ts"],"names":[],"mappings":";;;;;AAAA,6CAE0B;AAC1B,4DAAoC;AAEpC,MAAqB,YAAa,SAAQ,mBAAS;IAI/C,YAAY,MAAc;QACtB,KAAK,CAAC,kBAAS,CAAC,cAAc,EAAE,SAAS,EAAE,sBAAsB,CAAC,CAAA;QAClE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;CACJ;AARD,+BAQC","sourcesContent":["import { \n    ErrorType,\n} from 'tr-common/events';\nimport GameError from './GameError';\n\nexport default class GameNotFound extends GameError\n{\n    gameId: string;\n\n    constructor(gameId: string) {\n        super(ErrorType.GAME_NOT_FOUND, undefined, \"Could not found game\")\n        this.gameId = gameId;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"046f0ec144baa353ed2b0676cdf42fb500d5b79f","contentHash":"a7235ff93d5ebd8ab6328af818e103b76ffe22ea8722afac6ad4e57ec5cd67d5"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameError.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":23}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":25}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":28}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":29}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":56},"end":{"line":9,"column":5}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":22},"end":{"line":4,"column":40}},"type":"default-arg","locations":[{"start":{"line":4,"column":31},"end":{"line":4,"column":40}}],"line":4},"1":{"loc":{"start":{"line":4,"column":42},"end":{"line":4,"column":54}},"type":"default-arg","locations":[{"start":{"line":4,"column":52},"end":{"line":4,"column":54}}],"line":4}},"s":{"0":1,"1":19,"2":19,"3":19,"4":19,"5":1},"f":{"0":19},"b":{"0":[8],"1":[1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameError.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameError.ts"],"names":[],"mappings":";;AAGA,MAAqB,SAAU,SAAQ,KAAK;IAMxC,YACI,IAAe,EACf,SAAiB,SAAS,EAC1B,OAAO,GAAG,EAAE;QAEZ,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;CACJ;AAhBD,4BAgBC","sourcesContent":["import { ErrorType, ErrorEvent } from 'tr-common/events';\nimport { GameId } from 'tr-common/data_types';\n\nexport default class GameError extends Error implements ErrorEvent\n{\n    type: ErrorType;\n    isError: boolean;\n    origin: string | undefined;\n    \n    constructor(\n        type: ErrorType, \n        origin: string = undefined, \n        message = \"\"\n    ) {\n        super(message);\n        this.type = type;\n        this.isError = true;\n        this.origin = origin;\n    } \n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"24b3cebbaf3655a5dbe262e70859996884f9be29","contentHash":"d37d6c1c392c1e56869a9a42481d152af43395e179462c7c3772444bbf1b374f"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/ValidationError.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/ValidationError.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":59}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":29}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":25}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":27}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":59},"end":{"line":12,"column":5}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":8,"column":29},"end":{"line":8,"column":57}},"type":"default-arg","locations":[{"start":{"line":8,"column":39},"end":{"line":8,"column":57}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1},"f":{"0":1,"1":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/ValidationError.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/ValidationError.ts"],"names":[],"mappings":";;;;;AAAA,4DAAoC;AAGpC,MAAqB,eAAgB,SAAQ,mBAAS;IAIlD,YAAY,IAAe,EAAE,KAAa,EAAE,UAAkB,kBAAkB;QAE5E,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;CACJ;AAVD,kCAUC","sourcesContent":["import GameError from './GameError';\nimport { ErrorType } from 'tr-common/events';\n\nexport default class ValidationError extends GameError\n{\n    field: string;\n    \n    constructor(type: ErrorType, field: string, message: string = \"Validatoin Error\")\n    {\n        super(type, message);\n        this.type = type;\n        this.field = field;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0f230a321b7f8d79b975bbcd0ff67422d3651fa6","contentHash":"32dd1198dfb28426222b684aebe5d82700b2ace5c4b35d876b3701381e006ab0"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/NumberOfStartingPointsExceeded.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/NumberOfStartingPointsExceeded.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":44}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":59}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":115}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":53}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":44},"end":{"line":12,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/NumberOfStartingPointsExceeded.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/NumberOfStartingPointsExceeded.ts"],"names":[],"mappings":";;;;;AAAA,6CAG0B;AAC1B,4DAAoC;AAEpC,MAAqB,8BAA+B,SAAQ,mBAAS;IAIjE,YAAY,kBAA0B,EAAE,MAAc;QAClD,KAAK,CAAC,kBAAS,CAAC,kCAAkC,EAAE,MAAM,EAAE,oCAAoC,CAAC,CAAC;QAClG,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IACjD,CAAC;CACJ;AARD,iDAQC","sourcesContent":["import { \n    ErrorType,\n    StartingPointsExceeded\n} from 'tr-common/events';\nimport GameError from './GameError';\n\nexport default class NumberOfStartingPointsExceeded extends GameError implements StartingPointsExceeded\n{\n    maxNumberOfPlayers: number;\n\n    constructor(maxNumberOfPlayers: number, gameId: string) {\n        super(ErrorType.NUMBER_OF_STARTING_POINTS_EXCEEDED, gameId, \"Number of starting points exceeded\");\n        this.maxNumberOfPlayers = maxNumberOfPlayers;    \n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"97d221662a58c404153d2c1dc655a5508ef0422e","contentHash":"fbd0bb63993a036d8833463affca869cfad82abc1b11218006989e2a2b60936c"},"/home/marek/Projects/tomb_racer/back-end/src/game/events/index.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/events/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":27},"end":{"line":6,"column":73}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":54}},"5":{"start":{"line":8,"column":28},"end":{"line":8,"column":75}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/events/index.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/events/index.ts"],"names":[],"mappings":";;;;;AAAA,0EAAkD;AAI9C,2BAJG,0BAAgB,CAIH;AAHpB,4EAAoD;AAIhD,4BAJG,2BAAiB,CAIH","sourcesContent":["import GameCreatedEvent from './GameCreatedEvent';\nimport PlayerJoinedEvent from './PlayerJoinedEvent';\n\nexport {\n    GameCreatedEvent,\n    PlayerJoinedEvent\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9650f5f3ada27d3afd4d289b5fa7268dced3697d","contentHash":"8781ba583224c51627fa0f11d228d3d20bfb20dc23bf1cdc421c6b3ea96eaee7"},"/home/marek/Projects/tomb_racer/back-end/src/game/events/GameCreatedEvent.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/events/GameCreatedEvent.ts","statementMap":{"0":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"2":{"start":{"line":3,"column":31},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":17},"end":{"line":4,"column":19}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"5":{"start":{"line":5,"column":21},"end":{"line":5,"column":99}},"6":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"7":{"start":{"line":5,"column":80},"end":{"line":5,"column":99}},"8":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}},"9":{"start":{"line":7,"column":4},"end":{"line":7,"column":18}},"10":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"11":{"start":{"line":10,"column":17},"end":{"line":10,"column":55}},"12":{"start":{"line":13,"column":8},"end":{"line":17,"column":11}},"13":{"start":{"line":20,"column":0},"end":{"line":20,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":50},"end":{"line":2,"column":51}},"loc":{"start":{"line":2,"column":65},"end":{"line":8,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":22},"end":{"line":18,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":20},"end":{"line":2,"column":24}},{"start":{"line":2,"column":28},"end":{"line":2,"column":45}},{"start":{"line":2,"column":50},"end":{"line":8,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},{"start":{"line":3,"column":4},"end":{"line":3,"column":42}}],"line":3},"2":{"loc":{"start":{"line":3,"column":8},"end":{"line":3,"column":29}},"type":"binary-expr","locations":[{"start":{"line":3,"column":8},"end":{"line":3,"column":11}},{"start":{"line":3,"column":15},"end":{"line":3,"column":29}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},{"start":{"line":5,"column":4},"end":{"line":5,"column":99}}],"line":5},"4":{"loc":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},{"start":{"line":5,"column":40},"end":{"line":5,"column":99}}],"line":5}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":35,"13":1},"f":{"0":1,"1":35},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/events/GameCreatedEvent.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/events/GameCreatedEvent.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wDAAyC;AAGzC,MAAqB,gBAAiB,SAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK;IAE/D,YAAY,IAAU;QAClB,KAAK,CACD,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,EACtC;YACI,MAAM,EAAE,IAAI,CAAC,EAAE;YACf,QAAQ,EAAE,IAAI,CAAC,IAAI;YACnB,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;SACvC,CACJ,CAAA;IACL,CAAC;CACJ;AAZD,mCAYC","sourcesContent":["import * as contract from './../contract'\nimport { Game } from '../model';\n\nexport default class GameCreatedEvent extends contract.events.Event\n{\n    constructor(game: Game) {\n        super(\n            contract.events.EventType.GAME_CREATED,\n            {\n                gameId: game.id,\n                gameName: game.name,\n                numberOfPlayers: game.players.length\n            }\n        )\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"960166d2b9e7741a68421f020fa68b81eb5afea7","contentHash":"2079b6a9171c39a55f0cbf9bc6f655fa6ce3f6c7483112fe4f77b5f9507c1e3c"},"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerJoinedEvent.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerJoinedEvent.ts","statementMap":{"0":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"2":{"start":{"line":3,"column":31},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":17},"end":{"line":4,"column":19}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"5":{"start":{"line":5,"column":21},"end":{"line":5,"column":99}},"6":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"7":{"start":{"line":5,"column":80},"end":{"line":5,"column":99}},"8":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}},"9":{"start":{"line":7,"column":4},"end":{"line":7,"column":18}},"10":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"11":{"start":{"line":10,"column":17},"end":{"line":10,"column":53}},"12":{"start":{"line":13,"column":8},"end":{"line":22,"column":11}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":50},"end":{"line":2,"column":51}},"loc":{"start":{"line":2,"column":65},"end":{"line":8,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":32},"end":{"line":23,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":20},"end":{"line":2,"column":24}},{"start":{"line":2,"column":28},"end":{"line":2,"column":45}},{"start":{"line":2,"column":50},"end":{"line":8,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},{"start":{"line":3,"column":4},"end":{"line":3,"column":42}}],"line":3},"2":{"loc":{"start":{"line":3,"column":8},"end":{"line":3,"column":29}},"type":"binary-expr","locations":[{"start":{"line":3,"column":8},"end":{"line":3,"column":11}},{"start":{"line":3,"column":15},"end":{"line":3,"column":29}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},{"start":{"line":5,"column":4},"end":{"line":5,"column":99}}],"line":5},"4":{"loc":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},{"start":{"line":5,"column":40},"end":{"line":5,"column":99}}],"line":5}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":63,"13":1},"f":{"0":1,"1":63},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerJoinedEvent.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerJoinedEvent.ts"],"names":[],"mappings":";;;;;;;;;AAAA,sDAAuC;AAGvC,MAAqB,iBAAkB,SAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK;IAEhE,YAAY,MAAc,EAAE,MAAc;QACtC,KAAK,CACD,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,EACvC;YACI,MAAM;YACN,MAAM,EAAE;gBACJ,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,EAAE,EAAE,GAAG;gBACP,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,SAAS,EAAE,EAAE;aAChB;SACJ,CACJ,CAAA;IACL,CAAC;CACJ;AAjBD,oCAiBC","sourcesContent":["import * as contract from '../contract'\nimport { Game, Player} from './../model';\n\nexport default class PlayerJoinedEvent extends contract.events.Event\n{\n    constructor(player: Player, gameId: string) {\n        super(\n            contract.events.EventType.PLAYER_JOINED,\n            {\n                gameId,\n                player: {\n                    userId: player.userId,\n                    userName: player.userName,\n                    hp: 100, \n                    position: player.position,\n                    inventory: []\n                } \n            }\n        )\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d0ae99f49824f0a2587cb36fceca1e22da71376e","contentHash":"4e97a8cf680bd46f1b70ba2ccc07e46d813595b9f8e7b57402ad414dd9396b6e"},"/home/marek/Projects/tomb_racer/back-end/src/game/model/index.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/model/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":49}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":53}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/model/index.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/model/index.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAItB,eAJG,cAAI,CAIH;AAHR,sDAA8B;AAI1B,iBAJG,gBAAM,CAIH","sourcesContent":["import Game from './Game';\nimport Player from './Player';\n\nexport {\n    Game,\n    Player,\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3196b00d5bd638ab5dc6826d4d352087920b8e04","contentHash":"4cc7bb62c34edee797add39df7b687bf4775c8257b6dc5a031267062f9085fb1"},"/home/marek/Projects/tomb_racer/back-end/src/game/model/Game.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/model/Game.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":23},"end":{"line":6,"column":73}},"4":{"start":{"line":7,"column":27},"end":{"line":7,"column":81}},"5":{"start":{"line":8,"column":27},"end":{"line":8,"column":81}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":49}},"7":{"start":{"line":10,"column":25},"end":{"line":10,"column":77}},"8":{"start":{"line":11,"column":32},"end":{"line":11,"column":91}},"9":{"start":{"line":12,"column":22},"end":{"line":12,"column":71}},"10":{"start":{"line":13,"column":15},"end":{"line":13,"column":37}},"11":{"start":{"line":14,"column":19},"end":{"line":14,"column":65}},"12":{"start":{"line":15,"column":21},"end":{"line":15,"column":69}},"13":{"start":{"line":16,"column":23},"end":{"line":16,"column":73}},"14":{"start":{"line":17,"column":17},"end":{"line":17,"column":37}},"15":{"start":{"line":18,"column":22},"end":{"line":18,"column":71}},"16":{"start":{"line":20,"column":0},"end":{"line":24,"column":26}},"17":{"start":{"line":21,"column":4},"end":{"line":21,"column":55}},"18":{"start":{"line":22,"column":4},"end":{"line":22,"column":33}},"19":{"start":{"line":23,"column":4},"end":{"line":23,"column":35}},"20":{"start":{"line":27,"column":8},"end":{"line":27,"column":26}},"21":{"start":{"line":28,"column":8},"end":{"line":28,"column":43}},"22":{"start":{"line":29,"column":8},"end":{"line":29,"column":34}},"23":{"start":{"line":30,"column":8},"end":{"line":30,"column":21}},"24":{"start":{"line":31,"column":8},"end":{"line":31,"column":25}},"25":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"26":{"start":{"line":33,"column":8},"end":{"line":33,"column":45}},"27":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"28":{"start":{"line":37,"column":12},"end":{"line":37,"column":105}},"29":{"start":{"line":39,"column":8},"end":{"line":39,"column":56}},"30":{"start":{"line":40,"column":8},"end":{"line":40,"column":43}},"31":{"start":{"line":41,"column":8},"end":{"line":41,"column":34}},"32":{"start":{"line":44,"column":8},"end":{"line":44,"column":71}},"33":{"start":{"line":47,"column":8},"end":{"line":47,"column":40}},"34":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"35":{"start":{"line":49,"column":12},"end":{"line":49,"column":66}},"36":{"start":{"line":51,"column":8},"end":{"line":51,"column":43}},"37":{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},"38":{"start":{"line":53,"column":12},"end":{"line":53,"column":28}},"39":{"start":{"line":54,"column":12},"end":{"line":54,"column":100}},"40":{"start":{"line":58,"column":8},"end":{"line":64,"column":10}},"41":{"start":{"line":67,"column":24},"end":{"line":67,"column":26}},"42":{"start":{"line":68,"column":8},"end":{"line":78,"column":11}},"43":{"start":{"line":69,"column":12},"end":{"line":77,"column":15}},"44":{"start":{"line":79,"column":8},"end":{"line":79,"column":23}},"45":{"start":{"line":82,"column":8},"end":{"line":82,"column":33}},"46":{"start":{"line":83,"column":8},"end":{"line":83,"column":41}},"47":{"start":{"line":84,"column":8},"end":{"line":84,"column":44}},"48":{"start":{"line":85,"column":29},"end":{"line":85,"column":68}},"49":{"start":{"line":86,"column":23},"end":{"line":86,"column":54}},"50":{"start":{"line":87,"column":8},"end":{"line":89,"column":11}},"51":{"start":{"line":88,"column":12},"end":{"line":88,"column":50}},"52":{"start":{"line":90,"column":8},"end":{"line":103,"column":9}},"53":{"start":{"line":91,"column":12},"end":{"line":91,"column":47}},"54":{"start":{"line":92,"column":12},"end":{"line":92,"column":28}},"55":{"start":{"line":93,"column":12},"end":{"line":93,"column":84}},"56":{"start":{"line":96,"column":12},"end":{"line":96,"column":43}},"57":{"start":{"line":97,"column":12},"end":{"line":97,"column":100}},"58":{"start":{"line":98,"column":12},"end":{"line":102,"column":13}},"59":{"start":{"line":99,"column":16},"end":{"line":99,"column":44}},"60":{"start":{"line":100,"column":16},"end":{"line":100,"column":90}},"61":{"start":{"line":101,"column":16},"end":{"line":101,"column":23}},"62":{"start":{"line":104,"column":8},"end":{"line":104,"column":31}},"63":{"start":{"line":105,"column":8},"end":{"line":105,"column":88}},"64":{"start":{"line":108,"column":8},"end":{"line":108,"column":32}},"65":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"66":{"start":{"line":110,"column":12},"end":{"line":110,"column":38}},"67":{"start":{"line":112,"column":8},"end":{"line":112,"column":95}},"68":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"69":{"start":{"line":116,"column":12},"end":{"line":116,"column":56}},"70":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"71":{"start":{"line":121,"column":12},"end":{"line":121,"column":105}},"72":{"start":{"line":125,"column":23},"end":{"line":125,"column":127}},"73":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"74":{"start":{"line":127,"column":12},"end":{"line":127,"column":89}},"75":{"start":{"line":131,"column":8},"end":{"line":131,"column":66}},"76":{"start":{"line":134,"column":8},"end":{"line":134,"column":35}},"77":{"start":{"line":135,"column":8},"end":{"line":135,"column":79}},"78":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"79":{"start":{"line":139,"column":12},"end":{"line":139,"column":53}},"80":{"start":{"line":143,"column":8},"end":{"line":143,"column":63}},"81":{"start":{"line":146,"column":8},"end":{"line":146,"column":51}},"82":{"start":{"line":146,"column":27},"end":{"line":146,"column":50}},"83":{"start":{"line":149,"column":8},"end":{"line":149,"column":52}},"84":{"start":{"line":149,"column":27},"end":{"line":149,"column":51}},"85":{"start":{"line":152,"column":0},"end":{"line":152,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":1},"end":{"line":20,"column":2}},"loc":{"start":{"line":20,"column":18},"end":{"line":24,"column":1}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":33},"end":{"line":34,"column":5}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":22},"end":{"line":42,"column":5}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":25},"end":{"line":45,"column":5}},"line":43},"5":{"name":"(anonymous_5)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":30},"end":{"line":56,"column":5}},"line":46},"6":{"name":"(anonymous_6)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":15},"end":{"line":65,"column":5}},"line":57},"7":{"name":"(anonymous_7)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":22},"end":{"line":80,"column":5}},"line":66},"8":{"name":"(anonymous_8)","decl":{"start":{"line":68,"column":29},"end":{"line":68,"column":30}},"loc":{"start":{"line":68,"column":39},"end":{"line":78,"column":9}},"line":68},"9":{"name":"(anonymous_9)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":27},"end":{"line":106,"column":5}},"line":81},"10":{"name":"(anonymous_10)","decl":{"start":{"line":87,"column":57},"end":{"line":87,"column":58}},"loc":{"start":{"line":87,"column":67},"end":{"line":89,"column":9}},"line":87},"11":{"name":"(anonymous_11)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}},"loc":{"start":{"line":107,"column":18},"end":{"line":113,"column":5}},"line":107},"12":{"name":"(anonymous_12)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":24},"end":{"line":118,"column":5}},"line":114},"13":{"name":"(anonymous_13)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":32},"end":{"line":123,"column":5}},"line":119},"14":{"name":"(anonymous_14)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":26},"end":{"line":129,"column":5}},"line":124},"15":{"name":"(anonymous_15)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":18},"end":{"line":132,"column":5}},"line":130},"16":{"name":"(anonymous_16)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":15},"end":{"line":136,"column":5}},"line":133},"17":{"name":"(anonymous_17)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":31},"end":{"line":141,"column":5}},"line":137},"18":{"name":"(anonymous_18)","decl":{"start":{"line":142,"column":4},"end":{"line":142,"column":5}},"loc":{"start":{"line":142,"column":22},"end":{"line":144,"column":5}},"line":142},"19":{"name":"(anonymous_19)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":23},"end":{"line":147,"column":5}},"line":145},"20":{"name":"(anonymous_20)","decl":{"start":{"line":146,"column":15},"end":{"line":146,"column":16}},"loc":{"start":{"line":146,"column":27},"end":{"line":146,"column":50}},"line":146},"21":{"name":"(anonymous_21)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":26},"end":{"line":150,"column":5}},"line":148},"22":{"name":"(anonymous_22)","decl":{"start":{"line":149,"column":15},"end":{"line":149,"column":16}},"loc":{"start":{"line":149,"column":27},"end":{"line":149,"column":51}},"line":149}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":24,"column":3},"end":{"line":24,"column":24}},"type":"binary-expr","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":8}},{"start":{"line":24,"column":13},"end":{"line":24,"column":23}}],"line":24},"4":{"loc":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},{"start":{"line":36,"column":8},"end":{"line":38,"column":9}}],"line":36},"5":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{"line":48,"column":8},"end":{"line":50,"column":9}}],"line":48},"6":{"loc":{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},{"start":{"line":52,"column":8},"end":{"line":55,"column":9}}],"line":52},"7":{"loc":{"start":{"line":62,"column":25},"end":{"line":62,"column":73}},"type":"cond-expr","locations":[{"start":{"line":62,"column":44},"end":{"line":62,"column":68}},{"start":{"line":62,"column":71},"end":{"line":62,"column":73}}],"line":62},"8":{"loc":{"start":{"line":90,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":103,"column":9}},{"start":{"line":90,"column":8},"end":{"line":103,"column":9}}],"line":90},"9":{"loc":{"start":{"line":98,"column":12},"end":{"line":102,"column":13}},"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":102,"column":13}},{"start":{"line":98,"column":12},"end":{"line":102,"column":13}}],"line":98},"10":{"loc":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},{"start":{"line":109,"column":8},"end":{"line":111,"column":9}}],"line":109},"11":{"loc":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},{"start":{"line":115,"column":8},"end":{"line":117,"column":9}}],"line":115},"12":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{"line":120,"column":8},"end":{"line":122,"column":9}}],"line":120},"13":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":8},"end":{"line":128,"column":9}}],"line":126},"14":{"loc":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},{"start":{"line":138,"column":8},"end":{"line":140,"column":9}}],"line":138}},"s":{"0":1,"1":11,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":35,"21":35,"22":35,"23":35,"24":35,"25":35,"26":35,"27":64,"28":1,"29":63,"30":63,"31":63,"32":2,"33":53,"34":52,"35":1,"36":51,"37":51,"38":17,"39":17,"40":1,"41":1,"42":1,"43":0,"44":1,"45":16,"46":15,"47":14,"48":7,"49":7,"50":7,"51":11,"52":7,"53":0,"54":0,"55":0,"56":7,"57":7,"58":7,"59":1,"60":1,"61":1,"62":6,"63":6,"64":6,"65":6,"66":1,"67":6,"68":16,"69":1,"70":15,"71":1,"72":14,"73":14,"74":7,"75":51,"76":17,"77":17,"78":53,"79":1,"80":60,"81":60,"82":173,"83":2,"84":3,"85":1},"f":{"0":11,"1":1,"2":35,"3":64,"4":2,"5":53,"6":1,"7":1,"8":0,"9":16,"10":11,"11":6,"12":16,"13":15,"14":14,"15":51,"16":17,"17":53,"18":60,"19":60,"20":173,"21":2,"22":3},"b":{"0":[1,1,1],"1":[11,0],"2":[11,11],"3":[1,1],"4":[1,63],"5":[1,51],"6":[17,34],"7":[0,1],"8":[0,7],"9":[1,6],"10":[1,5],"11":[1,15],"12":[1,14],"13":[7,7],"14":[1,52]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/model/Game.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/model/Game.ts"],"names":[],"mappings":"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","sourcesContent":["import Player from \"./Player\";\nimport { Board } from \"./Board\";\nimport UserNotFound from \"../errors/UserNotFound\";\nimport GameStartedTwice from \"../errors/GameStartedTwice\";\nimport GameStartedEvent from \"../events/GameStartedEvent\";\nimport Context from \"../contract/Context\";\nimport Turn from \"./Turn\";\nimport { Movement, Position } from \"../contract/dto\";\nimport GameNotStarted from \"../errors/GameNotStarted\";\nimport IncorrectPlayerAction from \"../errors/IncorrectPlayerAction\";\nimport PlayerMoved from \"../events/PlayerMoved\";\nimport { Tile, TileType } from \"./tile/Tile\";\nimport { randomize } from \"../contract\";\nimport NextTurn from \"../events/NextTurn\";\nimport PlayerDied from \"../events/PlayerDied\";\nimport GameFinished from \"../events/GameFinished\";\nimport  { GameState, PlayerState } from \"../contract/dto/GameState\";\nimport { NumberOfStartingPointsExceeded } from \"../errors\";\nimport InvalidPath from \"../errors/InvalidPath\";\n\nenum State {\n    WAITING_FOR_USERS = \"WAITING FOR PLAYERS\",\n    STARTED = \"STARTED\",\n    FINISHED = \"FINISHED\"\n}\n\nexport default class Game \n{\n    id: string\n    name: string\n    players: Array<Player> = [];\n    state: string;\n    board: Board\n    gameStartRequests: Set<String> = new Set();\n    currentTurn: Turn;\n    currentPlayerIdx = 0;\n\n    constructor(\n        id: string,\n        name: string,\n        board: Board,\n    ) {\n        this.id = id;\n        this.name = name;\n        this.board = board;\n        this.state = State.WAITING_FOR_USERS;\n    }\n\n    addPlayer(player: Player) {\n        if (!this.board.hasFreePositions()) {\n            throw new NumberOfStartingPointsExceeded(\n                this.board.startingPoints.length, \n                this.id\n            );\n        }\n\n        player.position = this.board.nextFreePosition();\n        player.startedOn = player.position;\n        this.players.push(player);\n    }\n\n    removePlayer(userId: string) {\n        this.players = this.players.filter(this.doesNotHaveId(userId));\n    }\n\n    startRequest(userId: string, env: Context) {\n        this.assertPlayerExists(userId);\n\n        if (this.gameStartRequests.has(userId)) {\n            throw new GameStartedTwice(userId, this.id);\n        }\n\n        this.gameStartRequests.add(userId);\n\n        if (this.shouldStart()) {\n            this.start(env);\n            env.eventDispatcher.dispatch(new GameStartedEvent(this.id, this.currentTurn));\n        }\n    }\n\n    getState(): GameState {\n        return {\n            gameId: this.id,\n            gameName: this.name,\n            players: this.getPlayersState(),\n            currentTurn: this.currentTurn ? this.currentTurn.state() : {},\n            board: this.board.toTileList()\n        }\n    }\n    \n    private getPlayersState(): PlayerState[] {\n        const players: PlayerState[] = [];\n\n        this.players.forEach(player => {\n            players.push({\n                userId: player.userId,\n                userName: player.userName,\n                hp: player.hp,\n                position: {\n                    row: player.position.row,\n                    col: player.position.col\n                }\n            })\n        })\n\n        return players;\n    }\n\n    movment(movement: Movement, env: Context) {    \n        this.assertGameStarted();\n        this.assertCurrentTurn(movement);\n        this.assertValidPath(movement.path);\n        const lastPosition = movement.path[movement.path.length - 1];\n        const player = this.getPlayer(movement.userId);\n\n        this.board.getTilesOfPath(movement.path).forEach((tile: Tile) => {\n            tile.onWalkThrough(player, env, this);\n        });\n        \n        \n        if (player.hp <= 0) {\n            player.position = player.startedOn;\n            player.hp = 100;\n            env.eventDispatcher.dispatch(new PlayerDied(this.id, player))\n        } else {\n            player.position = lastPosition;\n            env.eventDispatcher.dispatch(new PlayerMoved(this.id, player, movement.path));\n\n            if (this.board.tiles[lastPosition.row][lastPosition.col].type == TileType.FINISH_POINT) {\n                this.state = State.FINISHED;\n                env.eventDispatcher.dispatch(new GameFinished(this.id, player));\n                return;\n            }\n        }\n\n        this.nextTurn(env.rnd);\n        env.eventDispatcher.dispatch(new NextTurn(this.id, this.currentTurn));\n    }\n\n    private nextTurn(rnd: randomize) {\n        this.currentPlayerIdx++;\n\n        if (this.currentPlayerIdx == this.players.length) {\n            this.currentPlayerIdx = 0;\n        }\n        \n\n        this.currentTurn = new Turn(this.players[this.currentPlayerIdx].userId, rnd)\n    }\n\n    private assertGameStarted() {\n        if (this.state != State.STARTED) {\n            throw new GameNotStarted(this.id);\n        }\n    }\n\n    private assertCurrentTurn(movement: Movement) {\n        if (this.currentTurn.userId != movement.userId) {\n            throw new IncorrectPlayerAction(\n                this.id,\n                this.currentTurn.userId,\n                movement.userId\n            )\n        }\n    }\n\n    private assertValidPath(path: Position[]) {\n        const result = this.board.validatePath(\n            path, \n            this.players[this.currentPlayerIdx].position,\n            this.currentTurn.stepPoints\n        );\n\n        if (!result.isValid) {\n            throw new InvalidPath(this.id, result.invalidPath, result.message);\n        }\n    }\n\n    private shouldStart(): boolean {\n        return this.players.length == this.gameStartRequests.size;\n    }\n\n    private start(env: Context) {\n        this.state = State.STARTED;\n        this.currentTurn = new Turn(this.players[0].userId, env.rnd);\n    }\n\n    private assertPlayerExists(userId: string) {\n        if (!this.getPlayer(userId)) {\n            throw new UserNotFound(userId);\n        }\n    }\n\n    private getPlayer(userId: string): Player {\n        return this.players.filter(this.withUserId(userId))[0];\n    }\n\n    private withUserId(userId: string) {\n        return (player: Player) => player.userId == userId; \n    }\n\n    private doesNotHaveId(userId: string) {\n        return (player: Player) => player.userId !== userId;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2ead292c3b01bc69fe74ebfda1b63bdc00409c3d","contentHash":"1b77f7440bc8b39a948e21e19b54592e4ee121a3ad1d41323e5cf9e3c2526e40"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/UserNotFound.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/UserNotFound.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":59}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":44}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":74}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":35}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":24},"end":{"line":12,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/UserNotFound.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/UserNotFound.ts"],"names":[],"mappings":";;;;;AAAA,4DAAoC;AACpC,6CAG0B;AAE1B,MAAqB,YAAa,SAAQ,mBAAS;IAI/C,YAAY,MAAc;QACtB,KAAK,CAAC,kBAAS,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;IAC/B,CAAC;CACJ;AARD,+BAQC","sourcesContent":["import GameError from './GameError';\nimport { \n    ErrorType,\n    UserNotFoundInGame\n} from 'tr-common/events';\n\nexport default class UserNotFound extends GameError implements UserNotFoundInGame\n{\n    searchedUser: string;\n\n    constructor(userId: string) {\n        super(ErrorType.USER_NOT_FOUND, \"Could not found users\");\n        this.searchedUser = userId;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a8508d544277045af45249f2b976474400deeb5d","contentHash":"893a7b3dfedbc6ac5862e1b039801c93c290381fc1b04fca0fec79ad4fa0a346"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameStartedTwice.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameStartedTwice.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":44}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":59}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":100}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":29}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":32},"end":{"line":12,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameStartedTwice.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameStartedTwice.ts"],"names":[],"mappings":";;;;;AAAA,6CAG0B;AAC1B,4DAAoC;AAEpC,MAAqB,gBAAiB,SAAQ,mBAAS;IAInD,YAAY,MAAc,EAAE,MAAc;QACtC,KAAK,CACD,kBAAS,CAAC,kBAAkB,EAC5B,MAAM,EACN,qCAAqC,CACxC,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;CACJ;AAZD,mCAYC","sourcesContent":["import { \n    ErrorType,\n    GameStartedTwiceBySinglePlayer\n} from 'tr-common/events';\nimport GameError from './GameError';\n\nexport default class GameStartedTwice extends GameError implements GameStartedTwiceBySinglePlayer\n{\n    userId: string;\n\n    constructor(userId: string, gameId: string) {\n        super(\n            ErrorType.GAME_STARTED_TWICE,\n            gameId,\n            \"Game started twice by a single user\"\n        );\n        this.userId = userId;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c9c4dc04693bd07efc32f49f1bd4922ceaccd959","contentHash":"af0d55b001851b8bed427b1aaf3745643cccf2f4ce5c07ab454086c4ab4773d4"},"/home/marek/Projects/tomb_racer/back-end/src/game/events/GameStartedEvent.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/events/GameStartedEvent.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":48}},"2":{"start":{"line":6,"column":8},"end":{"line":9,"column":11}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":30},"end":{"line":10,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":17,"3":1},"f":{"0":17},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/events/GameStartedEvent.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/events/GameStartedEvent.ts"],"names":[],"mappings":";;AAAA,iDAAwD;AAGxD,MAAqB,gBAAiB,SAAQ,cAAK;IAE/C,YAAY,MAAc,EAAE,IAAU;QAClC,KAAK,CAAC,kBAAS,CAAC,YAAY,EAAE;YAC1B,MAAM;YACN,IAAI;SACP,CAAC,CAAC;IACP,CAAC;CACJ;AARD,mCAQC","sourcesContent":["import { Event, EventType } from './../contract/Events';\nimport Turn from '../model/Turn';\n\nexport default class GameStartedEvent extends Event\n{\n    constructor(gameId: string, turn: Turn) {\n        super(EventType.GAME_STARTED, {\n            gameId,\n            turn\n        });\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d42cc752dcbde072a450689675e80e96136df02b","contentHash":"6479ed03859f59ce2a80ed4305fa566bc29cf1e344d5942fbe10e30a47e2c389"},"/home/marek/Projects/tomb_racer/back-end/src/game/model/Turn.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/model/Turn.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":19},"end":{"line":3,"column":20}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":18}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":30}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":29}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":53}},"6":{"start":{"line":12,"column":8},"end":{"line":15,"column":10}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":30},"end":{"line":10,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":12},"end":{"line":16,"column":5}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":23,"4":23,"5":23,"6":0,"7":1},"f":{"0":23,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/model/Turn.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/model/Turn.ts"],"names":[],"mappings":";;AAGA,MAAM,UAAU,GAAG,CAAC,CAAC;AACrB,MAAM,QAAQ,GAAG,CAAC,CAAC;AAEnB,MAAqB,IAAI;IAMrB,YAAY,MAAc,EAAE,IAAe;QAH3C,iBAAY,GAAW,CAAC,CAAC;QAIrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IAED,KAAK;QACD,OAAO;YACH,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,UAAU,EAAE,IAAI,CAAC,UAAU;SAC9B,CAAA;IACL,CAAC;CACJ;AAjBD,uBAiBC","sourcesContent":["import { randomize } from \"../contract\";\nimport { TurnState } from \"../contract/dto/GameState\";\n\nconst CUBE_START = 1;\nconst CUBE_END = 6;\n\nexport default class Turn\n{\n    userId: string;\n    actionPoints: number = 3;\n    stepPoints: number;\n\n    constructor(userId: string, rand: randomize) {\n        this.userId = userId;\n        this.stepPoints = rand(CUBE_START, CUBE_END);\n    }\n\n    state(): TurnState {\n        return {\n            userId: this.userId,\n            stepPoints: this.stepPoints\n        }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d08ab441c29c52ef09edeac32c14c0833fd7e355","contentHash":"bdc5ff9cd5ddab15f1d1c9f202e09c4624bdad5fc3f4a8eaaa969e8d97d89f73"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameNotStarted.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameNotStarted.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":44}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":59}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":87}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":24},"end":{"line":11,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameNotStarted.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/GameNotStarted.ts"],"names":[],"mappings":";;;;;AAAA,6CAE0B;AAC1B,4DAAoC;AAEpC,MAAqB,cAAe,SAAQ,mBAAS;IAEjD,YAAY,MAAc;QACtB,KAAK,CACD,kBAAS,CAAC,oBAAoB,EAC9B,MAAM,EACN,sBAAsB,CACzB,CAAC;IACN,CAAC;CACJ;AATD,iCASC","sourcesContent":["import { \n    ErrorType,\n} from 'tr-common/events';\nimport GameError from './GameError';\n\nexport default class GameNotStarted extends GameError \n{\n    constructor(gameId: string) {\n        super(\n            ErrorType.GAME_NOT_STARTED_YET, \n            gameId,\n            \"Game not started yet\"\n        );\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"85a5b9b0cfe3de1909e963aa24f003f9eccadd20","contentHash":"4595a1545b28f533f63d7cf6398c9154a550028abb116fc9063774f36a763b9e"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/IncorrectPlayerAction.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/IncorrectPlayerAction.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":59}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":44}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":95}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":29}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":57}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":75}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":77},"end":{"line":14,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/IncorrectPlayerAction.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/IncorrectPlayerAction.ts"],"names":[],"mappings":";;;;;AAAA,4DAAoC;AACpC,6CAG0B;AAE1B,MAAqB,qBAAsB,SAAQ,mBAAS;IAMxD,YACI,MAAc,EACd,oBAA4B,EAC5B,6BAAqC;QAErC,KAAK,CACD,kBAAS,CAAC,uBAAuB,EACjC,SAAS,EACT,wBAAwB,CAC3B,CAAC;QAEF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,6BAA6B,GAAG,6BAA6B,CAAC;IACvE,CAAC;CAEJ;AAtBD,wCAsBC","sourcesContent":["import GameError from \"./GameError\";\nimport { \n    ErrorType,\n    IncorretPlayerAction as IIncorretPlayerAction\n} from 'tr-common/events';\n\nexport default class IncorrectPlayerAction extends GameError implements IIncorretPlayerAction \n{\n    gameId: string;\n    playerExecutedAction: string;\n    playerThatShouldExecuteAction: string;\n\n    constructor(\n        gameId: string,\n        playerExecutedAction: string,\n        playerThatShouldExecuteAction: string\n    ) {\n        super(\n            ErrorType.INCORRECT_PLAYER_ACTION, \n            undefined,\n            \"Inorrect Player Action\"\n        );\n\n        this.gameId = gameId;\n        this.playerExecutedAction = playerExecutedAction;\n        this.playerThatShouldExecuteAction = playerThatShouldExecuteAction;\n    }\n    \n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3c02cf689e9e11e9b99f51a9f314bfe63708f175","contentHash":"c7189949baebe98bc68a8a02a7b37c7e4b31ef148b868b8b6d011bdbddf1e7b6"},"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerMoved.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerMoved.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":46}},"2":{"start":{"line":6,"column":8},"end":{"line":11,"column":11}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":38},"end":{"line":12,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":7,"3":1},"f":{"0":7},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerMoved.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerMoved.ts"],"names":[],"mappings":";;AAAA,+CAAqD;AAIrD,MAAqB,WAAY,SAAQ,cAAK;IAE1C,YACI,MAAc,EACd,MAAc,EACd,IAAgB;QAEhB,KAAK,CAAC,kBAAS,CAAC,YAAY,EAAE;YAC1B,MAAM;YACN,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,IAAI;SACP,CAAC,CAAA;IACN,CAAC;CACJ;AAdD,8BAcC","sourcesContent":["import { Event, EventType } from \"../contract/Events\"\nimport { Player } from \"../model\";\nimport { Position } from \"../contract/dto\";\n\nexport default class PlayerMoved extends Event\n{\n    constructor(\n        gameId: string, \n        player: Player, \n        path: Position[]\n    ) {\n        super(EventType.PLAYER_MOVED, {\n            gameId,\n            userId: player.userId, \n            position: player.position,\n            path\n        })\n    }\n} "]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3d2681f542fb3c6518d6bd0137fa7119c9ac002c","contentHash":"c4cbbd4e81049ab849cce5f488fc4983f527a1914304bf36e4e34e22781153bb"},"/home/marek/Projects/tomb_racer/back-end/src/game/model/tile/Tile.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/model/tile/Tile.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":70}},"4":{"start":{"line":8,"column":0},"end":{"line":14,"column":59}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":30}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":30}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":50}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":34}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":46}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"11":{"start":{"line":18,"column":8},"end":{"line":18,"column":33}},"12":{"start":{"line":21,"column":8},"end":{"line":23,"column":47}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":20}},"14":{"start":{"line":29,"column":18},"end":{"line":29,"column":20}},"15":{"start":{"line":32,"column":8},"end":{"line":32,"column":41}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":20}},"17":{"start":{"line":38,"column":8},"end":{"line":38,"column":31}},"18":{"start":{"line":39,"column":8},"end":{"line":39,"column":112}},"19":{"start":{"line":42,"column":0},"end":{"line":42,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":1},"end":{"line":8,"column":2}},"loc":{"start":{"line":8,"column":21},"end":{"line":14,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":32},"end":{"line":19,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":17},"end":{"line":24,"column":5}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":41},"end":{"line":25,"column":44}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":26},"end":{"line":33,"column":5}},"line":31},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":17},"end":{"line":36,"column":5}},"line":34},"8":{"name":"(anonymous_8)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":41},"end":{"line":40,"column":5}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":57}},"type":"binary-expr","locations":[{"start":{"line":14,"column":14},"end":{"line":14,"column":30}},{"start":{"line":14,"column":35},"end":{"line":14,"column":56}}],"line":14},"4":{"loc":{"start":{"line":21,"column":15},"end":{"line":23,"column":46}},"type":"binary-expr","locations":[{"start":{"line":21,"column":15},"end":{"line":21,"column":41}},{"start":{"line":22,"column":12},"end":{"line":22,"column":48}},{"start":{"line":23,"column":12},"end":{"line":23,"column":46}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":123,"11":123,"12":20,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1},"f":{"0":1,"1":1,"2":123,"3":20,"4":9,"5":0,"6":2,"7":2,"8":2},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[20,8,2]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/model/tile/Tile.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/model/tile/Tile.ts"],"names":[],"mappings":";;;;;AAIA,uEAA+C;AAE/C,IAAY,QAOX;AAPD,WAAY,QAAQ;IAEhB,yBAAa,CAAA;IACb,yBAAa,CAAA;IACb,6CAAiC,CAAA;IACjC,6BAAiB,CAAA;IACjB,yCAA6B,CAAA;AACjC,CAAC,EAPW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAOnB;AAED,MAAa,IAAI;IAKb,YAAY,IAAc,EAAE,QAAkB;QAE1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI;YAC7B,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,cAAc;YACpC,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,YAAY,CAAC;IAC3C,CAAC;IAED,aAAa,CAAC,MAAc,EAAE,OAAgB,EAAE,IAAU,IAAG,CAAC;IAC9D,QAAQ,CAAC,MAAc,EAAE,KAAY,EAAE,OAAgB,IAAG,CAAC;CAC9D;AAnBD,oBAmBC;AAED,MAAM,SAAS,GAAG,EAAE,CAAC;AAErB,MAAa,WAAY,SAAQ,IAAI;IAEjC,YAAY,QAAkB;QAC1B,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,MAAc,EAAE,OAAgB,EAAE,IAAU;QACtD,MAAM,CAAC,EAAE,IAAI,SAAS,CAAC;QACvB,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,mBAAS,CAC1C,IAAI,CAAC,EAAE,EACP,MAAM,CAAC,MAAM,EACb,SAAS,EACT,MAAM,CAAC,EAAE,CACZ,CAAC,CAAC;IACP,CAAC;CACJ;AAnBD,kCAmBC","sourcesContent":["import Position from '../../contract/dto/Position';\nimport { Player, Game } from '..';\nimport Context from '../../contract/Context'\nimport { Board } from '../Board';\nimport PlayerHit from '../../events/PlayerHit';\n\nexport enum TileType\n{\n    PATH = \"PATH\",\n    WALL = \"WALL\",\n    STARTING_POINT = \"STARTING_POINT\",\n    SPIKES = \"SPIKES\", \n    FINISH_POINT = \"FINISH_POINT\"\n}\n\nexport class Tile\n{\n    type: TileType\n    position: Position\n\n    constructor(type: TileType, position: Position)\n    {\n        this.type = type;\n        this.position = position;\n    }\n\n    isWalkable(): boolean {\n        return this.type == TileType.PATH ||\n            this.type == TileType.STARTING_POINT ||\n            this.type == TileType.FINISH_POINT;\n    }\n\n    onWalkThrough(player: Player, context: Context, game: Game) {}\n    onPlaced(player: Player, board: Board, context: Context) {}\n}\n\nconst HIT_VALUE = 20;\n\nexport class SipikedTile extends Tile\n{\n    constructor(position: Position) {\n        super(TileType.SPIKES, position);\n    }\n\n    isWalkable() {\n        return true;\n    }\n\n    onWalkThrough(player: Player, context: Context, game: Game) {\n        player.hp -= HIT_VALUE;\n        context.eventDispatcher.dispatch(new PlayerHit(\n            game.id,\n            player.userId,\n            HIT_VALUE,\n            player.hp\n        ));\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"51b8925f5d1259c56b328f90973b7c9ea10d847c","contentHash":"5216c49f9142632056c959fb157467a2281871e3b4454f2145cb7c53ba52da59"},"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerHit.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerHit.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":46}},"2":{"start":{"line":6,"column":8},"end":{"line":11,"column":11}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":52},"end":{"line":12,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerHit.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerHit.ts"],"names":[],"mappings":";;AAAA,+CAAsD;AAEtD,MAAqB,SAAU,SAAQ,cAAK;IACxC,YAAY,MAAc,EAAE,MAAc,EAAE,OAAe,EAAE,SAAiB;QAC1E,KAAK,CAAC,kBAAS,CAAC,UAAU,EAAE;YACxB,MAAM;YACN,MAAM;YACN,OAAO;YACP,SAAS;SACZ,CAAC,CAAA;IACN,CAAC;CACJ;AATD,4BASC","sourcesContent":["import { Event, EventType } from \"../contract/Events\";\n\nexport default class PlayerHit extends Event {\n    constructor(gameId: string, userId: string, hpTaken: number, currentHp: number) {\n        super(EventType.PLAYER_HIT, {\n            gameId,\n            userId,\n            hpTaken,\n            currentHp\n        })\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"314c20015a7b6d7f4c4e7c4eb557c0762fc6f9a1","contentHash":"be9d5c507b4c2f4cd62954a59a195e5fcc8deaab0b8e2f3ceaca5f3a9898fe18"},"/home/marek/Projects/tomb_racer/back-end/src/game/events/NextTurn.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/events/NextTurn.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":46}},"2":{"start":{"line":6,"column":8},"end":{"line":9,"column":11}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":30},"end":{"line":10,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":6,"3":1},"f":{"0":6},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/events/NextTurn.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/events/NextTurn.ts"],"names":[],"mappings":";;AAAA,+CAAsD;AAGtD,MAAqB,QAAS,SAAQ,cAAK;IACvC,YAAY,MAAc,EAAE,IAAU;QAClC,KAAK,CAAC,kBAAS,CAAC,SAAS,EAAE;YACvB,MAAM;YACN,IAAI;SACP,CAAC,CAAA;IACN,CAAC;CACJ;AAPD,2BAOC","sourcesContent":["import { Event, EventType } from \"../contract/Events\";\nimport Turn from \"../model/Turn\";\n\nexport default class NextTurn extends Event {\n    constructor(gameId: string, turn: Turn) {\n        super(EventType.NEXT_TURN, {\n            gameId,\n            turn\n        })\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d08bcb5f191791905fcf428b90751c1dc3cd82b","contentHash":"979e65540271dd543026d88be7d750c807c482b1bf49b1523787eee8e14e310b"},"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerDied.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerDied.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":46}},"2":{"start":{"line":6,"column":8},"end":{"line":10,"column":11}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":32},"end":{"line":11,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":0,"3":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerDied.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerDied.ts"],"names":[],"mappings":";;AAAA,+CAAsD;AAGtD,MAAqB,UAAW,SAAQ,cAAK;IAEzC,YAAY,MAAc,EAAE,MAAc;QACtC,KAAK,CAAC,kBAAS,CAAC,WAAW,EAAE;YACzB,MAAM;YACN,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,OAAO,EAAE,MAAM,CAAC,QAAQ;SAC3B,CAAC,CAAA;IACN,CAAC;CACJ;AATD,6BASC","sourcesContent":["import { Event, EventType } from \"../contract/Events\";\nimport { Player } from \"../model\";\n\nexport default class PlayerDied extends Event\n{\n    constructor(gameId: string, player: Player) {\n        super(EventType.PLAYER_DIED, {\n            gameId,\n            userId: player.userId,\n            movedTo: player.position\n        })\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6dedd645691a7197ca9fd1a3ff3a57540063c385","contentHash":"e6eb5eb6d6077f124388c42ee0aba7ee40860a77998151f4766d6757d3d8e328"},"/home/marek/Projects/tomb_racer/back-end/src/game/events/GameFinished.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/events/GameFinished.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":46}},"2":{"start":{"line":6,"column":8},"end":{"line":9,"column":11}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":32},"end":{"line":10,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/events/GameFinished.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/events/GameFinished.ts"],"names":[],"mappings":";;AAAA,+CAAsD;AAGtD,MAAqB,YAAa,SAAQ,cAAK;IAC3C,YAAY,MAAc,EAAE,MAAc;QACtC,KAAK,CAAC,kBAAS,CAAC,aAAa,EAAE;YAC3B,MAAM;YACN,MAAM,EAAE,MAAM,CAAC,MAAM;SACxB,CAAC,CAAA;IACN,CAAC;CACJ;AAPD,+BAOC","sourcesContent":["import { Event, EventType } from \"../contract/Events\";\nimport { Player } from \"../model\";\n\nexport default class GameFinished extends Event {\n    constructor(gameId: string, winner: Player) {\n        super(EventType.GAME_FINISHED, {\n            gameId,\n            winner: winner.userId\n        })\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5b674e3110036cdf9f09c78c0bd9e9936c89b62f","contentHash":"5fa0470087790892bd8da69d397a30431043ab470145c7a6391835df31aa9a2d"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/InvalidPath.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/InvalidPath.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":59}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":44}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":64}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":40}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":46},"end":{"line":12,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":7,"6":7,"7":1},"f":{"0":1,"1":7},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/InvalidPath.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/InvalidPath.ts"],"names":[],"mappings":";;;;;AAAA,4DAAoC;AACpC,6CAG0B;AAG1B,MAAqB,WAAY,SAAQ,mBAAS;IAI9C,YAAY,MAAc,EAAE,WAAuB,EAAE,OAAe;QAChE,KAAK,CAAC,kBAAS,CAAC,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IACpC,CAAC;CACJ;AARD,8BAQC","sourcesContent":["import GameError from \"./GameError\";\nimport { \n    ErrorType,\n    InvalidPath as IInvalidPath\n} from 'tr-common/events';\nimport { Position } from 'tr-common/data_types';\n\nexport default class InvalidPath extends GameError implements IInvalidPath\n{\n    invalidSteps: Position[];\n\n    constructor(gameId: string, invalidPath: Position[], message: string) {\n        super(ErrorType.INVALID_PATH, gameId, message);\n        this.invalidSteps = invalidPath;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b7dde04a542d037bcaf7fff3919217f23342f34c","contentHash":"e62eee1185892f7c9a46f0b976697a27e0fe6d8b90f6e2319865cc4e125eb094"},"/home/marek/Projects/tomb_racer/back-end/src/game/model/Player.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/model/Player.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":22}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":28}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":29}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":33}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":34},"end":{"line":9,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":64,"2":64,"3":64,"4":64,"5":1},"f":{"0":64},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/model/Player.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/model/Player.ts"],"names":[],"mappings":";;AAEA,MAAqB,MAAM;IAQvB,YACI,MAAc,EACd,QAAgB;QAPpB,OAAE,GAAW,GAAG,CAAC;QACjB,cAAS,GAAe,EAAE,CAAC;QAQvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;CACJ;AAfD,yBAeC","sourcesContent":["import { Position } from \"../contract/dto\";\n\nexport default class Player {\n    userId: string;\n    userName: string;\n    hp: number = 100;\n    inventory: Array<any> = [];\n    position: Position\n    startedOn: Position\n\n    constructor(\n        userId: string,\n        userName: string, \n    ) {\n        this.userId = userId;\n        this.userName = userName;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"07b6bc0c7b528167af28bce20cc02dc75b70720e","contentHash":"c7cf3e8becff1cf54fe460a326325093fdda5e13023e9cbfad5527a918e10518"},"/home/marek/Projects/tomb_racer/back-end/src/game/model/Board.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/model/Board.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":37}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":73}},"5":{"start":{"line":8,"column":31},"end":{"line":8,"column":81}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":27}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":23}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":24}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":33}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":37}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":34}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":42}},"13":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"14":{"start":{"line":25,"column":12},"end":{"line":25,"column":47}},"15":{"start":{"line":29,"column":23},"end":{"line":29,"column":62}},"16":{"start":{"line":29,"column":42},"end":{"line":29,"column":62}},"17":{"start":{"line":30,"column":35},"end":{"line":30,"column":69}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":45}},"19":{"start":{"line":34,"column":23},"end":{"line":34,"column":62}},"20":{"start":{"line":34,"column":42},"end":{"line":34,"column":62}},"21":{"start":{"line":35,"column":35},"end":{"line":35,"column":69}},"22":{"start":{"line":36,"column":30},"end":{"line":36,"column":56}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":37}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":33}},"25":{"start":{"line":41,"column":33},"end":{"line":41,"column":68}},"26":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"27":{"start":{"line":43,"column":12},"end":{"line":43,"column":108}},"28":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"29":{"start":{"line":46,"column":12},"end":{"line":46,"column":94}},"30":{"start":{"line":48,"column":26},"end":{"line":48,"column":33}},"31":{"start":{"line":49,"column":8},"end":{"line":52,"column":9}},"32":{"start":{"line":51,"column":12},"end":{"line":51,"column":112}},"33":{"start":{"line":53,"column":8},"end":{"line":53,"column":65}},"34":{"start":{"line":56,"column":8},"end":{"line":62,"column":9}},"35":{"start":{"line":56,"column":21},"end":{"line":56,"column":22}},"36":{"start":{"line":57,"column":25},"end":{"line":57,"column":36}},"37":{"start":{"line":58,"column":28},"end":{"line":58,"column":35}},"38":{"start":{"line":59,"column":12},"end":{"line":61,"column":13}},"39":{"start":{"line":60,"column":16},"end":{"line":60,"column":113}},"40":{"start":{"line":63,"column":8},"end":{"line":63,"column":71}},"41":{"start":{"line":66,"column":8},"end":{"line":68,"column":11}},"42":{"start":{"line":67,"column":12},"end":{"line":67,"column":58}},"43":{"start":{"line":71,"column":8},"end":{"line":71,"column":68}},"44":{"start":{"line":71,"column":29},"end":{"line":71,"column":67}},"45":{"start":{"line":74,"column":8},"end":{"line":76,"column":10}},"46":{"start":{"line":75,"column":12},"end":{"line":75,"column":43}},"47":{"start":{"line":79,"column":21},"end":{"line":79,"column":59}},"48":{"start":{"line":80,"column":8},"end":{"line":80,"column":33}},"49":{"start":{"line":83,"column":8},"end":{"line":85,"column":11}},"50":{"start":{"line":84,"column":12},"end":{"line":84,"column":77}},"51":{"start":{"line":84,"column":51},"end":{"line":84,"column":72}},"52":{"start":{"line":88,"column":8},"end":{"line":92,"column":15}},"53":{"start":{"line":89,"column":12},"end":{"line":91,"column":46}},"54":{"start":{"line":95,"column":8},"end":{"line":95,"column":52}},"55":{"start":{"line":98,"column":8},"end":{"line":98,"column":70}},"56":{"start":{"line":98,"column":25},"end":{"line":98,"column":69}},"57":{"start":{"line":101,"column":8},"end":{"line":101,"column":58}},"58":{"start":{"line":101,"column":25},"end":{"line":101,"column":57}},"59":{"start":{"line":104,"column":8},"end":{"line":106,"column":11}},"60":{"start":{"line":105,"column":12},"end":{"line":105,"column":86}},"61":{"start":{"line":105,"column":44},"end":{"line":105,"column":82}},"62":{"start":{"line":109,"column":0},"end":{"line":109,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":21},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":28},"end":{"line":22,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":33},"end":{"line":27,"column":5}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":23},"end":{"line":32,"column":5}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":23},"end":{"line":29,"column":24}},"loc":{"start":{"line":29,"column":42},"end":{"line":29,"column":62}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":23},"end":{"line":39,"column":5}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":23},"end":{"line":34,"column":24}},"loc":{"start":{"line":34,"column":42},"end":{"line":34,"column":62}},"line":34},"8":{"name":"(anonymous_8)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":55},"end":{"line":54,"column":5}},"line":40},"9":{"name":"(anonymous_9)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":28},"end":{"line":64,"column":5}},"line":55},"10":{"name":"(anonymous_10)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":25},"end":{"line":69,"column":5}},"line":65},"11":{"name":"(anonymous_11)","decl":{"start":{"line":66,"column":24},"end":{"line":66,"column":25}},"loc":{"start":{"line":66,"column":38},"end":{"line":68,"column":9}},"line":66},"12":{"name":"(anonymous_12)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":13},"end":{"line":72,"column":5}},"line":70},"13":{"name":"(anonymous_13)","decl":{"start":{"line":71,"column":15},"end":{"line":71,"column":16}},"loc":{"start":{"line":71,"column":29},"end":{"line":71,"column":67}},"line":71},"14":{"name":"(anonymous_14)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":22},"end":{"line":77,"column":5}},"line":73},"15":{"name":"(anonymous_15)","decl":{"start":{"line":74,"column":15},"end":{"line":74,"column":16}},"loc":{"start":{"line":74,"column":29},"end":{"line":76,"column":9}},"line":74},"16":{"name":"(anonymous_16)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":22},"end":{"line":81,"column":5}},"line":78},"17":{"name":"(anonymous_17)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":29},"end":{"line":86,"column":5}},"line":82},"18":{"name":"(anonymous_18)","decl":{"start":{"line":83,"column":37},"end":{"line":83,"column":38}},"loc":{"start":{"line":83,"column":55},"end":{"line":85,"column":9}},"line":83},"19":{"name":"(anonymous_19)","decl":{"start":{"line":84,"column":35},"end":{"line":84,"column":36}},"loc":{"start":{"line":84,"column":49},"end":{"line":84,"column":74}},"line":84},"20":{"name":"(anonymous_20)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":25},"end":{"line":93,"column":5}},"line":87},"21":{"name":"(anonymous_21)","decl":{"start":{"line":88,"column":48},"end":{"line":88,"column":49}},"loc":{"start":{"line":88,"column":64},"end":{"line":92,"column":9}},"line":88},"22":{"name":"(anonymous_22)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":35},"end":{"line":96,"column":5}},"line":94},"23":{"name":"(anonymous_23)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":22},"end":{"line":99,"column":5}},"line":97},"24":{"name":"(anonymous_24)","decl":{"start":{"line":98,"column":15},"end":{"line":98,"column":16}},"loc":{"start":{"line":98,"column":25},"end":{"line":98,"column":69}},"line":98},"25":{"name":"(anonymous_25)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":22},"end":{"line":102,"column":5}},"line":100},"26":{"name":"(anonymous_26)","decl":{"start":{"line":101,"column":15},"end":{"line":101,"column":16}},"loc":{"start":{"line":101,"column":25},"end":{"line":101,"column":57}},"line":101},"27":{"name":"(anonymous_27)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":17},"end":{"line":107,"column":5}},"line":103},"28":{"name":"(anonymous_28)","decl":{"start":{"line":104,"column":30},"end":{"line":104,"column":31}},"loc":{"start":{"line":104,"column":44},"end":{"line":106,"column":9}},"line":104},"29":{"name":"(anonymous_29)","decl":{"start":{"line":105,"column":32},"end":{"line":105,"column":33}},"loc":{"start":{"line":105,"column":42},"end":{"line":105,"column":84}},"line":105}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},{"start":{"line":24,"column":8},"end":{"line":26,"column":9}}],"line":24},"4":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42},"5":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{"line":45,"column":8},"end":{"line":47,"column":9}}],"line":45},"6":{"loc":{"start":{"line":49,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":52,"column":9}},{"start":{"line":49,"column":8},"end":{"line":52,"column":9}}],"line":49},"7":{"loc":{"start":{"line":49,"column":12},"end":{"line":50,"column":49}},"type":"binary-expr","locations":[{"start":{"line":49,"column":13},"end":{"line":49,"column":48}},{"start":{"line":50,"column":13},"end":{"line":50,"column":48}}],"line":49},"8":{"loc":{"start":{"line":59,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":59,"column":12},"end":{"line":61,"column":13}},{"start":{"line":59,"column":12},"end":{"line":61,"column":13}}],"line":59}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":90,"7":90,"8":36,"9":36,"10":36,"11":36,"12":36,"13":36,"14":1,"15":64,"16":180,"17":64,"18":64,"19":63,"20":178,"21":63,"22":63,"23":63,"24":63,"25":14,"26":14,"27":1,"28":13,"29":1,"30":12,"31":12,"32":1,"33":11,"34":11,"35":11,"36":17,"37":17,"38":17,"39":4,"40":7,"41":7,"42":11,"43":0,"44":0,"45":14,"46":22,"47":22,"48":22,"49":36,"50":56,"51":123,"52":36,"53":56,"54":56,"55":56,"56":123,"57":56,"58":90,"59":1,"60":1,"61":2,"62":1},"f":{"0":2,"1":90,"2":36,"3":36,"4":64,"5":180,"6":63,"7":178,"8":14,"9":11,"10":7,"11":11,"12":0,"13":0,"14":14,"15":22,"16":22,"17":36,"18":56,"19":123,"20":36,"21":56,"22":56,"23":56,"24":123,"25":56,"26":90,"27":1,"28":1,"29":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[1,35],"4":[1,13],"5":[1,12],"6":[1,11],"7":[12,4],"8":[4,13]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/model/Board.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/model/Board.ts"],"names":[],"mappings":"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","sourcesContent":["import Position from '../contract/dto/Position';\nimport {Tile, TileType} from './tile/Tile'\nimport { boardDefinition } from '../contract'\nimport { NumberOfStartingPointsExceeded } from '../errors';\nimport InvalidBoard from '../errors/InvalidBoard';\nimport InvalidPath from '../errors/InvalidPath';\nimport { TileState } from '../contract/dto/GameState';\nimport PathValidationResult from './PathValidationResult';\n\nclass StartingPoint\n{\n    isFree: boolean = true;\n    pos: Position;\n\n    constructor(pos: Position) {\n        this.pos = pos;\n    }\n}\n\nexport class Board\n{\n    tiles: Tile[][] = [];\n    startingPoints: StartingPoint[] = [];\n\n    constructor(definition: boardDefinition[][]) {\n        this.createTiles(definition);\n        this.findStartingPoints();\n\n        this.assertEnoughStartingPoints();\n    }\n\n    private assertEnoughStartingPoints() {\n        if (this.startingPoints.length < 2) {\n            throw new InvalidBoard();\n        }\n    }\n\n    hasFreePositions() {\n        const isFree = (startingPoint: StartingPoint) => startingPoint.isFree;\n        const freeStartingPoints = this.startingPoints.filter(isFree);\n\n        return freeStartingPoints.length > 0;\n    }\n\n    nextFreePosition(): Position {\n        const isFree = (startingPoint: StartingPoint) => startingPoint.isFree;\n        const freeStartingPoints = this.startingPoints.filter(isFree);\n\n        const startingPoint = freeStartingPoints.shift();\n        startingPoint.isFree = false;\n        \n        return startingPoint.pos;\n    }\n\n    validatePath(path: Position[], playerPosition: Position, expectedLength: number): PathValidationResult {\n        const invalidPositions = path.filter(this.invalidPosition());\n\n        if (invalidPositions.length) {\n            return new PathValidationResult(\n                false,\n                invalidPositions,\n                \"Paths goes through walls.\"\n            );\n        }\n\n        if (path.length != expectedLength) {\n            return new PathValidationResult(\n                false,\n                path,\n                \"Path has invalid length\"\n            )\n        }\n\n        const pathFirst = path[0];\n\n        if (\n            (pathFirst.row == playerPosition.row) && \n            (pathFirst.col == playerPosition.col)\n        ) {\n            return new PathValidationResult(\n                false,\n                [pathFirst],\n                \"Path starts at the player position\"\n            )\n        }\n\n        return this.validateAdjacency([playerPosition, ...path]);\n    }\n\n    private validateAdjacency(path: Position[]): PathValidationResult {\n        for (let i = 1; i < path.length; i++) {\n            const prev = path[i - 1];\n            const current = path[i];\n\n            if (!current.isAdjacentTo(prev)) {\n                return new PathValidationResult(\n                    false,\n                    [prev, current],\n                    \"Path steps are not adjacent\"\n                )\n            }\n        }\n\n        return new PathValidationResult(true, [], \"Path OK\");\n    }\n\n    getTilesOfPath(path: Position[]): Tile[] {\n        return path.map((position: Position) => {\n            return this.tiles[position.row][position.col];\n        })\n    }\n\n    toTile() {\n        return (position: Position) => this.tiles[position.row][position.col];\n    }\n    private invalidPosition() {\n        return (position: Position) => {\n            return !this.isValid(position);\n        }\n    }\n\n    private isValid(position: Position): boolean {\n        const tile: Tile = this.tiles[position.row][position.col];\n        return tile.isWalkable();\n    }\n\n    private createTiles(definitions: boardDefinition[][]) {\n        this.tiles = definitions.map((rowDefs: boardDefinition[], row) => {\n            return [...rowDefs.map((def: boardDefinition, col) => { return def(row, col)})]\n        })\n    }\n\n    private findStartingPoints() {\n        this.startingPoints = this.tiles.reduce((prev: StartingPoint[], curr: Tile[]) => {\n            return prev.concat(this\n                .findStartingPointsInRow(curr)\n                .map(this.toStartingPoint())\n            );\n        }, [])\n    }\n\n    private findStartingPointsInRow(tiles: Tile[]): Tile[] {\n        return tiles.filter(this.isStartingPoint());\n    }\n\n    private isStartingPoint() {\n        return (tile: Tile) => tile.type === TileType.STARTING_POINT;\n    }\n\n    private toStartingPoint() {\n        return (tile: Tile) => new StartingPoint(tile.position);\n    }\n\n    toTileList(): TileState[][] {\n        return this.tiles.map((tilesRow) => {\n            return tilesRow.map((tile) => { return {type: tile.type.toString()}})\n        })\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d43f4ceeaa36c4345d84c7a23057afe587cdeb7","contentHash":"7faed140904d9a17f6db50a0335ad516c6040d3d7c4bee5d4ae417c80f4205fd"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/InvalidBoard.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/InvalidBoard.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":44}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":59}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":108}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":43}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":12,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/InvalidBoard.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/InvalidBoard.ts"],"names":[],"mappings":";;;;;AAAA,6CAG0B;AAE1B,4DAAoC;AAEpC,MAAqB,YAAa,SAAQ,mBAAS;IAI/C;QACI,KAAK,CACD,kBAAS,CAAC,aAAa,EACvB,SAAS,EACT,+CAA+C,CAClD,CAAC;QAPN,8BAAyB,GAAW,CAAC,CAAC;IAQtC,CAAC;CACJ;AAXD,+BAWC","sourcesContent":["import { \n    ErrorType,\n    MinNumberOfStartingPointsNotReached\n} from 'tr-common/events';\n\nimport GameError from './GameError';\n\nexport default class InvalidBoard extends GameError implements MinNumberOfStartingPointsNotReached\n{\n    minNumberOfStartingPoints: number = 2;\n    \n    constructor() {\n        super(\n            ErrorType.INVALID_BOARD, \n            undefined, \n            \"Board does not have at least 2 stargin points\"\n        );\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5082e88768614ac75d6153ff428ef9e6a734fe0d","contentHash":"430e2cb142273f3392f44b467d0dc32f06596b4bc11fe42939d6802389287002"},"/home/marek/Projects/tomb_racer/back-end/src/game/model/PathValidationResult.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/model/PathValidationResult.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":31}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":39}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":31}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":47},"end":{"line":8,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":14,"2":14,"3":14,"4":1},"f":{"0":14},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/model/PathValidationResult.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/model/PathValidationResult.ts"],"names":[],"mappings":";;AAEA,MAAqB,oBAAoB;IAKrC,YAAY,OAAgB,EAAE,WAAuB,EAAE,OAAe;QAClE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;CACJ;AAVD,uCAUC","sourcesContent":["import { Position } from 'tr-common/data_types'; \n\nexport default class PathValidationResult {\n    isValid: boolean;\n    invalidPath: Position[];\n    message: string;\n\n    constructor(isValid: boolean, invalidPath: Position[], message: string) {\n        this.isValid = isValid;\n        this.invalidPath = invalidPath;\n        this.message = message;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac2d6514edf00641254121c9fd27c16ddccc9d6f","contentHash":"cdc066eed378b858a7b066336364cb507ec28c7ee853d0b7ecc2cf5f3b123ae8"},"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerLeftEvent.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerLeftEvent.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":48}},"2":{"start":{"line":6,"column":8},"end":{"line":9,"column":11}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":32},"end":{"line":10,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerLeftEvent.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/events/PlayerLeftEvent.ts"],"names":[],"mappings":";;AAAA,iDAAwD;AAExD,MAAqB,eAAgB,SAAQ,cAAK;IAE9C,YAAY,MAAc,EAAE,MAAc;QACtC,KAAK,CAAC,kBAAS,CAAC,WAAW,EAAE;YACzB,MAAM;YACN,MAAM;SACT,CAAC,CAAC;IACP,CAAC;CACJ;AARD,kCAQC","sourcesContent":["import { Event, EventType } from './../contract/Events';\n\nexport default class PlayerLeftEvent extends Event\n{\n    constructor(userId: string, gameId: string) {\n        super(EventType.PLAYER_LEFT, {\n            gameId,\n            userId\n        });\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1f3f0826e3207aa5fbd226ecb439fe498b6144a8","contentHash":"941f55f8d34ffb1850db8f022a695c12a2a84c996c61694e416d1d0398977b7d"},"/home/marek/Projects/tomb_racer/back-end/src/game/errors/CannotStartGame.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/CannotStartGame.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":44}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":59}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":84}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":29}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":24},"end":{"line":12,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":3,"7":1},"f":{"0":1,"1":3},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/errors/CannotStartGame.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/errors/CannotStartGame.ts"],"names":[],"mappings":";;;;;AAAA,6CAG0B;AAC1B,4DAAoC;AAEpC,MAAqB,eAAgB,SAAQ,mBAAS;IAIlD,YAAY,MAAiB;QACzB,KAAK,CAAC,kBAAS,CAAC,iBAAiB,EAAE,SAAS,EAAE,mBAAmB,CAAC,CAAA;QAClE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;CACJ;AARD,kCAQC","sourcesContent":["import { \n    ErrorType,\n    CannotStartGame as ICannotStartGame\n} from 'tr-common/events';\nimport GameError from './GameError';\n\nexport default class CannotStartGame extends GameError implements ICannotStartGame \n{\n    reason: GameError;\n\n    constructor(reason: GameError) {\n        super(ErrorType.CANNOT_START_GAME, undefined, \"Cannot start game\")\n        this.reason = reason;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f04799e1f8cc983f36f98111cbe1c250e425c592","contentHash":"e2e12f814395b88a0c82cf165fc77c5ee3477e1685b723e01131900cab2ea940"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/GameTestContext.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/GameTestContext.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":28},"end":{"line":7,"column":62}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":57}},"6":{"start":{"line":9,"column":30},"end":{"line":9,"column":67}},"7":{"start":{"line":10,"column":18},"end":{"line":10,"column":77}},"8":{"start":{"line":11,"column":0},"end":{"line":16,"column":2}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":30}},"10":{"start":{"line":20,"column":8},"end":{"line":22,"column":10}},"11":{"start":{"line":21,"column":12},"end":{"line":21,"column":37}},"12":{"start":{"line":25,"column":8},"end":{"line":32,"column":10}},"13":{"start":{"line":26,"column":12},"end":{"line":26,"column":81}},"14":{"start":{"line":27,"column":12},"end":{"line":27,"column":68}},"15":{"start":{"line":28,"column":12},"end":{"line":28,"column":83}},"16":{"start":{"line":29,"column":28},"end":{"line":29,"column":129}},"17":{"start":{"line":30,"column":12},"end":{"line":30,"column":57}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":19}},"19":{"start":{"line":35,"column":24},"end":{"line":35,"column":71}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":52}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":62}},"22":{"start":{"line":38,"column":8},"end":{"line":38,"column":63}},"23":{"start":{"line":39,"column":8},"end":{"line":39,"column":62}},"24":{"start":{"line":40,"column":8},"end":{"line":40,"column":65}},"25":{"start":{"line":41,"column":8},"end":{"line":41,"column":66}},"26":{"start":{"line":42,"column":8},"end":{"line":42,"column":65}},"27":{"start":{"line":45,"column":8},"end":{"line":45,"column":108}},"28":{"start":{"line":48,"column":0},"end":{"line":48,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":23,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":26},"end":{"line":20,"column":27}},"loc":{"start":{"line":20,"column":42},"end":{"line":22,"column":9}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":18},"end":{"line":33,"column":5}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":15},"end":{"line":25,"column":16}},"loc":{"start":{"line":25,"column":25},"end":{"line":32,"column":9}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":43},"end":{"line":43,"column":5}},"line":34},"6":{"name":"(anonymous_6)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":19},"end":{"line":46,"column":5}},"line":44}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":34,"column":14},"end":{"line":34,"column":41}},"type":"default-arg","locations":[{"start":{"line":34,"column":22},"end":{"line":34,"column":41}}],"line":34}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":7,"10":7,"11":23,"12":7,"13":37,"14":37,"15":37,"16":37,"17":37,"18":37,"19":16,"20":16,"21":16,"22":16,"23":16,"24":16,"25":16,"26":16,"27":5,"28":1},"f":{"0":1,"1":7,"2":23,"3":7,"4":37,"5":16,"6":5},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[5]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/GameTestContext.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/GameTestContext.ts"],"names":[],"mappings":";;;;;AAAA,yCAA0D;AAC1D,+DAA4D;AAC5D,0DAAuD;AACvD,oEAAiE;AACjE,8EAAuD;AAG1C,QAAA,WAAW,GAAG;IACvB,KAAK,EAAE,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,CAAC;IACpE,MAAM,EAAE,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,CAAC;IACrE,KAAK,EAAE,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,CAAC;IACpE,aAAa,EAAE,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,cAAc,EAAE,iBAAiB,EAAE,kBAAkB,CAAC;CACpG,CAAA;AAED,MAAa,eAAe;IAA5B;QAMI,iBAAY,GAAW,CAAC,CAAC;QAEzB,eAAU,GAAuB,CAAC,KAAa,EAAE,GAAW,EAAE,EAAE;YAC5D,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAA;IAoCL,CAAC;IAlCG,WAAW;QACP,OAAO,CAAC,IAAI,EAAE,EAAE;YACZ,IAAI,CAAC,iBAAiB,GAAG,IAAI,qCAAiB,EAAE,CAAC;YACjD,IAAI,CAAC,UAAU,GAAG,IAAI,+BAAc,EAAE,CAAC;YACvC,IAAI,CAAC,eAAe,GAAG,IAAI,yCAAmB,EAAE,CAAC;YAEjD,MAAM,OAAO,GAAG,IAAI,iBAAO,CACvB,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,UAAU,CAClB,CAAC;YAEF,IAAI,CAAC,WAAW,GAAG,gBAAS,CAAC,OAAO,CAAC,CAAC;YAEtC,IAAI,EAAE,CAAC;QACX,CAAC,CAAA;IACL,CAAC;IAED,SAAS,CAAC,QAA6B,IAAI,CAAC,YAAY,EAAE;QACtD,MAAM,OAAO,GAAG,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,mBAAW,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,mBAAW,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,mBAAW,CAAC,KAAK,CAAC,CAAC;QAE9C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,mBAAW,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,mBAAW,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,mBAAW,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAEO,YAAY;QAChB,OAAO,CAAC,CAAC,YAAK,CAAC,aAAa,EAAE,EAAE,YAAK,CAAC,aAAa,EAAE,EAAE,YAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACnF,CAAC;CACJ;AA9CD,0CA8CC","sourcesContent":["import {configure, contract, Tiles} from '../../src/game';\nimport { GameRepositorySpy } from './spy/GameRepositorySpy';\nimport { IdProviderMock } from './mock/IdProviderMock';\nimport { EventDispatcherMock } from './mock/EventDispatcherMock';\nimport Context  from '../../src/game/contract/Context';\nimport { boardDefinition } from '../../src/game/contract';\n\nexport const UserExample = {\n    first: new contract.DTO.PlayerData(\"id1\", \"user-id-1\", \"username-1\"),\n    second: new contract.DTO.PlayerData(\"id1\", \"user-id-2\", \"username-2\"),\n    third: new contract.DTO.PlayerData(\"id1\", \"user-id-3\", \"username-3\"),\n    invalidGameId: new contract.DTO.PlayerData(\"non-existing\", \"user-id-invalid\", \"username-invalid\")\n}\n\nexport class GameTestContext {\n    gameService: contract.GameService;\n    gameRepositorySpy: GameRepositorySpy;\n    idProvider: IdProviderMock;\n    eventDispatcher: EventDispatcherMock;\n\n    randomResult: number = 0;\n\n    randomizer: contract.randomize = (start: number, end: number) => {\n        return this.randomResult;\n    }\n    \n    initializer(): Mocha.Func {\n        return (done) => {\n            this.gameRepositorySpy = new GameRepositorySpy();\n            this.idProvider = new IdProviderMock();\n            this.eventDispatcher = new EventDispatcherMock();\n\n            const context = new Context(\n                this.eventDispatcher, \n                this.idProvider, \n                this.gameRepositorySpy, \n                this.randomizer\n            );\n\n            this.gameService = configure(context);\n\n            done();\n        }\n    }\n\n    startGame(board: boardDefinition[][] = this.defaultBoard()) {\n        const gameDef = new contract.DTO.CreateGame(\"Some Game\");\n        this.gameService.createGame(gameDef, board);\n        this.gameService.addPlayer(UserExample.first);\n        this.gameService.addPlayer(UserExample.second);\n        this.gameService.addPlayer(UserExample.third);\n\n        this.gameService.startRequest(UserExample.first);\n        this.gameService.startRequest(UserExample.second);\n        this.gameService.startRequest(UserExample.third);\n    }\n\n    private defaultBoard() {\n        return [[Tiles.startingPoint(), Tiles.startingPoint(), Tiles.startingPoint()]];\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"73e9f43291206cba4c82884424b9846529f3d976","contentHash":"e8b868e6e59b7e07a9b9a06d7f2b390ace5d0a14fbac464ae9cbc08b7b13736a"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/spy/GameRepositorySpy.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/spy/GameRepositorySpy.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":33},"end":{"line":3,"column":90}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":28}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":29}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":33}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":24}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":35}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":28}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":38}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":9,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":14},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":18},"end":{"line":18,"column":5}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":37,"3":37,"4":37,"5":35,"6":35,"7":123,"8":123,"9":123,"10":1},"f":{"0":37,"1":35,"2":123},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/spy/GameRepositorySpy.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/spy/GameRepositorySpy.ts"],"names":[],"mappings":";;AAAA,2FAAwF;AAGxF,MAAa,iBAAkB,SAAQ,+CAAsB;IAA7D;;QAEI,eAAU,GAAgB,EAAE,CAAC;QAC7B,mBAAc,GAAgB,EAAE,CAAC;IAarC,CAAC;IAVG,GAAG,CAAC,IAAU;QACV,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,OAAO,CAAC,IAAU;QACd,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAClC,CAAC;CACJ;AAhBD,8CAgBC","sourcesContent":["import { GameInMemoryRepository } from '../../../src/repository/GameInMemoryRepository';\nimport { Game } from '../../../src/game/model';\n\nexport class GameRepositorySpy extends GameInMemoryRepository\n{\n    addedGames: Array<Game> = [];\n    persistedGames: Array<Game> = [];\n    lastPersistedGame: Game;\n\n    add(game: Game) {\n        super.add(game);\n        this.addedGames.push(game);\n    }\n\n    persist(game: Game) {\n        super.persist(game);\n        this.persistedGames.push(game);\n        this.lastPersistedGame = game;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"12aa7a8a00d138cfb03c4bc838c9269778ee9514","contentHash":"8214cabd0bf1a28c4e559ab1ee606604aeeebf806e5feeb9994c92faae3fab69"},"/home/marek/Projects/tomb_racer/back-end/src/repository/GameInMemoryRepository.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/repository/GameInMemoryRepository.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":24}},"2":{"start":{"line":8,"column":30},"end":{"line":8,"column":70}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":40}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":30}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":55}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":26}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":55}},"8":{"start":{"line":23,"column":27},"end":{"line":23,"column":52}},"9":{"start":{"line":26,"column":8},"end":{"line":28,"column":10}},"10":{"start":{"line":27,"column":12},"end":{"line":27,"column":37}},"11":{"start":{"line":31,"column":0},"end":{"line":31,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":18},"end":{"line":6,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":30},"end":{"line":10,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":14},"end":{"line":13,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":21},"end":{"line":16,"column":5}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":18},"end":{"line":18,"column":5}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":14},"end":{"line":21,"column":5}},"line":19},"6":{"name":"(anonymous_6)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":17},"end":{"line":24,"column":5}},"line":22},"7":{"name":"(anonymous_7)","decl":{"start":{"line":23,"column":15},"end":{"line":23,"column":16}},"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":54}},"line":23},"8":{"name":"(anonymous_8)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":17},"end":{"line":29,"column":5}},"line":25},"9":{"name":"(anonymous_9)","decl":{"start":{"line":26,"column":15},"end":{"line":26,"column":16}},"loc":{"start":{"line":26,"column":25},"end":{"line":28,"column":9}},"line":26}},"branchMap":{},"s":{"0":1,"1":37,"2":37,"3":37,"4":35,"5":139,"6":1,"7":37,"8":2,"9":139,"10":137,"11":1},"f":{"0":37,"1":37,"2":35,"3":139,"4":123,"5":1,"6":37,"7":2,"8":139,"9":137},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/repository/GameInMemoryRepository.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/repository/GameInMemoryRepository.ts"],"names":[],"mappings":";;AAGA,MAAa,sBAAsB;IAAnC;QAEI,UAAK,GAAgB,EAAE,CAAC;IAgC5B,CAAC;IA9BG,eAAe,CAAC,QAAgB;QAC5B,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE/D,OAAO,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,GAAG,CAAC,IAAU;QACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,QAAQ,CAAC,MAAc;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,OAAO,CAAC,IAAU;IAElB,CAAC;IAED,OAAO;QACH,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEO,MAAM,CAAC,IAAY;QACvB,OAAO,CAAC,IAAU,EAAE,EAAE,GAAG,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAA,CAAC,CAAC,CAAC;IACxD,CAAC;IAEO,IAAI,CAAC,MAAc;QACvB,OAAO,CAAC,IAAU,EAAE,EAAE;YAClB,OAAO,IAAI,CAAC,EAAE,IAAI,MAAM,CAAA;QAAC,CAAC,CAAC;IACnC,CAAC;CACJ;AAlCD,wDAkCC","sourcesContent":["import { GameRepository } from \"../game/contract/GameRepository\";\nimport { Game } from \"../game/model\";\n\nexport class GameInMemoryRepository implements GameRepository\n{\n    games: Array<Game> = [];\n\n    hasGameWithName(gameName: string): boolean {\n        const gamesWithName = this.games.filter(this.byName(gameName));\n\n        return gamesWithName.length > 0;\n    }\n\n    add(game: Game): void {\n        this.games.push(game);\n    }\n\n    findById(gameId: string): Game {\n        return this.games.filter(this.byId(gameId))[0];\n    }\n\n    persist(game: Game): void {\n        \n    }\n\n    findAll(): Game[] {\n        return this.games;\n    }\n\n    private byName(name: string) {\n        return (game: Game) => { return game.name == name };\n    }\n\n    private byId(gameId: string) {\n        return (game: Game) => { \n            return game.id == gameId };\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7192c8c85b6547413ecf27fdee67e591c0ff48f6","contentHash":"adf706c80910406d2eacef9dd65639a2ce928a9b7127ed99c289bf2bd5f05eae"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/mock/IdProviderMock.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/mock/IdProviderMock.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":41}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":21}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":36}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":18},"end":{"line":7,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":12},"end":{"line":10,"column":5}},"line":8}},"branchMap":{},"s":{"0":1,"1":37,"2":37,"3":36,"4":1},"f":{"0":37,"1":36},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/mock/IdProviderMock.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/mock/IdProviderMock.ts"],"names":[],"mappings":";;AAEA,MAAa,cAAc;IAA3B;QAEI,QAAG,GAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;QAC1C,QAAG,GAAW,CAAC,CAAC;IAIpB,CAAC;IAHG,KAAK;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAChC,CAAC;CACJ;AAPD,wCAOC","sourcesContent":["import { IdProvider } from '../../../src/game/contract/IdProvider';\n\nexport class IdProviderMock implements IdProvider\n{\n    ids: Array<string> = [\"id1\", \"id2\", \"id3\"]\n    cur: number = 0;\n    newId(): string {\n        return this.ids[this.cur++];\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4a6a802df03cabb89f349f559a0604c291ad413d","contentHash":"c725ac2aa15a67c35af3fc2e40d4e49b9607a56074664985415671eaba66c0e4"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/mock/EventDispatcherMock.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/mock/EventDispatcherMock.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":35}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":38}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":42}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":31}},"5":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":50}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":54}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":18},"end":{"line":7,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":20},"end":{"line":15,"column":5}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11}},"s":{"0":1,"1":37,"2":37,"3":133,"4":133,"5":133,"6":90,"7":133,"8":1},"f":{"0":37,"1":133},"b":{"0":[90,43]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/mock/EventDispatcherMock.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/mock/EventDispatcherMock.ts"],"names":[],"mappings":";;AAEA,MAAa,mBAAmB;IAAhC;QAEI,qBAAgB,GAAiB,EAAE,CAAC;QAGpC,iBAAY,GAA4B,IAAI,GAAG,EAAE,CAAC;IAatD,CAAC;IAXG,QAAQ,CAAC,KAAY;QACjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YACpC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SACzC;QAED,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;CAEJ;AAlBD,kDAkBC","sourcesContent":["import { EventType, Event, EventDispatcher } from \"../../../src/game/contract/Events\";\n\nexport class EventDispatcherMock implements EventDispatcher\n{\n    dispatchedEvents: Array<Event> = [];\n    lastEvent: Event;\n\n    eventsByType: Map<EventType, Event[]> = new Map();\n\n    dispatch(event: Event): void {\n        this.dispatchedEvents.push(event)\n        this.lastEvent = event;\n        \n        if (!this.eventsByType.has(event.type)) {\n            this.eventsByType.set(event.type, []);\n        }\n\n        this.eventsByType.get(event.type).push(event);\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bee46f91a4e5af108bf83f370bd8d069f80f7cea","contentHash":"a84c49b9f9b46d48fe6c184861d25910abeba41e4f4785c9ec84787ecacf977c"},"/home/marek/Projects/tomb_racer/back-end/src/game/contract/Context.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/Context.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":47}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":37}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":23}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":37}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":62},"end":{"line":9,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":37,"2":37,"3":37,"4":37,"5":1},"f":{"0":37},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/game/contract/Context.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/game/contract/Context.ts"],"names":[],"mappings":";;AAGA,MAAqB,OAAO;IAOxB,YACI,eAAgC,EAChC,UAAsB,EACtB,UAA2B,EAC3B,GAAc;QAEd,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;CACJ;AAlBD,0BAkBC","sourcesContent":["import { EventDispatcher } from './Events';\nimport { IdProvider, GameRepository, randomize } from './.';\n\nexport default class Context\n{\n    eventDispatcher: EventDispatcher;\n    idProvider: IdProvider;\n    rnd: randomize;\n    repository: GameRepository\n\n    constructor(\n        eventDispatcher: EventDispatcher,\n        idProvider: IdProvider,\n        repository : GameRepository,\n        rnd: randomize\n    ) {\n        this.eventDispatcher = eventDispatcher;\n        this.idProvider = idProvider;\n        this.rnd = rnd;\n        this.repository = repository;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f8188df6f0bcf2c4efdd2827ed76f92f2eb4bbe1","contentHash":"7165079cfe635f4148ba3829343df32fe38be8b7e7dadc8b1389493d5429c30b"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/FinishingGame.test.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/FinishingGame.test.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":42}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":54}},"7":{"start":{"line":10,"column":14},"end":{"line":10,"column":52}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":58}},"9":{"start":{"line":12,"column":0},"end":{"line":30,"column":3}},"10":{"start":{"line":13,"column":18},"end":{"line":16,"column":5}},"11":{"start":{"line":17,"column":16},"end":{"line":17,"column":55}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":25}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":34}},"14":{"start":{"line":20,"column":4},"end":{"line":29,"column":7}},"15":{"start":{"line":21,"column":25},"end":{"line":21,"column":159}},"16":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"17":{"start":{"line":23,"column":8},"end":{"line":23,"column":50}},"18":{"start":{"line":24,"column":21},"end":{"line":24,"column":60}},"19":{"start":{"line":25,"column":22},"end":{"line":25,"column":95}},"20":{"start":{"line":26,"column":8},"end":{"line":26,"column":55}},"21":{"start":{"line":27,"column":8},"end":{"line":27,"column":94}},"22":{"start":{"line":28,"column":8},"end":{"line":28,"column":94}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":27},"end":{"line":12,"column":28}},"loc":{"start":{"line":12,"column":33},"end":{"line":30,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":52},"end":{"line":20,"column":53}},"loc":{"start":{"line":20,"column":58},"end":{"line":29,"column":5}},"line":20}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/FinishingGame.test.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/FinishingGame.test.ts"],"names":[],"mappings":";;;;;AAAA,iBAAe;AACf,oDAA4B;AAC5B,2CAAmD;AACnD,uDAAiE;AACjE,qDAAiE;AACjE,2DAA2D;AAE3D,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC5B,MAAM,KAAK,GAAG;QACV,CAAC,YAAK,CAAC,aAAa,EAAE,EAAE,YAAK,CAAC,aAAa,EAAE,EAAE,YAAK,CAAC,aAAa,EAAE,CAAC;QACrE,CAAC,YAAK,CAAC,WAAW,EAAE,EAAI,YAAK,CAAC,IAAI,EAAE,EAAW,YAAK,CAAC,IAAI,EAAE,CAAC;KAC/D,CAAA;IAED,MAAM,GAAG,GAAG,IAAI,iCAAe,EAAE,CAAC;IAClC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC;IAErB,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IAE9B,EAAE,CAAE,2CAA2C,EAAE,GAAG,EAAE;QAClD,MAAM,QAAQ,GAAG,IAAI,cAAQ,CACzB,6BAAW,CAAC,KAAK,CAAC,MAAM,EACxB,6BAAW,CAAC,KAAK,CAAC,MAAM,EACxB,CAAC,IAAI,cAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACvB,CAAA;QACD,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAErB,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAE1C,MAAM,IAAI,GAAG,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC;QACrD,MAAM,KAAK,GAAG,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,GAAG,CAAC,kBAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/E,gBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;QACpC,gBAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,6BAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC1D,gBAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,6BAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA","sourcesContent":["import 'mocha';\nimport assert from 'assert';\nimport { contract, Tiles } from './../../src/game';\nimport { GameTestContext, UserExample } from './GameTestContext';\nimport { Movement, Position } from '../../src/game/contract/dto';\nimport { EventType } from '../../src/game/contract/Events';\n\ndescribe('Finishing game', () => {\n    const board = [\n        [Tiles.startingPoint(), Tiles.startingPoint(), Tiles.startingPoint()],\n        [Tiles.finishPoint(),   Tiles.path(),          Tiles.path()]\n    ]\n\n    const ctx = new GameTestContext();\n    ctx.randomResult = 1;\n\n    beforeEach(ctx.initializer());\n    \n    it ('happens when player stands on finish tile', () => {\n        const movement = new Movement(\n            UserExample.first.userId,\n            UserExample.first.gameId,\n            [new Position(1, 0)]\n        )\n        ctx.startGame(board);\n        \n        ctx.gameService.executeMovement(movement);\n\n        const game = ctx.gameRepositorySpy.lastPersistedGame;\n        const event = ctx.eventDispatcher.eventsByType.get(EventType.GAME_FINISHED)[0];\n\n        assert.equal(game.state, \"FINISHED\")\n        assert.equal(event.data.gameId, UserExample.first.gameId);\n        assert.equal(event.data.winner, UserExample.first.userId);\n    })\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d3db81c5d2564a4b5952bbf03e674d7a5428da2","contentHash":"d1d039c147100596a03a45b5a7908603115c6b764fbfabcfbc4d1c4cce82c1a3"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/GameData.test.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/GameData.test.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":40}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":54}},"7":{"start":{"line":10,"column":0},"end":{"line":35,"column":3}},"8":{"start":{"line":11,"column":16},"end":{"line":11,"column":55}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":34}},"10":{"start":{"line":13,"column":4},"end":{"line":26,"column":7}},"11":{"start":{"line":14,"column":24},"end":{"line":14,"column":71}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":108}},"13":{"start":{"line":16,"column":26},"end":{"line":16,"column":58}},"14":{"start":{"line":17,"column":8},"end":{"line":25,"column":11}},"15":{"start":{"line":27,"column":4},"end":{"line":34,"column":7}},"16":{"start":{"line":28,"column":22},"end":{"line":28,"column":68}},"17":{"start":{"line":29,"column":22},"end":{"line":29,"column":66}},"18":{"start":{"line":30,"column":22},"end":{"line":30,"column":84}},"19":{"start":{"line":31,"column":8},"end":{"line":31,"column":49}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":49}},"21":{"start":{"line":33,"column":25},"end":{"line":33,"column":51}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":22},"end":{"line":10,"column":23}},"loc":{"start":{"line":10,"column":28},"end":{"line":35,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":43},"end":{"line":13,"column":44}},"loc":{"start":{"line":13,"column":49},"end":{"line":26,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":33},"end":{"line":27,"column":34}},"loc":{"start":{"line":27,"column":39},"end":{"line":34,"column":5}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1},"f":{"0":1,"1":1,"2":1,"3":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/GameData.test.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/GameData.test.ts"],"names":[],"mappings":";;;;;AAAA,iBAAe;AACf,oDAA4B;AAC5B,yCAAiD;AACjD,uDAAiE;AAEjE,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACvB,MAAM,GAAG,GAAG,IAAI,iCAAe,EAAE,CAAC;IAElC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IAE9B,EAAE,CAAE,kCAAkC,EAAE,GAAG,EAAE;QACzC,MAAM,OAAO,GAAG,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACzD,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,YAAK,CAAC,aAAa,EAAE,EAAE,YAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;QAEtF,MAAM,SAAS,GAAG,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAEnD,gBAAM,CAAC,SAAS,CAAC,SAAS,EAAE;YACxB,MAAM,EAAE,KAAK;YACb,QAAQ,EAAE,WAAW;YACrB,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,EAAE;YACf,KAAK,EAAE;gBACH,CAAC,EAAC,IAAI,EAAE,gBAAgB,EAAC,EAAE,EAAC,IAAI,EAAE,gBAAgB,EAAC,CAAC;aACvD;SACJ,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;IAEF,EAAE,CAAE,wBAAwB,EAAE,GAAG,EAAE;QAC/B,MAAM,KAAK,GAAG,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACtD,MAAM,KAAK,GAAG,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACpD,MAAM,KAAK,GAAG,CAAC,CAAC,YAAK,CAAC,aAAa,EAAE,EAAE,YAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAA;QAC9D,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzC,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAEzC,MAAM,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAEhD,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA","sourcesContent":["import 'mocha';\nimport assert from 'assert';\nimport { contract, Tiles } from '../../src/game';\nimport { GameTestContext, UserExample } from './GameTestContext';\n\ndescribe('Game data', () => {\n    const ctx = new GameTestContext();\n    \n    beforeEach(ctx.initializer());\n    \n    it ('Can provide data for single game', () => {\n        const gameDef = new contract.DTO.CreateGame(\"Some Game\");\n        ctx.gameService.createGame(gameDef, [[Tiles.startingPoint(), Tiles.startingPoint()]]);\n\n        const gameState = ctx.gameService.gameState(\"id1\");\n\n        assert.deepEqual(gameState, {\n            gameId: \"id1\",\n            gameName: \"Some Game\",\n            players: [],\n            currentTurn: {},\n            board: [\n                [{type: \"STARTING_POINT\"}, {type: \"STARTING_POINT\"}]\n            ]\n        })\n    })\n\n    it ('Can provide games list', () => {\n        const game1 = new contract.DTO.CreateGame(\"Game One\");\n        const game2 = new contract.DTO.CreateGame(\"Game 2\");\n        const board = [[Tiles.startingPoint(), Tiles.startingPoint()]]\n        ctx.gameService.createGame(game1, board);\n        ctx.gameService.createGame(game2, board);\n\n        const gameList = ctx.gameService.gameList();\n\n    })\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a978ed7c8a045672377d2084bac3dbe374f9876b","contentHash":"e9db77390652628a27059f71b38a996cc34062d8a357090161796d818fb383d1"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/JoinGame.test.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/JoinGame.test.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":42}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":54}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":44}},"8":{"start":{"line":11,"column":0},"end":{"line":84,"column":3}},"9":{"start":{"line":12,"column":16},"end":{"line":12,"column":55}},"10":{"start":{"line":13,"column":25},"end":{"line":13,"column":87}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":34}},"12":{"start":{"line":15,"column":4},"end":{"line":83,"column":7}},"13":{"start":{"line":16,"column":8},"end":{"line":25,"column":11}},"14":{"start":{"line":17,"column":27},"end":{"line":17,"column":70}},"15":{"start":{"line":18,"column":12},"end":{"line":24,"column":15}},"16":{"start":{"line":19,"column":16},"end":{"line":19,"column":50}},"17":{"start":{"line":21,"column":16},"end":{"line":21,"column":86}},"18":{"start":{"line":22,"column":16},"end":{"line":22,"column":69}},"19":{"start":{"line":23,"column":16},"end":{"line":23,"column":28}},"20":{"start":{"line":26,"column":8},"end":{"line":37,"column":11}},"21":{"start":{"line":27,"column":12},"end":{"line":27,"column":102}},"22":{"start":{"line":28,"column":12},"end":{"line":36,"column":15}},"23":{"start":{"line":29,"column":16},"end":{"line":29,"column":79}},"24":{"start":{"line":30,"column":16},"end":{"line":30,"column":80}},"25":{"start":{"line":31,"column":16},"end":{"line":31,"column":79}},"26":{"start":{"line":33,"column":16},"end":{"line":33,"column":110}},"27":{"start":{"line":34,"column":16},"end":{"line":34,"column":72}},"28":{"start":{"line":35,"column":16},"end":{"line":35,"column":28}},"29":{"start":{"line":38,"column":8},"end":{"line":49,"column":11}},"30":{"start":{"line":39,"column":27},"end":{"line":39,"column":62}},"31":{"start":{"line":40,"column":25},"end":{"line":40,"column":77}},"32":{"start":{"line":41,"column":12},"end":{"line":41,"column":59}},"33":{"start":{"line":42,"column":12},"end":{"line":42,"column":46}},"34":{"start":{"line":43,"column":32},"end":{"line":43,"column":71}},"35":{"start":{"line":44,"column":30},"end":{"line":44,"column":52}},"36":{"start":{"line":45,"column":12},"end":{"line":45,"column":54}},"37":{"start":{"line":46,"column":12},"end":{"line":46,"column":64}},"38":{"start":{"line":47,"column":12},"end":{"line":47,"column":68}},"39":{"start":{"line":48,"column":12},"end":{"line":48,"column":72}},"40":{"start":{"line":50,"column":8},"end":{"line":59,"column":11}},"41":{"start":{"line":51,"column":25},"end":{"line":51,"column":72}},"42":{"start":{"line":52,"column":12},"end":{"line":52,"column":59}},"43":{"start":{"line":53,"column":12},"end":{"line":53,"column":75}},"44":{"start":{"line":54,"column":12},"end":{"line":54,"column":76}},"45":{"start":{"line":55,"column":32},"end":{"line":55,"column":82}},"46":{"start":{"line":56,"column":33},"end":{"line":56,"column":83}},"47":{"start":{"line":57,"column":12},"end":{"line":57,"column":81}},"48":{"start":{"line":58,"column":12},"end":{"line":58,"column":82}},"49":{"start":{"line":60,"column":8},"end":{"line":82,"column":11}},"50":{"start":{"line":61,"column":27},"end":{"line":61,"column":62}},"51":{"start":{"line":62,"column":25},"end":{"line":62,"column":77}},"52":{"start":{"line":63,"column":12},"end":{"line":63,"column":59}},"53":{"start":{"line":64,"column":12},"end":{"line":64,"column":46}},"54":{"start":{"line":65,"column":26},"end":{"line":65,"column":65}},"55":{"start":{"line":66,"column":12},"end":{"line":81,"column":15}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":25},"end":{"line":11,"column":26}},"loc":{"start":{"line":11,"column":31},"end":{"line":84,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":27},"end":{"line":15,"column":28}},"loc":{"start":{"line":15,"column":33},"end":{"line":83,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":63},"end":{"line":16,"column":64}},"loc":{"start":{"line":16,"column":69},"end":{"line":25,"column":9}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":36},"end":{"line":18,"column":37}},"loc":{"start":{"line":18,"column":42},"end":{"line":20,"column":13}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":20,"column":15},"end":{"line":20,"column":16}},"loc":{"start":{"line":20,"column":26},"end":{"line":24,"column":13}},"line":20},"6":{"name":"(anonymous_6)","decl":{"start":{"line":26,"column":81},"end":{"line":26,"column":82}},"loc":{"start":{"line":26,"column":87},"end":{"line":37,"column":9}},"line":26},"7":{"name":"(anonymous_7)","decl":{"start":{"line":28,"column":36},"end":{"line":28,"column":37}},"loc":{"start":{"line":28,"column":42},"end":{"line":32,"column":13}},"line":28},"8":{"name":"(anonymous_8)","decl":{"start":{"line":32,"column":15},"end":{"line":32,"column":16}},"loc":{"start":{"line":32,"column":26},"end":{"line":36,"column":13}},"line":32},"9":{"name":"(anonymous_9)","decl":{"start":{"line":38,"column":29},"end":{"line":38,"column":30}},"loc":{"start":{"line":38,"column":35},"end":{"line":49,"column":9}},"line":38},"10":{"name":"(anonymous_10)","decl":{"start":{"line":50,"column":55},"end":{"line":50,"column":56}},"loc":{"start":{"line":50,"column":61},"end":{"line":59,"column":9}},"line":50},"11":{"name":"(anonymous_11)","decl":{"start":{"line":60,"column":43},"end":{"line":60,"column":44}},"loc":{"start":{"line":60,"column":49},"end":{"line":82,"column":9}},"line":60}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/JoinGame.test.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/JoinGame.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'mocha';\nimport assert from 'assert';\nimport { contract, Tiles } from './../../src/game';\nimport { GameTestContext, UserExample } from './GameTestContext';\nimport { NumberOfStartingPointsExceeded } from '../../src/game/errors';\nimport { ErrorType } from 'tr-common/events';\n\ndescribe('Joining Game', () => {\n    const ctx = new GameTestContext();\n    const defaultBoard = [[Tiles.startingPoint(), Tiles.startingPoint()]]\n    beforeEach(ctx.initializer());\n\n    describe('New Player', () => {\n        it ('cannot be added to the game that does not exists', () => {\n            const player = UserExample.invalidGameId;\n\n            assert.throws(() => {\n                ctx.gameService.addPlayer(player);\n            }, (error) => {\n                assert.equal(error.type, ErrorType.GAME_NOT_FOUND);\n                assert.equal(error.gameId, \"non-existing\")\n                return true;\n            })\n        });\n\n        it ('cannot be added if there is not enough starting point on the board', () => {\n            ctx.gameService.createGame(\n                new contract.DTO.CreateGame(\"Some name\"), \n                defaultBoard\n            );\n        \n            assert.throws(() => {\n                ctx.gameService.addPlayer(UserExample.first);\n                ctx.gameService.addPlayer(UserExample.second);\n                ctx.gameService.addPlayer(UserExample.third);\n            }, (error: NumberOfStartingPointsExceeded) => {\n                assert.deepEqual(error.type, ErrorType.NUMBER_OF_STARTING_POINTS_EXCEEDED);\n                assert.deepEqual(error.maxNumberOfPlayers, 2)\n                return true;\n            })\n        })\n        \n        it ('has basic data', () => {\n            const player = UserExample.first;\n            const game = new contract.DTO.CreateGame(\"Some game name\");\n            ctx.gameService.createGame(game, defaultBoard);\n\n            ctx.gameService.addPlayer(player);\n            \n            const updatedGame = ctx.gameRepositorySpy.persistedGames[0];\n            const newPlayer = updatedGame.players[0];\n            \n            assert.equal(newPlayer.hp, 100);\n            assert.deepEqual(newPlayer.inventory, []);\n            assert.equal(newPlayer.userId, player.userId);\n            assert.equal(newPlayer.userName, player.userName);\n        })\n\n        it ('is placed at a first free starting point', () => {\n            const game = new contract.DTO.CreateGame(\"Some game\");\n            ctx.gameService.createGame(game, defaultBoard);\n\n            ctx.gameService.addPlayer(UserExample.first);\n            ctx.gameService.addPlayer(UserExample.second);\n\n            const firstPlayer = ctx.gameRepositorySpy.persistedGames[1].players[0];\n            const secondPlayer = ctx.gameRepositorySpy.persistedGames[1].players[1];\n\n            assert.deepEqual(firstPlayer.position, {row: 0, col: 0});\n            assert.deepEqual(secondPlayer.position, {row: 0, col: 1});\n        })\n\n        it ('should be passed in an event', () => {\n            const player = UserExample.first;\n            const game = new contract.DTO.CreateGame(\"Some game name\");\n            ctx.gameService.createGame(game, defaultBoard);\n\n            ctx.gameService.addPlayer(player);\n\n            const event = ctx.eventDispatcher.dispatchedEvents[1];\n\n            assert.deepEqual(event, {\n                type: contract.events.EventType.PLAYER_JOINED,\n                data: {\n                    gameId: player.gameId,\n                    player: {\n                        userId: player.userId,\n                        userName: player.userName,\n                        hp: 100, \n                        inventory: [],\n                        position: {\n                            row: 0,\n                            col: 0\n                        }\n                    }\n                }\n            })\n        })\n\n    })\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"757d59ccc36842f5b610c1db241cf005b26d83bf","contentHash":"b9750918cedeea4bc1d7c89985e09c01ff540fdb2b33a88f41b6a2b5e6d2da42"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/LeavingTheGame.test.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/LeavingTheGame.test.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":40}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":54}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":58}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":44}},"9":{"start":{"line":12,"column":0},"end":{"line":52,"column":3}},"10":{"start":{"line":13,"column":16},"end":{"line":13,"column":55}},"11":{"start":{"line":14,"column":25},"end":{"line":14,"column":87}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":34}},"13":{"start":{"line":16,"column":4},"end":{"line":51,"column":7}},"14":{"start":{"line":17,"column":8},"end":{"line":27,"column":11}},"15":{"start":{"line":18,"column":12},"end":{"line":18,"column":103}},"16":{"start":{"line":19,"column":12},"end":{"line":26,"column":15}},"17":{"start":{"line":20,"column":16},"end":{"line":20,"column":90}},"18":{"start":{"line":22,"column":16},"end":{"line":22,"column":84}},"19":{"start":{"line":23,"column":16},"end":{"line":23,"column":20}},"20":{"start":{"line":24,"column":16},"end":{"line":24,"column":67}},"21":{"start":{"line":25,"column":16},"end":{"line":25,"column":28}},"22":{"start":{"line":28,"column":8},"end":{"line":36,"column":11}},"23":{"start":{"line":29,"column":28},"end":{"line":29,"column":75}},"24":{"start":{"line":30,"column":12},"end":{"line":30,"column":62}},"25":{"start":{"line":31,"column":12},"end":{"line":31,"column":75}},"26":{"start":{"line":32,"column":12},"end":{"line":32,"column":76}},"27":{"start":{"line":33,"column":12},"end":{"line":33,"column":78}},"28":{"start":{"line":34,"column":28},"end":{"line":34,"column":75}},"29":{"start":{"line":35,"column":12},"end":{"line":35,"column":54}},"30":{"start":{"line":37,"column":8},"end":{"line":50,"column":11}},"31":{"start":{"line":38,"column":28},"end":{"line":38,"column":75}},"32":{"start":{"line":39,"column":12},"end":{"line":39,"column":62}},"33":{"start":{"line":40,"column":12},"end":{"line":40,"column":75}},"34":{"start":{"line":41,"column":12},"end":{"line":41,"column":78}},"35":{"start":{"line":42,"column":26},"end":{"line":42,"column":65}},"36":{"start":{"line":43,"column":12},"end":{"line":49,"column":15}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":29},"end":{"line":12,"column":30}},"loc":{"start":{"line":12,"column":35},"end":{"line":52,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":44},"end":{"line":16,"column":45}},"loc":{"start":{"line":16,"column":50},"end":{"line":51,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":72},"end":{"line":17,"column":73}},"loc":{"start":{"line":17,"column":78},"end":{"line":27,"column":9}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":19,"column":36},"end":{"line":19,"column":37}},"loc":{"start":{"line":19,"column":42},"end":{"line":21,"column":13}},"line":19},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":15},"end":{"line":21,"column":16}},"loc":{"start":{"line":21,"column":24},"end":{"line":26,"column":13}},"line":21},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":43},"end":{"line":28,"column":44}},"loc":{"start":{"line":28,"column":49},"end":{"line":36,"column":9}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":37,"column":38},"end":{"line":37,"column":39}},"loc":{"start":{"line":37,"column":44},"end":{"line":50,"column":9}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/LeavingTheGame.test.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/LeavingTheGame.test.ts"],"names":[],"mappings":";;;;;AAAA,iBAAe;AACf,oDAA4B;AAC5B,yCAAiD;AACjD,uDAAiE;AACjE,2DAA2D;AAE3D,6CAA6C;AAE7C,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAC9B,MAAM,GAAG,GAAG,IAAI,iCAAe,EAAE,CAAC;IAClC,MAAM,YAAY,GAAG,CAAC,CAAC,YAAK,CAAC,aAAa,EAAE,EAAE,YAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IAEtE,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IAE9B,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;QACzC,EAAE,CAAE,2DAA2D,EAAE,GAAG,EAAE;YAClE,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC;YAEpF,gBAAM,CAAC,MAAM,CAAC,GAAG,EAAE;gBACf,GAAG,CAAC,WAAW,CAAC,YAAY,CAAC,6BAAW,CAAC,aAAa,CAAC,CAAC;YAC5D,CAAC,EAAE,CAAC,GAAiB,EAAE,EAAE;gBACrB,gBAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,kBAAS,CAAC,cAAc,CAAC,CAAC;gBAAA,GAAG,CAAA;gBACpD,gBAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;gBACxC,OAAO,IAAI,CAAC;YAChB,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;QAEF,EAAE,CAAE,8BAA8B,EAAE,GAAG,EAAE;YACrC,MAAM,OAAO,GAAG,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YACzD,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YAClD,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,6BAAW,CAAC,KAAK,CAAC,CAAC;YAC7C,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,6BAAW,CAAC,MAAM,CAAC,CAAC;YAE9C,GAAG,CAAC,WAAW,CAAC,YAAY,CAAC,6BAAW,CAAC,KAAK,CAAC,CAAC;YAEhD,MAAM,OAAO,GAAG,GAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAEhE,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAE,yBAAyB,EAAE,GAAG,EAAE;YAChC,MAAM,OAAO,GAAG,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YACzD,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YAClD,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,6BAAW,CAAC,KAAK,CAAC,CAAC;YAE7C,GAAG,CAAC,WAAW,CAAC,YAAY,CAAC,6BAAW,CAAC,KAAK,CAAC,CAAC;YAEhD,MAAM,KAAK,GAAG,GAAG,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAEtD,gBAAM,CAAC,SAAS,CAAC,KAAK,EAAE;gBACpB,IAAI,EAAE,kBAAS,CAAC,WAAW;gBAC3B,IAAI,EAAE;oBACF,MAAM,EAAE,KAAK;oBACb,MAAM,EAAE,6BAAW,CAAC,KAAK,CAAC,MAAM;iBACnC;aACJ,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA","sourcesContent":["import 'mocha';\nimport assert from 'assert';\nimport { contract, Tiles } from '../../src/game';\nimport { GameTestContext, UserExample } from './GameTestContext';\nimport { EventType } from '../../src/game/contract/Events';\nimport { GameNotFound } from '../../src/game/errors';\nimport { ErrorType } from 'tr-common/events';\n\ndescribe('Leaving the game', () => {\n    const ctx = new GameTestContext();\n    const defaultBoard = [[Tiles.startingPoint(), Tiles.startingPoint()]];\n\n    beforeEach(ctx.initializer());\n    \n    describe('Leaving the game in general', () => {\n        it ('does not allow to player to leave if game does not exists', () => {\n            ctx.gameService.createGame(new contract.DTO.CreateGame(\"First Game\"), defaultBoard);\n            \n            assert.throws(() => {\n                ctx.gameService.removePlayer(UserExample.invalidGameId);\n            }, (err: GameNotFound) => {\n                assert.equal(err.type, ErrorType.GAME_NOT_FOUND);111\n                assert.equal(err.gameId, \"non-existing\")\n                return true;\n            })\n        })\n\n        it ('removes player from the list', () => {\n            const gameDef = new contract.DTO.CreateGame(\"Some Name\");\n            ctx.gameService.createGame(gameDef, defaultBoard);\n            ctx.gameService.addPlayer(UserExample.first);\n            ctx.gameService.addPlayer(UserExample.second);\n\n            ctx.gameService.removePlayer(UserExample.first);\n\n            const players = ctx.gameRepositorySpy.persistedGames[0].players;\n\n            assert.equal(players.length, 1);\n        })\n\n        it ('sends PLAYER LEFT event', () => {\n            const gameDef = new contract.DTO.CreateGame(\"Some Game\");\n            ctx.gameService.createGame(gameDef, defaultBoard);\n            ctx.gameService.addPlayer(UserExample.first);\n\n            ctx.gameService.removePlayer(UserExample.first);\n\n            const event = ctx.eventDispatcher.dispatchedEvents[2];\n\n            assert.deepEqual(event, {\n                type: EventType.PLAYER_LEFT,\n                data: {\n                    gameId: \"id1\",\n                    userId: UserExample.first.userId\n                }\n            })\n        })\n    })\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ca222f44416a9e5b823849fc8f81d59e57b7e400","contentHash":"f12fe2a0d553e51ad1cfc9e454bb758ce5247e1c5ccd9f7d44455b50d8d946d3"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/MovingPlayer.test.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/MovingPlayer.test.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":40}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":54}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":58}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":83}},"9":{"start":{"line":12,"column":17},"end":{"line":12,"column":44}},"10":{"start":{"line":13,"column":0},"end":{"line":205,"column":3}},"11":{"start":{"line":14,"column":16},"end":{"line":14,"column":55}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":34}},"13":{"start":{"line":16,"column":21},"end":{"line":16,"column":173}},"14":{"start":{"line":17,"column":4},"end":{"line":29,"column":7}},"15":{"start":{"line":18,"column":22},"end":{"line":18,"column":84}},"16":{"start":{"line":19,"column":24},"end":{"line":19,"column":71}},"17":{"start":{"line":20,"column":8},"end":{"line":20,"column":51}},"18":{"start":{"line":21,"column":8},"end":{"line":21,"column":71}},"19":{"start":{"line":22,"column":8},"end":{"line":22,"column":72}},"20":{"start":{"line":23,"column":8},"end":{"line":28,"column":11}},"21":{"start":{"line":24,"column":12},"end":{"line":24,"column":54}},"22":{"start":{"line":26,"column":12},"end":{"line":26,"column":88}},"23":{"start":{"line":27,"column":12},"end":{"line":27,"column":24}},"24":{"start":{"line":30,"column":4},"end":{"line":39,"column":7}},"25":{"start":{"line":31,"column":8},"end":{"line":31,"column":24}},"26":{"start":{"line":32,"column":25},"end":{"line":32,"column":151}},"27":{"start":{"line":33,"column":8},"end":{"line":38,"column":11}},"28":{"start":{"line":34,"column":12},"end":{"line":34,"column":54}},"29":{"start":{"line":36,"column":12},"end":{"line":36,"column":91}},"30":{"start":{"line":37,"column":12},"end":{"line":37,"column":24}},"31":{"start":{"line":40,"column":25},"end":{"line":44,"column":5}},"32":{"start":{"line":45,"column":4},"end":{"line":59,"column":7}},"33":{"start":{"line":46,"column":8},"end":{"line":46,"column":29}},"34":{"start":{"line":47,"column":25},"end":{"line":51,"column":10}},"35":{"start":{"line":52,"column":8},"end":{"line":52,"column":36}},"36":{"start":{"line":53,"column":8},"end":{"line":58,"column":11}},"37":{"start":{"line":54,"column":12},"end":{"line":54,"column":54}},"38":{"start":{"line":56,"column":12},"end":{"line":56,"column":80}},"39":{"start":{"line":57,"column":12},"end":{"line":57,"column":24}},"40":{"start":{"line":60,"column":4},"end":{"line":73,"column":7}},"41":{"start":{"line":61,"column":8},"end":{"line":61,"column":29}},"42":{"start":{"line":62,"column":21},"end":{"line":62,"column":51}},"43":{"start":{"line":63,"column":25},"end":{"line":63,"column":151}},"44":{"start":{"line":64,"column":8},"end":{"line":64,"column":24}},"45":{"start":{"line":65,"column":8},"end":{"line":65,"column":50}},"46":{"start":{"line":66,"column":21},"end":{"line":66,"column":60}},"47":{"start":{"line":67,"column":23},"end":{"line":67,"column":38}},"48":{"start":{"line":68,"column":22},"end":{"line":68,"column":94}},"49":{"start":{"line":69,"column":8},"end":{"line":69,"column":82}},"50":{"start":{"line":70,"column":8},"end":{"line":70,"column":94}},"51":{"start":{"line":71,"column":8},"end":{"line":71,"column":73}},"52":{"start":{"line":72,"column":8},"end":{"line":72,"column":58}},"53":{"start":{"line":74,"column":4},"end":{"line":94,"column":7}},"54":{"start":{"line":75,"column":8},"end":{"line":75,"column":29}},"55":{"start":{"line":76,"column":32},"end":{"line":80,"column":9}},"56":{"start":{"line":81,"column":8},"end":{"line":81,"column":39}},"57":{"start":{"line":82,"column":25},"end":{"line":86,"column":10}},"58":{"start":{"line":87,"column":8},"end":{"line":87,"column":50}},"59":{"start":{"line":88,"column":21},"end":{"line":88,"column":60}},"60":{"start":{"line":89,"column":22},"end":{"line":89,"column":92}},"61":{"start":{"line":90,"column":8},"end":{"line":90,"column":55}},"62":{"start":{"line":91,"column":8},"end":{"line":91,"column":59}},"63":{"start":{"line":92,"column":8},"end":{"line":92,"column":55}},"64":{"start":{"line":93,"column":8},"end":{"line":93,"column":57}},"65":{"start":{"line":95,"column":4},"end":{"line":113,"column":7}},"66":{"start":{"line":96,"column":8},"end":{"line":96,"column":29}},"67":{"start":{"line":97,"column":32},"end":{"line":101,"column":9}},"68":{"start":{"line":102,"column":8},"end":{"line":102,"column":39}},"69":{"start":{"line":103,"column":25},"end":{"line":107,"column":10}},"70":{"start":{"line":108,"column":8},"end":{"line":108,"column":50}},"71":{"start":{"line":109,"column":22},"end":{"line":109,"column":91}},"72":{"start":{"line":110,"column":8},"end":{"line":110,"column":95}},"73":{"start":{"line":111,"column":8},"end":{"line":111,"column":100}},"74":{"start":{"line":112,"column":8},"end":{"line":112,"column":77}},"75":{"start":{"line":114,"column":4},"end":{"line":129,"column":7}},"76":{"start":{"line":115,"column":8},"end":{"line":115,"column":29}},"77":{"start":{"line":116,"column":22},"end":{"line":119,"column":9}},"78":{"start":{"line":120,"column":8},"end":{"line":120,"column":29}},"79":{"start":{"line":121,"column":26},"end":{"line":121,"column":179}},"80":{"start":{"line":122,"column":26},"end":{"line":122,"column":180}},"81":{"start":{"line":123,"column":26},"end":{"line":123,"column":178}},"82":{"start":{"line":124,"column":8},"end":{"line":124,"column":51}},"83":{"start":{"line":125,"column":8},"end":{"line":125,"column":51}},"84":{"start":{"line":126,"column":8},"end":{"line":126,"column":51}},"85":{"start":{"line":127,"column":22},"end":{"line":127,"column":91}},"86":{"start":{"line":128,"column":8},"end":{"line":128,"column":99}},"87":{"start":{"line":130,"column":4},"end":{"line":204,"column":7}},"88":{"start":{"line":131,"column":8},"end":{"line":141,"column":11}},"89":{"start":{"line":132,"column":12},"end":{"line":132,"column":33}},"90":{"start":{"line":133,"column":29},"end":{"line":133,"column":181}},"91":{"start":{"line":134,"column":12},"end":{"line":134,"column":40}},"92":{"start":{"line":135,"column":12},"end":{"line":140,"column":15}},"93":{"start":{"line":136,"column":16},"end":{"line":136,"column":58}},"94":{"start":{"line":138,"column":16},"end":{"line":138,"column":84}},"95":{"start":{"line":139,"column":16},"end":{"line":139,"column":28}},"96":{"start":{"line":142,"column":8},"end":{"line":152,"column":11}},"97":{"start":{"line":143,"column":12},"end":{"line":143,"column":33}},"98":{"start":{"line":144,"column":29},"end":{"line":144,"column":181}},"99":{"start":{"line":145,"column":12},"end":{"line":145,"column":40}},"100":{"start":{"line":146,"column":12},"end":{"line":151,"column":15}},"101":{"start":{"line":147,"column":16},"end":{"line":147,"column":58}},"102":{"start":{"line":149,"column":16},"end":{"line":149,"column":84}},"103":{"start":{"line":150,"column":16},"end":{"line":150,"column":28}},"104":{"start":{"line":153,"column":8},"end":{"line":163,"column":11}},"105":{"start":{"line":154,"column":12},"end":{"line":154,"column":33}},"106":{"start":{"line":155,"column":29},"end":{"line":155,"column":181}},"107":{"start":{"line":156,"column":12},"end":{"line":156,"column":40}},"108":{"start":{"line":157,"column":12},"end":{"line":162,"column":15}},"109":{"start":{"line":158,"column":16},"end":{"line":158,"column":58}},"110":{"start":{"line":160,"column":16},"end":{"line":160,"column":84}},"111":{"start":{"line":161,"column":16},"end":{"line":161,"column":28}},"112":{"start":{"line":164,"column":8},"end":{"line":174,"column":11}},"113":{"start":{"line":165,"column":12},"end":{"line":165,"column":33}},"114":{"start":{"line":166,"column":29},"end":{"line":166,"column":181}},"115":{"start":{"line":167,"column":12},"end":{"line":167,"column":40}},"116":{"start":{"line":168,"column":12},"end":{"line":173,"column":15}},"117":{"start":{"line":169,"column":16},"end":{"line":169,"column":58}},"118":{"start":{"line":171,"column":16},"end":{"line":171,"column":84}},"119":{"start":{"line":172,"column":16},"end":{"line":172,"column":28}},"120":{"start":{"line":175,"column":8},"end":{"line":188,"column":11}},"121":{"start":{"line":176,"column":12},"end":{"line":176,"column":33}},"122":{"start":{"line":177,"column":29},"end":{"line":177,"column":211}},"123":{"start":{"line":178,"column":12},"end":{"line":178,"column":40}},"124":{"start":{"line":179,"column":12},"end":{"line":187,"column":15}},"125":{"start":{"line":180,"column":16},"end":{"line":180,"column":58}},"126":{"start":{"line":182,"column":16},"end":{"line":182,"column":84}},"127":{"start":{"line":183,"column":16},"end":{"line":183,"column":85}},"128":{"start":{"line":184,"column":16},"end":{"line":184,"column":86}},"129":{"start":{"line":185,"column":16},"end":{"line":185,"column":86}},"130":{"start":{"line":186,"column":16},"end":{"line":186,"column":28}},"131":{"start":{"line":189,"column":8},"end":{"line":203,"column":11}},"132":{"start":{"line":190,"column":12},"end":{"line":190,"column":33}},"133":{"start":{"line":191,"column":29},"end":{"line":191,"column":211}},"134":{"start":{"line":192,"column":12},"end":{"line":192,"column":40}},"135":{"start":{"line":193,"column":12},"end":{"line":202,"column":15}},"136":{"start":{"line":194,"column":16},"end":{"line":194,"column":58}},"137":{"start":{"line":196,"column":16},"end":{"line":196,"column":35}},"138":{"start":{"line":197,"column":16},"end":{"line":197,"column":85}},"139":{"start":{"line":198,"column":16},"end":{"line":198,"column":84}},"140":{"start":{"line":199,"column":16},"end":{"line":199,"column":86}},"141":{"start":{"line":200,"column":16},"end":{"line":200,"column":86}},"142":{"start":{"line":201,"column":16},"end":{"line":201,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":26},"end":{"line":13,"column":27}},"loc":{"start":{"line":13,"column":32},"end":{"line":205,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":49},"end":{"line":17,"column":50}},"loc":{"start":{"line":17,"column":55},"end":{"line":29,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":32},"end":{"line":23,"column":33}},"loc":{"start":{"line":23,"column":38},"end":{"line":25,"column":9}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":11},"end":{"line":25,"column":12}},"loc":{"start":{"line":25,"column":22},"end":{"line":28,"column":9}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":59},"end":{"line":30,"column":60}},"loc":{"start":{"line":30,"column":65},"end":{"line":39,"column":5}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":32},"end":{"line":33,"column":33}},"loc":{"start":{"line":33,"column":38},"end":{"line":35,"column":9}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":35,"column":11},"end":{"line":35,"column":12}},"loc":{"start":{"line":35,"column":22},"end":{"line":38,"column":9}},"line":35},"8":{"name":"(anonymous_8)","decl":{"start":{"line":45,"column":39},"end":{"line":45,"column":40}},"loc":{"start":{"line":45,"column":45},"end":{"line":59,"column":5}},"line":45},"9":{"name":"(anonymous_9)","decl":{"start":{"line":53,"column":32},"end":{"line":53,"column":33}},"loc":{"start":{"line":53,"column":38},"end":{"line":55,"column":9}},"line":53},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":11},"end":{"line":55,"column":12}},"loc":{"start":{"line":55,"column":22},"end":{"line":58,"column":9}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":60,"column":38},"end":{"line":60,"column":39}},"loc":{"start":{"line":60,"column":44},"end":{"line":73,"column":5}},"line":60},"12":{"name":"(anonymous_12)","decl":{"start":{"line":74,"column":62},"end":{"line":74,"column":63}},"loc":{"start":{"line":74,"column":68},"end":{"line":94,"column":5}},"line":74},"13":{"name":"(anonymous_13)","decl":{"start":{"line":95,"column":33},"end":{"line":95,"column":34}},"loc":{"start":{"line":95,"column":39},"end":{"line":113,"column":5}},"line":95},"14":{"name":"(anonymous_14)","decl":{"start":{"line":114,"column":55},"end":{"line":114,"column":56}},"loc":{"start":{"line":114,"column":61},"end":{"line":129,"column":5}},"line":114},"15":{"name":"(anonymous_15)","decl":{"start":{"line":130,"column":21},"end":{"line":130,"column":22}},"loc":{"start":{"line":130,"column":27},"end":{"line":204,"column":5}},"line":130},"16":{"name":"(anonymous_16)","decl":{"start":{"line":131,"column":74},"end":{"line":131,"column":75}},"loc":{"start":{"line":131,"column":80},"end":{"line":141,"column":9}},"line":131},"17":{"name":"(anonymous_17)","decl":{"start":{"line":135,"column":36},"end":{"line":135,"column":37}},"loc":{"start":{"line":135,"column":42},"end":{"line":137,"column":13}},"line":135},"18":{"name":"(anonymous_18)","decl":{"start":{"line":137,"column":15},"end":{"line":137,"column":16}},"loc":{"start":{"line":137,"column":26},"end":{"line":140,"column":13}},"line":137},"19":{"name":"(anonymous_19)","decl":{"start":{"line":142,"column":69},"end":{"line":142,"column":70}},"loc":{"start":{"line":142,"column":75},"end":{"line":152,"column":9}},"line":142},"20":{"name":"(anonymous_20)","decl":{"start":{"line":146,"column":36},"end":{"line":146,"column":37}},"loc":{"start":{"line":146,"column":42},"end":{"line":148,"column":13}},"line":146},"21":{"name":"(anonymous_21)","decl":{"start":{"line":148,"column":15},"end":{"line":148,"column":16}},"loc":{"start":{"line":148,"column":26},"end":{"line":151,"column":13}},"line":148},"22":{"name":"(anonymous_22)","decl":{"start":{"line":153,"column":67},"end":{"line":153,"column":68}},"loc":{"start":{"line":153,"column":73},"end":{"line":163,"column":9}},"line":153},"23":{"name":"(anonymous_23)","decl":{"start":{"line":157,"column":36},"end":{"line":157,"column":37}},"loc":{"start":{"line":157,"column":42},"end":{"line":159,"column":13}},"line":157},"24":{"name":"(anonymous_24)","decl":{"start":{"line":159,"column":15},"end":{"line":159,"column":16}},"loc":{"start":{"line":159,"column":26},"end":{"line":162,"column":13}},"line":159},"25":{"name":"(anonymous_25)","decl":{"start":{"line":164,"column":88},"end":{"line":164,"column":89}},"loc":{"start":{"line":164,"column":94},"end":{"line":174,"column":9}},"line":164},"26":{"name":"(anonymous_26)","decl":{"start":{"line":168,"column":36},"end":{"line":168,"column":37}},"loc":{"start":{"line":168,"column":42},"end":{"line":170,"column":13}},"line":168},"27":{"name":"(anonymous_27)","decl":{"start":{"line":170,"column":15},"end":{"line":170,"column":16}},"loc":{"start":{"line":170,"column":26},"end":{"line":173,"column":13}},"line":170},"28":{"name":"(anonymous_28)","decl":{"start":{"line":175,"column":78},"end":{"line":175,"column":79}},"loc":{"start":{"line":175,"column":84},"end":{"line":188,"column":9}},"line":175},"29":{"name":"(anonymous_29)","decl":{"start":{"line":179,"column":36},"end":{"line":179,"column":37}},"loc":{"start":{"line":179,"column":42},"end":{"line":181,"column":13}},"line":179},"30":{"name":"(anonymous_30)","decl":{"start":{"line":181,"column":15},"end":{"line":181,"column":16}},"loc":{"start":{"line":181,"column":26},"end":{"line":187,"column":13}},"line":181},"31":{"name":"(anonymous_31)","decl":{"start":{"line":189,"column":63},"end":{"line":189,"column":64}},"loc":{"start":{"line":189,"column":69},"end":{"line":203,"column":9}},"line":189},"32":{"name":"(anonymous_32)","decl":{"start":{"line":193,"column":36},"end":{"line":193,"column":37}},"loc":{"start":{"line":193,"column":42},"end":{"line":195,"column":13}},"line":193},"33":{"name":"(anonymous_33)","decl":{"start":{"line":195,"column":15},"end":{"line":195,"column":16}},"loc":{"start":{"line":195,"column":26},"end":{"line":202,"column":13}},"line":195}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1},"f":{"0":2,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/MovingPlayer.test.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/MovingPlayer.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'mocha';\nimport assert from 'assert';\nimport { contract, Tiles } from '../../src/game';\nimport { GameTestContext, UserExample } from './GameTestContext';\nimport { EventType } from '../../src/game/contract/Events';\nimport Position from '../../src/game/contract/dto/Position';\nimport { ErrorType, InvalidPath } from 'tr-common/events';\n\ndescribe('Moving Player', () => {\n    const ctx = new GameTestContext();\n    beforeEach(ctx.initializer());\n\n    const movement = new contract.DTO.Movement(\n        UserExample.first.userId,\n        UserExample.first.gameId,\n        [new Position(0, 1)]\n    )\n\n    it ('can only be done, when game is started', () => {\n        const board = [[Tiles.startingPoint(), Tiles.startingPoint()]];\n        const gameDef = new contract.DTO.CreateGame(\"Game Name\");   \n        ctx.gameService.createGame(gameDef, board);\n        ctx.gameService.addPlayer(UserExample.first);\n        ctx.gameService.addPlayer(UserExample.second);\n\n        assert.throws(() => {\n            ctx.gameService.executeMovement(movement)\n        }, (error) => {\n            assert.equal(error.type, ErrorType.GAME_NOT_STARTED_YET);\n            return true;\n        })\n    })\n\n    it ('can only be done by player whose turn is current', () => {\n        ctx.startGame();\n        const movement = new contract.DTO.Movement(\n            UserExample.second.userId,\n            UserExample.second.gameId,\n            []\n        )\n        \n        assert.throws(() => {\n            ctx.gameService.executeMovement(movement);\n        }, (error) => {\n            assert.equal(error.type, ErrorType.INCORRECT_PLAYER_ACTION);\n            return true;\n        })\n    })\n\n    const exampleBoard = [\n        [Tiles.startingPoint(), Tiles.startingPoint()],\n        [Tiles.path(),          Tiles.startingPoint()],\n        [Tiles.wall(),          Tiles.path()]\n    ]\n\n    it ('cannot be done through walls', () => {\n        ctx.randomResult = 3;\n        const movement = new contract.DTO.Movement(\n            UserExample.first.userId,\n            UserExample.first.gameId,\n            [\n                new Position(1, 0), \n                new Position(2, 0),\n                new Position(2, 1) \n            ]\n        )\n        ctx.startGame(exampleBoard);\n\n        assert.throws(() => {\n            ctx.gameService.executeMovement(movement)\n        }, (error) => {\n            assert.equal(error.type, ErrorType.INVALID_PATH)\n            return true;\n        })\n    })\n\n    it ('changes the player position', () => {\n        ctx.randomResult = 1;\n        const path = [new Position(0,1)]\n        const movement = new contract.DTO.Movement(\n            UserExample.first.userId,\n            UserExample.first.gameId,\n            path\n        )\n        ctx.startGame();\n\n        ctx.gameService.executeMovement(movement);\n\n        const game = ctx.gameRepositorySpy.lastPersistedGame;\n        const player = game.players[0];\n        const event = ctx.eventDispatcher.eventsByType.get(EventType.PLAYER_MOVED)[0]\n        assert.deepEqual(player.position, new Position(0, 1));\n        assert.equal(event.data.userId, UserExample.first.userId);\n        assert.deepEqual(event.data.position, player.position);\n        assert.deepEqual(event.data.path, path);\n    })\n\n    it ('removes player health when path goes through spikes', () => {\n        ctx.randomResult = 3;\n        const boardWithSpikes = [\n            [Tiles.startingPoint(), Tiles.startingPoint()],\n            [Tiles.path(),          Tiles.startingPoint()],\n            [Tiles.spikes(),        Tiles.path()]\n        ]\n        ctx.startGame(boardWithSpikes);\n        const movement = new contract.DTO.Movement(\n            UserExample.first.userId,\n            UserExample.first.gameId,\n            [\n                new Position(1, 0), \n                new Position(2, 0),\n                new Position(2, 1)\n            ]\n        )\n\n        ctx.gameService.executeMovement(movement);\n\n        const game = ctx.gameRepositorySpy.lastPersistedGame;\n        const event = ctx.eventDispatcher.eventsByType.get(EventType.PLAYER_HIT)[0];\n        assert.equal(game.players[0].hp, 80);\n        assert.equal(event.data.gameId, game.id)\n        assert.equal(event.data.hpTaken, 20);\n        assert.equal(event.data.currentHp, 80);\n    })\n\n    it ('movement finishes turn', () => {\n        ctx.randomResult = 3;\n        const boardWithSpikes = [\n            [Tiles.startingPoint(), Tiles.startingPoint()],\n            [Tiles.path(),          Tiles.startingPoint()],\n            [Tiles.spikes(),        Tiles.path()]\n        ]\n        ctx.startGame(boardWithSpikes);\n        const movement = new contract.DTO.Movement(\n            UserExample.first.userId,\n            UserExample.first.gameId,\n            [\n                new Position(1, 0), \n                new Position(2, 0),\n                new Position(2, 1)\n            ]\n        )\n        \n\n        ctx.gameService.executeMovement(movement);\n\n        const event = ctx.eventDispatcher.eventsByType.get(EventType.NEXT_TURN)[0];\n    \n        assert.equal(event.data.gameId, UserExample.second.gameId);\n        assert.equal(event.data.turn.userId, UserExample.second.userId);\n        assert.equal(event.data.turn.stepPoints, ctx.randomResult);\n    })\n\n    it('sets first player again after last one moved', () => {\n        ctx.randomResult = 1;\n        const board = [\n            [Tiles.startingPoint(), Tiles.startingPoint(), Tiles.startingPoint()],\n            [Tiles.path(), Tiles.path(), Tiles.path()]\n        ]\n        ctx.startGame(board);\n\n        const movement1 = new contract.DTO.Movement(UserExample.first.userId, UserExample.second.gameId, [new Position(1, 0)]);\n        const movement2 = new contract.DTO.Movement(UserExample.second.userId, UserExample.second.gameId, [new Position(1, 1)]);\n        const movement3 = new contract.DTO.Movement(UserExample.third.userId, UserExample.third.gameId, [new Position(1, 2)]);\n\n        ctx.gameService.executeMovement(movement1);\n        ctx.gameService.executeMovement(movement2);\n        ctx.gameService.executeMovement(movement3);\n\n        const event = ctx.eventDispatcher.eventsByType.get(EventType.NEXT_TURN)[2];\n        assert.equal(event.data.turn.userId, UserExample.first.userId);\n    })\n\n    describe('Path', () => {\n        it ('is invalid if its length does not equal current step points', () => {\n            ctx.randomResult = 2;\n            const movement = new contract.DTO.Movement(\n                UserExample.first.userId,\n                UserExample.first.gameId,\n                [new Position(0, 1)]\n            )\n            ctx.startGame(exampleBoard);\n    \n            assert.throws(() => {\n                ctx.gameService.executeMovement(movement);\n            }, (error) => {\n                assert.equal(error.type, ErrorType.INVALID_PATH)\n                return true;\n            })\n        });\n    \n        it ('is invalid if first position is equal to user position', () => {\n            ctx.randomResult = 1;\n            const movement = new contract.DTO.Movement(\n                UserExample.first.userId,\n                UserExample.first.gameId,\n                [new Position(0, 0)]\n            )\n            ctx.startGame(exampleBoard);\n    \n            assert.throws(() => {\n                ctx.gameService.executeMovement(movement);\n            }, (error) => {\n                assert.equal(error.type, ErrorType.INVALID_PATH)\n                return true;\n            })\n        })\n    \n        it ('is invalid if distance to the player position is > 1', () => {\n            ctx.randomResult = 1;\n            const movement  = new contract.DTO.Movement(\n                UserExample.first.userId,\n                UserExample.first.gameId,\n                [new Position(2, 1)]\n            )\n            ctx.startGame(exampleBoard);\n    \n            assert.throws(() => {\n                ctx.gameService.executeMovement(movement);\n            }, (error) => {\n                assert.equal(error.type, ErrorType.INVALID_PATH);\n                return true;\n            })\n        })\n\n        it ('is invalid if first element is position diagonally to the palyer position', () => {\n            ctx.randomResult = 1; \n            const movement = new contract.DTO.Movement(\n                UserExample.first.userId,\n                UserExample.first.gameId,\n                [new Position(1, 1)]\n            )\n            ctx.startGame(exampleBoard);\n\n            assert.throws(() => {\n                ctx.gameService.executeMovement(movement);\n            }, (error) => {\n                assert.equal(error.type, ErrorType.INVALID_PATH);\n                return true;\n            })\n        })\n\n        it ('is invalid if its elemtns are position diagonally to each other', () => {\n            ctx.randomResult = 2;\n            const movement = new contract.DTO.Movement(\n                UserExample.first.userId,\n                UserExample.first.gameId,\n                [new Position(0, 1), new Position(1, 0)]\n            )\n            ctx.startGame(exampleBoard);\n\n            assert.throws(() => {\n                ctx.gameService.executeMovement(movement);\n            }, (error) => {\n                assert.equal(error.type, ErrorType.INVALID_PATH);\n                assert.equal(error.message, \"Path steps are not adjacent\");\n                assert.deepEqual(error.invalidSteps[0], {row: 0, col: 1})\n                assert.deepEqual(error.invalidSteps[1], {row: 1, col: 0})\n                return true;\n            })\n        })\n\n        it ('is not valid if distance between elements is > 1', () => {\n            ctx.randomResult = 2;\n            const movement = new contract.DTO.Movement(\n                UserExample.first.userId,\n                UserExample.first.gameId,\n                [new Position(0, 1), new Position(2, 1)]\n            )\n            ctx.startGame(exampleBoard);\n\n            assert.throws(() => {\n                ctx.gameService.executeMovement(movement);\n            }, (error: InvalidPath) => {\n                console.log(error);\n                assert.equal(error.message, \"Path steps are not adjacent\")\n                assert.equal(error.type, ErrorType.INVALID_PATH);\n                assert.deepEqual(error.invalidSteps[0], {row: 0, col: 1})\n                assert.deepEqual(error.invalidSteps[1], {row: 2, col: 1})\n                return true;\n            })\n        })\n    })\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bede75ed466da0190cae13584b6babcca17edc21","contentHash":"55c6c42a633deca11babddf8c9cdfbb171ea7c4c3b834573a034f21da7a34aff"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/PlayerDeath.test.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/PlayerDeath.test.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":17}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/PlayerDeath.test.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/PlayerDeath.test.ts"],"names":[],"mappings":";;AAAA,iBAAe;AAOf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4DI","sourcesContent":["import 'mocha';\nimport assert from 'assert';\nimport { contract, Tiles } from '../../src/game';\nimport { GameTestContext, UserExample } from './GameTestContext';\nimport { EventType } from '../../src/game/contract/Events';\nimport Position from '../../src/game/contract/dto/Position';\nimport { ErrorType } from 'tr-common/events';\n/*\ndescribe('Player death', () => {\n    const board = [\n        [Tiles.startingPoint(), Tiles.startingPoint(), Tiles.startingPoint()],\n        [Tiles.spikes(),        Tiles.path(),          Tiles.spikes()]\n    ]\n    const ctx = new GameTestContext();\n\n    beforeEach(ctx.initializer());\n\n    it ('should happen when player hp is 0', () => {\n        ctx.randomResult = 2;\n        const player1movement = new contract.DTO.Movement(\n            UserExample.first.userId,\n            UserExample.first.gameId,\n            [\n                new Position(1, 0),\n                new Position(1, 1)\n            ]\n        )   \n\n        const player2movement = new contract.DTO.Movement(\n            UserExample.second.userId,\n            UserExample.second.gameId,\n            [\n                new Position(1, 1),\n                new Position(1, 0)\n            ]\n        )\n\n        ctx.startGame(board);\n        \n        const player1 = ctx.gameRepositorySpy.lastPersistedGame.players[0];\n        const player2 = ctx.gameRepositorySpy.lastPersistedGame.players[1];\n\n        player1.hp = 20;\n        player2.hp = 20;\n\n        ctx.gameService.executeMovement(player1movement);\n        ctx.gameService.executeMovement(player2movement);\n\n        assert.equal(player1.hp, 100);\n        assert.equal(player1.position.row, 0);\n        assert.equal(player1.position.col, 0)\n\n        assert.equal(player2.hp, 100);\n        assert.equal(player2.position.row, 0);\n        assert.equal(player2.position.col, 1);\n\n        const events = ctx.eventDispatcher.eventsByType.get(EventType.PLAYER_DIED);\n        \n        assert.equal(events[0].data.gameId, \"id1\");\n        assert.equal(events[1].data.gameId, \"id1\");\n\n        assert.equal(events[0].data.userId, UserExample.first.userId);\n        assert.equal(events[1].data.userId, UserExample.second.userId);\n\n        assert.deepEqual(events[0].data.movedTo, {row: 0, col: 0});\n        assert.deepEqual(events[1].data.movedTo, {row: 0, col: 1});\n    })\n})*/"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"28019b76baf3e173020c6d6ae1ce4929574c2f22","contentHash":"fc7ff766141b1291e62158bd9ee4d6ce0b6e69adf4c44f3d4e4abdaadfc0331e"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/StartingGame.test.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/StartingGame.test.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":40}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":54}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":58}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":44}},"9":{"start":{"line":12,"column":0},"end":{"line":91,"column":3}},"10":{"start":{"line":13,"column":16},"end":{"line":13,"column":55}},"11":{"start":{"line":14,"column":25},"end":{"line":14,"column":117}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":34}},"13":{"start":{"line":16,"column":4},"end":{"line":25,"column":7}},"14":{"start":{"line":17,"column":8},"end":{"line":24,"column":11}},"15":{"start":{"line":18,"column":12},"end":{"line":18,"column":78}},"16":{"start":{"line":20,"column":12},"end":{"line":20,"column":85}},"17":{"start":{"line":21,"column":12},"end":{"line":21,"column":89}},"18":{"start":{"line":22,"column":12},"end":{"line":22,"column":100}},"19":{"start":{"line":23,"column":12},"end":{"line":23,"column":24}},"20":{"start":{"line":26,"column":4},"end":{"line":51,"column":11}},"21":{"start":{"line":27,"column":24},"end":{"line":27,"column":71}},"22":{"start":{"line":28,"column":8},"end":{"line":28,"column":58}},"23":{"start":{"line":29,"column":8},"end":{"line":36,"column":11}},"24":{"start":{"line":30,"column":12},"end":{"line":30,"column":79}},"25":{"start":{"line":32,"column":12},"end":{"line":32,"column":85}},"26":{"start":{"line":33,"column":12},"end":{"line":33,"column":89}},"27":{"start":{"line":34,"column":12},"end":{"line":34,"column":107}},"28":{"start":{"line":35,"column":12},"end":{"line":35,"column":24}},"29":{"start":{"line":39,"column":28},"end":{"line":39,"column":75}},"30":{"start":{"line":40,"column":12},"end":{"line":40,"column":62}},"31":{"start":{"line":41,"column":12},"end":{"line":41,"column":75}},"32":{"start":{"line":42,"column":12},"end":{"line":50,"column":15}},"33":{"start":{"line":43,"column":16},"end":{"line":43,"column":82}},"34":{"start":{"line":44,"column":16},"end":{"line":44,"column":82}},"35":{"start":{"line":46,"column":16},"end":{"line":46,"column":72}},"36":{"start":{"line":47,"column":16},"end":{"line":47,"column":80}},"37":{"start":{"line":48,"column":16},"end":{"line":48,"column":104}},"38":{"start":{"line":49,"column":16},"end":{"line":49,"column":28}},"39":{"start":{"line":52,"column":4},"end":{"line":66,"column":7}},"40":{"start":{"line":53,"column":24},"end":{"line":53,"column":71}},"41":{"start":{"line":54,"column":8},"end":{"line":54,"column":58}},"42":{"start":{"line":55,"column":8},"end":{"line":55,"column":71}},"43":{"start":{"line":56,"column":8},"end":{"line":56,"column":72}},"44":{"start":{"line":57,"column":8},"end":{"line":57,"column":71}},"45":{"start":{"line":58,"column":8},"end":{"line":58,"column":74}},"46":{"start":{"line":59,"column":8},"end":{"line":59,"column":74}},"47":{"start":{"line":60,"column":23},"end":{"line":60,"column":59}},"48":{"start":{"line":61,"column":8},"end":{"line":61,"column":49}},"49":{"start":{"line":62,"column":8},"end":{"line":62,"column":80}},"50":{"start":{"line":63,"column":8},"end":{"line":63,"column":81}},"51":{"start":{"line":64,"column":8},"end":{"line":64,"column":81}},"52":{"start":{"line":65,"column":8},"end":{"line":65,"column":81}},"53":{"start":{"line":67,"column":4},"end":{"line":71,"column":7}},"54":{"start":{"line":68,"column":8},"end":{"line":68,"column":24}},"55":{"start":{"line":69,"column":28},"end":{"line":69,"column":67}},"56":{"start":{"line":70,"column":8},"end":{"line":70,"column":61}},"57":{"start":{"line":72,"column":4},"end":{"line":77,"column":7}},"58":{"start":{"line":73,"column":8},"end":{"line":73,"column":24}},"59":{"start":{"line":74,"column":23},"end":{"line":74,"column":59}},"60":{"start":{"line":75,"column":8},"end":{"line":75,"column":80}},"61":{"start":{"line":76,"column":8},"end":{"line":76,"column":61}},"62":{"start":{"line":78,"column":4},"end":{"line":90,"column":7}},"63":{"start":{"line":79,"column":8},"end":{"line":79,"column":29}},"64":{"start":{"line":80,"column":29},"end":{"line":84,"column":9}},"65":{"start":{"line":85,"column":8},"end":{"line":85,"column":24}},"66":{"start":{"line":86,"column":21},"end":{"line":86,"column":60}},"67":{"start":{"line":87,"column":22},"end":{"line":87,"column":61}},"68":{"start":{"line":88,"column":8},"end":{"line":88,"column":67}},"69":{"start":{"line":89,"column":8},"end":{"line":89,"column":66}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":30},"end":{"line":12,"column":31}},"loc":{"start":{"line":12,"column":36},"end":{"line":91,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":54},"end":{"line":16,"column":55}},"loc":{"start":{"line":16,"column":60},"end":{"line":25,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":32},"end":{"line":17,"column":33}},"loc":{"start":{"line":17,"column":38},"end":{"line":19,"column":9}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":19,"column":11},"end":{"line":19,"column":12}},"loc":{"start":{"line":19,"column":22},"end":{"line":24,"column":9}},"line":19},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":61},"end":{"line":26,"column":62}},"loc":{"start":{"line":26,"column":67},"end":{"line":37,"column":5}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":29,"column":32},"end":{"line":29,"column":33}},"loc":{"start":{"line":29,"column":38},"end":{"line":31,"column":9}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":11},"end":{"line":31,"column":12}},"loc":{"start":{"line":31,"column":22},"end":{"line":36,"column":9}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":38,"column":52},"end":{"line":38,"column":53}},"loc":{"start":{"line":38,"column":58},"end":{"line":51,"column":9}},"line":38},"9":{"name":"(anonymous_9)","decl":{"start":{"line":42,"column":36},"end":{"line":42,"column":37}},"loc":{"start":{"line":42,"column":42},"end":{"line":45,"column":13}},"line":42},"10":{"name":"(anonymous_10)","decl":{"start":{"line":45,"column":15},"end":{"line":45,"column":16}},"loc":{"start":{"line":45,"column":26},"end":{"line":50,"column":13}},"line":45},"11":{"name":"(anonymous_11)","decl":{"start":{"line":52,"column":66},"end":{"line":52,"column":67}},"loc":{"start":{"line":52,"column":72},"end":{"line":66,"column":5}},"line":52},"12":{"name":"(anonymous_12)","decl":{"start":{"line":67,"column":63},"end":{"line":67,"column":64}},"loc":{"start":{"line":67,"column":69},"end":{"line":71,"column":5}},"line":67},"13":{"name":"(anonymous_13)","decl":{"start":{"line":72,"column":47},"end":{"line":72,"column":48}},"loc":{"start":{"line":72,"column":53},"end":{"line":77,"column":5}},"line":72},"14":{"name":"(anonymous_14)","decl":{"start":{"line":78,"column":40},"end":{"line":78,"column":41}},"loc":{"start":{"line":78,"column":46},"end":{"line":90,"column":5}},"line":78}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/StartingGame.test.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/StartingGame.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'mocha';\nimport assert from 'assert';\nimport { contract, Tiles } from '../../src/game';\nimport { GameTestContext, UserExample } from './GameTestContext';\nimport { EventType } from '../../src/game/contract/Events';\nimport { UserNotFoundInGame, CannotStartGame, ErrorType } from 'tr-common/events';\n\ndescribe('Starting the game', () => {\n    const ctx = new GameTestContext();\n    const defaultBoard = [[Tiles.startingPoint(), Tiles.startingPoint(), Tiles.startingPoint()]];\n    \n    beforeEach(ctx.initializer());\n\n    it ('cannot be done on game that does not exists', () => {\n        assert.throws(() => {\n            ctx.gameService.startRequest(UserExample.first);\n        }, (error) => {\n            assert.equal(error.type, ErrorType.CANNOT_START_GAME);\n            assert.equal(error.reason.type, ErrorType.GAME_NOT_FOUND);\n            assert.equal(error.reason.gameId, UserExample.first.gameId)\n            return true;\n        })\n    })\n\n    it ('cannot be done by the user that is not in the game', () => {\n        const gameDef = new contract.DTO.CreateGame(\"Some Game\");\n        ctx.gameService.createGame(gameDef, defaultBoard);\n\n        assert.throws(() => {\n            ctx.gameService.startRequest(UserExample.second);\n        }, (error) => {\n            assert.equal(error.type, ErrorType.CANNOT_START_GAME);\n            assert.equal(error.reason.type, ErrorType.USER_NOT_FOUND);\n            assert.equal(error.reason.searchedUser, UserExample.second.userId)\n            return true;\n        })\n    }), \n\n    it ('cannot be done by the same user twice', () => {\n        const gameDef = new contract.DTO.CreateGame(\"Some game\");\n        ctx.gameService.createGame(gameDef, defaultBoard); \n\n        ctx.gameService.addPlayer(UserExample.first);\n\n        assert.throws(() => {\n            ctx.gameService.startRequest(UserExample.first);\n            ctx.gameService.startRequest(UserExample.first);\n        }, (error) => {\n            assert.equal(error.type, \"CANNOT START GAME\");\n            assert.equal(error.reason.type, \"GAME STARTED TWICE\")\n            assert.equal(error.reason.userId, UserExample.first.userId);\n            return true;\n        })\n    })\n\n    it ('only can be done when all player request start the game', () => {\n        const gameDef = new contract.DTO.CreateGame(\"some-game\");\n        ctx.gameService.createGame(gameDef, defaultBoard);\n        ctx.gameService.addPlayer(UserExample.first);\n        ctx.gameService.addPlayer(UserExample.second);\n        ctx.gameService.addPlayer(UserExample.third);\n\n        ctx.gameService.startRequest(UserExample.first);\n        ctx.gameService.startRequest(UserExample.third);\n             \n        const events = ctx.eventDispatcher.dispatchedEvents;\n\n        assert.equal(events.length, 4);\n        assert.equal(events[0].type, EventType.GAME_CREATED);\n        assert.equal(events[1].type, EventType.PLAYER_JOINED);\n        assert.equal(events[2].type, EventType.PLAYER_JOINED);\n        assert.equal(events[3].type, EventType.PLAYER_JOINED);\n    })\n\n    it ('changes the game state when all users start the game', () => {\n        ctx.startGame();\n\n        const updatedGame = ctx.gameRepositorySpy.persistedGames[0];\n        assert.equal(updatedGame.state, \"STARTED\");\n    })\n\n    it ('sends the event when game is started', () => {\n        ctx.startGame();\n\n        const events = ctx.eventDispatcher.dispatchedEvents;\n        assert.equal(events[4].type, EventType.GAME_STARTED);\n        assert.equal(events[4].data.gameId, \"id1\")\n    })\n\n    it ('sets turn to the current user', () => {\n        ctx.randomResult = 5\n        const expectedTurn = {\n            userId: UserExample.first.userId,\n            actionPoints: 3, \n            stepPoints: ctx.randomResult\n        }\n        ctx.startGame();\n        \n        const game = ctx.gameRepositorySpy.persistedGames[0];\n        const event = ctx.eventDispatcher.dispatchedEvents[4];\n\n        assert.deepEqual(game.currentTurn, expectedTurn);\n        assert.deepEqual(event.data.turn, expectedTurn);\n    })\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1d6adac89a3a77fb8fe13f12803147854591a75d","contentHash":"8c6fe05e515395ef6e0cf1db3472cb4ea77c6e08d4274567307ba01dc8493177"},"/home/marek/Projects/tomb_racer/back-end/tests/Game/rnd.test.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/tests/Game/rnd.test.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":14},"end":{"line":8,"column":55}},"6":{"start":{"line":9,"column":0},"end":{"line":15,"column":3}},"7":{"start":{"line":10,"column":4},"end":{"line":14,"column":7}},"8":{"start":{"line":11,"column":20},"end":{"line":11,"column":39}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":47}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":47}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":17}},"loc":{"start":{"line":9,"column":22},"end":{"line":15,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":29},"end":{"line":10,"column":30}},"loc":{"start":{"line":10,"column":35},"end":{"line":14,"column":5}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":2,"1":1,"2":1},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/tests/Game/rnd.test.ts","sources":["/home/marek/Projects/tomb_racer/back-end/tests/Game/rnd.test.ts"],"names":[],"mappings":";;;;;AAAA,iBAAe;AACf,oDAA4B;AAC5B,wDAAgC;AAEhC,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;IACjB,EAAE,CAAE,oBAAoB,EAAE,GAAG,EAAE;QAC3B,MAAM,GAAG,GAAG,aAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtB,gBAAM,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QAC7B,gBAAM,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA","sourcesContent":["import 'mocha';\nimport assert from 'assert';\nimport rnd from '../../src/rnd';\n\ndescribe('rnd', () => {\n    it ('result is in ragne', () => {\n        const res = rnd(1, 6);\n\n        assert.equal(true, res >= 1);\n        assert.equal(true, res <= 6);\n    })\n})\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7c361fc80c2a0f331bc853cdf4f1466564f7f2e9","contentHash":"59a91fe6bb0651d936777d75ab702572f713b02d4c6e163204e5d724ebc2bb57"},"/home/marek/Projects/tomb_racer/back-end/src/rnd.ts":{"path":"/home/marek/Projects/tomb_racer/back-end/src/rnd.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":12},"end":{"line":6,"column":1}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":50}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":12},"end":{"line":3,"column":13}},"loc":{"start":{"line":3,"column":28},"end":{"line":6,"column":1}},"line":3}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/marek/Projects/tomb_racer/back-end/src/rnd.ts","sources":["/home/marek/Projects/tomb_racer/back-end/src/rnd.ts"],"names":[],"mappings":";;AACA,MAAM,GAAG,GAAG,CAAC,KAAa,EAAE,GAAW,EAAE,EAAE;IACvC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IAE7B,OAAO,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAA;AAChD,CAAC,CAAA;AAED,kBAAe,GAAG,CAAC","sourcesContent":["\nconst rnd = (start: number, end: number) => {        \n    const random = Math.random();\n\n    return start + Math.round((end -1) * random)\n}\n\nexport default rnd;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9168c1f65745cce5b05ffb077bb55a67591fd12e","contentHash":"69f169b269dfb96962e6a2d5a9791f63765a02c9929ee6361ac5b5a901180324"}}